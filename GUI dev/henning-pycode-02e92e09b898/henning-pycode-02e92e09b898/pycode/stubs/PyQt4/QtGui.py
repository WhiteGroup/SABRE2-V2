# encoding: utf-8
# module PyQt4.QtGui
# from /usr/lib/python2.7/dist-packages/PyQt4/QtGui.so by generator 1.96
# no doc

# imports
import PyQt4.QtCore as __PyQt4_QtCore


# functions

def qAlpha(p_int):  # real signature unknown; restored from __doc__
    """ qAlpha(int) -> int """
    return 0


def qBlue(p_int):  # real signature unknown; restored from __doc__
    """ qBlue(int) -> int """
    return 0


# real signature unknown; restored from __doc__
def qDrawBorderPixmap(QPainter, QRect, QMargins, QPixmap):
    """ qDrawBorderPixmap(QPainter, QRect, QMargins, QPixmap) """
    pass


# real signature unknown; restored from __doc__
def qDrawPlainRect(QPainter, p_int, p_int_1, p_int_2, p_int_3, QColor, int_lineWidth=1, QBrush_fill=None):
    """
    qDrawPlainRect(QPainter, int, int, int, int, QColor, int lineWidth=1, QBrush fill=None)
    qDrawPlainRect(QPainter, QRect, QColor, int lineWidth=1, QBrush fill=None)
    """
    pass


# real signature unknown; restored from __doc__
def qDrawShadeLine(QPainter, p_int, p_int_1, p_int_2, p_int_3, QPalette, bool_sunken=True, int_lineWidth=1, int_midLineWidth=0):
    """
    qDrawShadeLine(QPainter, int, int, int, int, QPalette, bool sunken=True, int lineWidth=1, int midLineWidth=0)
    qDrawShadeLine(QPainter, QPoint, QPoint, QPalette, bool sunken=True, int lineWidth=1, int midLineWidth=0)
    """
    pass


# real signature unknown; restored from __doc__
def qDrawShadePanel(QPainter, p_int, p_int_1, p_int_2, p_int_3, QPalette, bool_sunken=False, int_lineWidth=1, QBrush_fill=None):
    """
    qDrawShadePanel(QPainter, int, int, int, int, QPalette, bool sunken=False, int lineWidth=1, QBrush fill=None)
    qDrawShadePanel(QPainter, QRect, QPalette, bool sunken=False, int lineWidth=1, QBrush fill=None)
    """
    pass


# real signature unknown; restored from __doc__
def qDrawShadeRect(QPainter, p_int, p_int_1, p_int_2, p_int_3, QPalette, bool_sunken=False, int_lineWidth=1, int_midLineWidth=0, QBrush_fill=None):
    """
    qDrawShadeRect(QPainter, int, int, int, int, QPalette, bool sunken=False, int lineWidth=1, int midLineWidth=0, QBrush fill=None)
    qDrawShadeRect(QPainter, QRect, QPalette, bool sunken=False, int lineWidth=1, int midLineWidth=0, QBrush fill=None)
    """
    pass


# real signature unknown; restored from __doc__
def qDrawWinButton(QPainter, p_int, p_int_1, p_int_2, p_int_3, QPalette, bool_sunken=False, QBrush_fill=None):
    """
    qDrawWinButton(QPainter, int, int, int, int, QPalette, bool sunken=False, QBrush fill=None)
    qDrawWinButton(QPainter, QRect, QPalette, bool sunken=False, QBrush fill=None)
    """
    pass


# real signature unknown; restored from __doc__
def qDrawWinPanel(QPainter, p_int, p_int_1, p_int_2, p_int_3, QPalette, bool_sunken=False, QBrush_fill=None):
    """
    qDrawWinPanel(QPainter, int, int, int, int, QPalette, bool sunken=False, QBrush fill=None)
    qDrawWinPanel(QPainter, QRect, QPalette, bool sunken=False, QBrush fill=None)
    """
    pass


# real signature unknown; restored from __doc__
def qFuzzyCompare(QMatrix, QMatrix_1):
    """
    qFuzzyCompare(QMatrix, QMatrix) -> bool
    qFuzzyCompare(QMatrix4x4, QMatrix4x4) -> bool
    qFuzzyCompare(QQuaternion, QQuaternion) -> bool
    qFuzzyCompare(QTransform, QTransform) -> bool
    qFuzzyCompare(QVector2D, QVector2D) -> bool
    qFuzzyCompare(QVector3D, QVector3D) -> bool
    qFuzzyCompare(QVector4D, QVector4D) -> bool
    """
    return False


# real signature unknown; restored from __doc__
def qGray(p_int, p_int_1, p_int_2):
    """
    qGray(int, int, int) -> int
    qGray(int) -> int
    """
    return 0


def qGreen(p_int):  # real signature unknown; restored from __doc__
    """ qGreen(int) -> int """
    return 0


def qIsGray(p_int):  # real signature unknown; restored from __doc__
    """ qIsGray(int) -> bool """
    return False


def qRed(p_int):  # real signature unknown; restored from __doc__
    """ qRed(int) -> int """
    return 0


# real signature unknown; restored from __doc__
def qRgb(p_int, p_int_1, p_int_2):
    """ qRgb(int, int, int) -> int """
    return 0


# real signature unknown; restored from __doc__
def qRgba(p_int, p_int_1, p_int_2, p_int_3):
    """ qRgba(int, int, int, int) -> int """
    return 0


def qSwap(QBitmap, QBitmap_1):  # real signature unknown; restored from __doc__
    """
    qSwap(QBitmap, QBitmap)
    qSwap(QBrush, QBrush)
    qSwap(QIcon, QIcon)
    qSwap(QImage, QImage)
    qSwap(QKeySequence, QKeySequence)
    qSwap(QPen, QPen)
    qSwap(QPicture, QPicture)
    qSwap(QPixmap, QPixmap)
    """
    pass


# real signature unknown; restored from __doc__
def qt_x11_wait_for_window_manager(QWidget):
    """ qt_x11_wait_for_window_manager(QWidget) """
    pass


# classes

class Display():  # skipped bases: <type 'sip.simplewrapper'>
    # no doc

    def __init__(self, *args, **kwargs):  # real signature unknown
        pass

    __weakref__ = property(lambda self: object())  # default


class QPaintDevice():  # skipped bases: <type 'sip.simplewrapper'>

    """ QPaintDevice() """

    def colorCount(self):  # real signature unknown; restored from __doc__
        """ QPaintDevice.colorCount() -> int """
        return 0

    def depth(self):  # real signature unknown; restored from __doc__
        """ QPaintDevice.depth() -> int """
        return 0

    def height(self):  # real signature unknown; restored from __doc__
        """ QPaintDevice.height() -> int """
        return 0

    def heightMM(self):  # real signature unknown; restored from __doc__
        """ QPaintDevice.heightMM() -> int """
        return 0

    def logicalDpiX(self):  # real signature unknown; restored from __doc__
        """ QPaintDevice.logicalDpiX() -> int """
        return 0

    def logicalDpiY(self):  # real signature unknown; restored from __doc__
        """ QPaintDevice.logicalDpiY() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def metric(self, QPaintDevice_PaintDeviceMetric):
        """ QPaintDevice.metric(QPaintDevice.PaintDeviceMetric) -> int """
        return 0

    def numColors(self):  # real signature unknown; restored from __doc__
        """ QPaintDevice.numColors() -> int """
        return 0

    def PaintDeviceMetric(self, *args, **kwargs):  # real signature unknown
        pass

    def paintEngine(self):  # real signature unknown; restored from __doc__
        """ QPaintDevice.paintEngine() -> QPaintEngine """
        return QPaintEngine

    def paintingActive(self):  # real signature unknown; restored from __doc__
        """ QPaintDevice.paintingActive() -> bool """
        return False

    def physicalDpiX(self):  # real signature unknown; restored from __doc__
        """ QPaintDevice.physicalDpiX() -> int """
        return 0

    def physicalDpiY(self):  # real signature unknown; restored from __doc__
        """ QPaintDevice.physicalDpiY() -> int """
        return 0

    def width(self):  # real signature unknown; restored from __doc__
        """ QPaintDevice.width() -> int """
        return 0

    def widthMM(self):  # real signature unknown; restored from __doc__
        """ QPaintDevice.widthMM() -> int """
        return 0

    def __init__(self):  # real signature unknown; restored from __doc__
        pass

    __weakref__ = property(lambda self: object())  # default

    PdmDepth = 6
    PdmDpiX = 7
    PdmDpiY = 8
    PdmHeight = 2
    PdmHeightMM = 4
    PdmNumColors = 5
    PdmPhysicalDpiX = 9
    PdmPhysicalDpiY = 10
    PdmWidth = 1
    PdmWidthMM = 3


class QWidget(__PyQt4_QtCore.QObject, QPaintDevice):

    """ QWidget(QWidget parent=None, Qt.WindowFlags flags=0) """

    def acceptDrops(self):  # real signature unknown; restored from __doc__
        """ QWidget.acceptDrops() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def accessibleDescription(self):
        """ QWidget.accessibleDescription() -> QString """
        pass

    def accessibleName(self):  # real signature unknown; restored from __doc__
        """ QWidget.accessibleName() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def actionEvent(self, QActionEvent):
        """ QWidget.actionEvent(QActionEvent) """
        pass

    def actions(self):  # real signature unknown; restored from __doc__
        """ QWidget.actions() -> list-of-QAction """
        pass

    def activateWindow(self):  # real signature unknown; restored from __doc__
        """ QWidget.activateWindow() """
        pass

    # real signature unknown; restored from __doc__
    def addAction(self, QAction):
        """ QWidget.addAction(QAction) """
        pass

    # real signature unknown; restored from __doc__
    def addActions(self, list_of_QAction):
        """ QWidget.addActions(list-of-QAction) """
        pass

    def adjustSize(self):  # real signature unknown; restored from __doc__
        """ QWidget.adjustSize() """
        pass

    # real signature unknown; restored from __doc__
    def autoFillBackground(self):
        """ QWidget.autoFillBackground() -> bool """
        return False

    def backgroundRole(self):  # real signature unknown; restored from __doc__
        """ QWidget.backgroundRole() -> QPalette.ColorRole """
        pass

    def baseSize(self):  # real signature unknown; restored from __doc__
        """ QWidget.baseSize() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QWidget.changeEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def childAt(self, *__args):
        """
        QWidget.childAt(QPoint) -> QWidget
        QWidget.childAt(int, int) -> QWidget
        """
        return QWidget

    def childrenRect(self):  # real signature unknown; restored from __doc__
        """ QWidget.childrenRect() -> QRect """
        pass

    def childrenRegion(self):  # real signature unknown; restored from __doc__
        """ QWidget.childrenRegion() -> QRegion """
        return QRegion

    def clearFocus(self):  # real signature unknown; restored from __doc__
        """ QWidget.clearFocus() """
        pass

    def clearMask(self):  # real signature unknown; restored from __doc__
        """ QWidget.clearMask() """
        pass

    def close(self):  # real signature unknown; restored from __doc__
        """ QWidget.close() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def closeEvent(self, QCloseEvent):
        """ QWidget.closeEvent(QCloseEvent) """
        pass

    def contentsMargins(self):  # real signature unknown; restored from __doc__
        """ QWidget.contentsMargins() -> QMargins """
        pass

    def contentsRect(self):  # real signature unknown; restored from __doc__
        """ QWidget.contentsRect() -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def contextMenuEvent(self, QContextMenuEvent):
        """ QWidget.contextMenuEvent(QContextMenuEvent) """
        pass

    # real signature unknown; restored from __doc__
    def contextMenuPolicy(self):
        """ QWidget.contextMenuPolicy() -> Qt.ContextMenuPolicy """
        pass

    # real signature unknown; restored from __doc__
    def create(self, int_window=0, bool_initializeWindow=True, bool_destroyOldWindow=True):
        """ QWidget.create(int window=0, bool initializeWindow=True, bool destroyOldWindow=True) """
        pass

    def cursor(self):  # real signature unknown; restored from __doc__
        """ QWidget.cursor() -> QCursor """
        return QCursor

    # real signature unknown
    def customContextMenuRequested(self, *args, **kwargs):
        """ QWidget.customContextMenuRequested[QPoint] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def destroy(self, bool_destroyWindow=True, bool_destroySubWindows=True):
        """ QWidget.destroy(bool destroyWindow=True, bool destroySubWindows=True) """
        pass

    def devType(self):  # real signature unknown; restored from __doc__
        """ QWidget.devType() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def dragEnterEvent(self, QDragEnterEvent):
        """ QWidget.dragEnterEvent(QDragEnterEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragLeaveEvent(self, QDragLeaveEvent):
        """ QWidget.dragLeaveEvent(QDragLeaveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragMoveEvent(self, QDragMoveEvent):
        """ QWidget.dragMoveEvent(QDragMoveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dropEvent(self, QDropEvent):
        """ QWidget.dropEvent(QDropEvent) """
        pass

    def effectiveWinId(self):  # real signature unknown; restored from __doc__
        """ QWidget.effectiveWinId() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def enabledChange(self, bool):
        """ QWidget.enabledChange(bool) """
        pass

    def ensurePolished(self):  # real signature unknown; restored from __doc__
        """ QWidget.ensurePolished() """
        pass

    # real signature unknown; restored from __doc__
    def enterEvent(self, QEvent):
        """ QWidget.enterEvent(QEvent) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QWidget.event(QEvent) -> bool """
        return False

    def find(self, p_int):  # real signature unknown; restored from __doc__
        """ QWidget.find(int) -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QWidget.focusInEvent(QFocusEvent) """
        pass

    def focusNextChild(self):  # real signature unknown; restored from __doc__
        """ QWidget.focusNextChild() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusNextPrevChild(self, bool):
        """ QWidget.focusNextPrevChild(bool) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QWidget.focusOutEvent(QFocusEvent) """
        pass

    def focusPolicy(self):  # real signature unknown; restored from __doc__
        """ QWidget.focusPolicy() -> Qt.FocusPolicy """
        pass

    # real signature unknown; restored from __doc__
    def focusPreviousChild(self):
        """ QWidget.focusPreviousChild() -> bool """
        return False

    def focusProxy(self):  # real signature unknown; restored from __doc__
        """ QWidget.focusProxy() -> QWidget """
        return QWidget

    def focusWidget(self):  # real signature unknown; restored from __doc__
        """ QWidget.focusWidget() -> QWidget """
        return QWidget

    def font(self):  # real signature unknown; restored from __doc__
        """ QWidget.font() -> QFont """
        return QFont

    # real signature unknown; restored from __doc__
    def fontChange(self, QFont):
        """ QWidget.fontChange(QFont) """
        pass

    def fontInfo(self):  # real signature unknown; restored from __doc__
        """ QWidget.fontInfo() -> QFontInfo """
        return QFontInfo

    def fontMetrics(self):  # real signature unknown; restored from __doc__
        """ QWidget.fontMetrics() -> QFontMetrics """
        return QFontMetrics

    def foregroundRole(self):  # real signature unknown; restored from __doc__
        """ QWidget.foregroundRole() -> QPalette.ColorRole """
        pass

    def frameGeometry(self):  # real signature unknown; restored from __doc__
        """ QWidget.frameGeometry() -> QRect """
        pass

    def frameSize(self):  # real signature unknown; restored from __doc__
        """ QWidget.frameSize() -> QSize """
        pass

    def geometry(self):  # real signature unknown; restored from __doc__
        """ QWidget.geometry() -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def getContentsMargins(self):
        """ QWidget.getContentsMargins() -> (int, int, int, int) """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def grabGesture(self, Qt_GestureType, Qt_GestureFlags_flags=None, *args, **kwargs):
        """ QWidget.grabGesture(Qt.GestureType, Qt.GestureFlags flags=Qt.GestureFlags(0)) """
        pass

    def grabKeyboard(self):  # real signature unknown; restored from __doc__
        """ QWidget.grabKeyboard() """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def grabMouse(self, QCursor=None):
        """
        QWidget.grabMouse()
        QWidget.grabMouse(QCursor)
        """
        pass

    # real signature unknown; restored from __doc__
    def grabShortcut(self, QKeySequence, Qt_ShortcutContext_context=None):
        """ QWidget.grabShortcut(QKeySequence, Qt.ShortcutContext context=Qt.WindowShortcut) -> int """
        return 0

    def graphicsEffect(self):  # real signature unknown; restored from __doc__
        """ QWidget.graphicsEffect() -> QGraphicsEffect """
        return QGraphicsEffect

    # real signature unknown; restored from __doc__
    def graphicsProxyWidget(self):
        """ QWidget.graphicsProxyWidget() -> QGraphicsProxyWidget """
        return QGraphicsProxyWidget

    def handle(self):  # real signature unknown; restored from __doc__
        """ QWidget.handle() -> int """
        return 0

    def hasFocus(self):  # real signature unknown; restored from __doc__
        """ QWidget.hasFocus() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def hasMouseTracking(self):
        """ QWidget.hasMouseTracking() -> bool """
        return False

    def height(self):  # real signature unknown; restored from __doc__
        """ QWidget.height() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def heightForWidth(self, p_int):
        """ QWidget.heightForWidth(int) -> int """
        return 0

    def hide(self):  # real signature unknown; restored from __doc__
        """ QWidget.hide() """
        pass

    # real signature unknown; restored from __doc__
    def hideEvent(self, QHideEvent):
        """ QWidget.hideEvent(QHideEvent) """
        pass

    def inputContext(self):  # real signature unknown; restored from __doc__
        """ QWidget.inputContext() -> QInputContext """
        return QInputContext

    # real signature unknown; restored from __doc__
    def inputMethodEvent(self, QInputMethodEvent):
        """ QWidget.inputMethodEvent(QInputMethodEvent) """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodHints(self):
        """ QWidget.inputMethodHints() -> Qt.InputMethodHints """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodQuery(self, Qt_InputMethodQuery):
        """ QWidget.inputMethodQuery(Qt.InputMethodQuery) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def insertAction(self, QAction, QAction_1):
        """ QWidget.insertAction(QAction, QAction) """
        pass

    # real signature unknown; restored from __doc__
    def insertActions(self, QAction, list_of_QAction):
        """ QWidget.insertActions(QAction, list-of-QAction) """
        pass

    def isActiveWindow(self):  # real signature unknown; restored from __doc__
        """ QWidget.isActiveWindow() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isAncestorOf(self, QWidget):
        """ QWidget.isAncestorOf(QWidget) -> bool """
        return False

    def isEnabled(self):  # real signature unknown; restored from __doc__
        """ QWidget.isEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isEnabledTo(self, QWidget):
        """ QWidget.isEnabledTo(QWidget) -> bool """
        return False

    def isEnabledToTLW(self):  # real signature unknown; restored from __doc__
        """ QWidget.isEnabledToTLW() -> bool """
        return False

    def isFullScreen(self):  # real signature unknown; restored from __doc__
        """ QWidget.isFullScreen() -> bool """
        return False

    def isHidden(self):  # real signature unknown; restored from __doc__
        """ QWidget.isHidden() -> bool """
        return False

    def isLeftToRight(self):  # real signature unknown; restored from __doc__
        """ QWidget.isLeftToRight() -> bool """
        return False

    def isMaximized(self):  # real signature unknown; restored from __doc__
        """ QWidget.isMaximized() -> bool """
        return False

    def isMinimized(self):  # real signature unknown; restored from __doc__
        """ QWidget.isMinimized() -> bool """
        return False

    def isModal(self):  # real signature unknown; restored from __doc__
        """ QWidget.isModal() -> bool """
        return False

    def isRightToLeft(self):  # real signature unknown; restored from __doc__
        """ QWidget.isRightToLeft() -> bool """
        return False

    def isTopLevel(self):  # real signature unknown; restored from __doc__
        """ QWidget.isTopLevel() -> bool """
        return False

    def isVisible(self):  # real signature unknown; restored from __doc__
        """ QWidget.isVisible() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isVisibleTo(self, QWidget):
        """ QWidget.isVisibleTo(QWidget) -> bool """
        return False

    def isWindow(self):  # real signature unknown; restored from __doc__
        """ QWidget.isWindow() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isWindowModified(self):
        """ QWidget.isWindowModified() -> bool """
        return False

    def keyboardGrabber(self):  # real signature unknown; restored from __doc__
        """ QWidget.keyboardGrabber() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QWidget.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def keyReleaseEvent(self, QKeyEvent):
        """ QWidget.keyReleaseEvent(QKeyEvent) """
        pass

    def languageChange(self):  # real signature unknown; restored from __doc__
        """ QWidget.languageChange() """
        pass

    def layout(self):  # real signature unknown; restored from __doc__
        """ QWidget.layout() -> QLayout """
        return QLayout

    def layoutDirection(self):  # real signature unknown; restored from __doc__
        """ QWidget.layoutDirection() -> Qt.LayoutDirection """
        pass

    # real signature unknown; restored from __doc__
    def leaveEvent(self, QEvent):
        """ QWidget.leaveEvent(QEvent) """
        pass

    def locale(self):  # real signature unknown; restored from __doc__
        """ QWidget.locale() -> QLocale """
        pass

    def lower(self):  # real signature unknown; restored from __doc__
        """ QWidget.lower() """
        pass

    # real signature unknown; restored from __doc__
    def mapFrom(self, QWidget, QPoint):
        """ QWidget.mapFrom(QWidget, QPoint) -> QPoint """
        pass

    # real signature unknown; restored from __doc__
    def mapFromGlobal(self, QPoint):
        """ QWidget.mapFromGlobal(QPoint) -> QPoint """
        pass

    # real signature unknown; restored from __doc__
    def mapFromParent(self, QPoint):
        """ QWidget.mapFromParent(QPoint) -> QPoint """
        pass

    # real signature unknown; restored from __doc__
    def mapTo(self, QWidget, QPoint):
        """ QWidget.mapTo(QWidget, QPoint) -> QPoint """
        pass

    # real signature unknown; restored from __doc__
    def mapToGlobal(self, QPoint):
        """ QWidget.mapToGlobal(QPoint) -> QPoint """
        pass

    # real signature unknown; restored from __doc__
    def mapToParent(self, QPoint):
        """ QWidget.mapToParent(QPoint) -> QPoint """
        pass

    def mask(self):  # real signature unknown; restored from __doc__
        """ QWidget.mask() -> QRegion """
        return QRegion

    def maximumHeight(self):  # real signature unknown; restored from __doc__
        """ QWidget.maximumHeight() -> int """
        return 0

    def maximumSize(self):  # real signature unknown; restored from __doc__
        """ QWidget.maximumSize() -> QSize """
        pass

    def maximumWidth(self):  # real signature unknown; restored from __doc__
        """ QWidget.maximumWidth() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def metric(self, QPaintDevice_PaintDeviceMetric):
        """ QWidget.metric(QPaintDevice.PaintDeviceMetric) -> int """
        return 0

    def minimumHeight(self):  # real signature unknown; restored from __doc__
        """ QWidget.minimumHeight() -> int """
        return 0

    def minimumSize(self):  # real signature unknown; restored from __doc__
        """ QWidget.minimumSize() -> QSize """
        pass

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QWidget.minimumSizeHint() -> QSize """
        pass

    def minimumWidth(self):  # real signature unknown; restored from __doc__
        """ QWidget.minimumWidth() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def mouseDoubleClickEvent(self, QMouseEvent):
        """ QWidget.mouseDoubleClickEvent(QMouseEvent) """
        pass

    def mouseGrabber(self):  # real signature unknown; restored from __doc__
        """ QWidget.mouseGrabber() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QWidget.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QWidget.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QWidget.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def move(self, *__args):
        """
        QWidget.move(QPoint)
        QWidget.move(int, int)
        """
        pass

    # real signature unknown; restored from __doc__
    def moveEvent(self, QMoveEvent):
        """ QWidget.moveEvent(QMoveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def nativeParentWidget(self):
        """ QWidget.nativeParentWidget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def nextInFocusChain(self):
        """ QWidget.nextInFocusChain() -> QWidget """
        return QWidget

    def normalGeometry(self):  # real signature unknown; restored from __doc__
        """ QWidget.normalGeometry() -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def overrideWindowFlags(self, Qt_WindowFlags):
        """ QWidget.overrideWindowFlags(Qt.WindowFlags) """
        pass

    # real signature unknown; restored from __doc__
    def overrideWindowState(self, Qt_WindowStates):
        """ QWidget.overrideWindowState(Qt.WindowStates) """
        pass

    def paintEngine(self):  # real signature unknown; restored from __doc__
        """ QWidget.paintEngine() -> QPaintEngine """
        return QPaintEngine

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QWidget.paintEvent(QPaintEvent) """
        pass

    def palette(self):  # real signature unknown; restored from __doc__
        """ QWidget.palette() -> QPalette """
        return QPalette

    # real signature unknown; restored from __doc__
    def paletteChange(self, QPalette):
        """ QWidget.paletteChange(QPalette) """
        pass

    def parentWidget(self):  # real signature unknown; restored from __doc__
        """ QWidget.parentWidget() -> QWidget """
        return QWidget

    def pos(self):  # real signature unknown; restored from __doc__
        """ QWidget.pos() -> QPoint """
        pass

    # real signature unknown; restored from __doc__
    def previousInFocusChain(self):
        """ QWidget.previousInFocusChain() -> QWidget """
        return QWidget

    def raise_(self):  # real signature unknown; restored from __doc__
        """ QWidget.raise_() """
        pass

    def rect(self):  # real signature unknown; restored from __doc__
        """ QWidget.rect() -> QRect """
        pass

    def releaseKeyboard(self):  # real signature unknown; restored from __doc__
        """ QWidget.releaseKeyboard() """
        pass

    def releaseMouse(self):  # real signature unknown; restored from __doc__
        """ QWidget.releaseMouse() """
        pass

    # real signature unknown; restored from __doc__
    def releaseShortcut(self, p_int):
        """ QWidget.releaseShortcut(int) """
        pass

    # real signature unknown; restored from __doc__
    def removeAction(self, QAction):
        """ QWidget.removeAction(QAction) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def render(self, *__args):
        """
        QWidget.render(QPaintDevice, QPoint targetOffset=QPoint(), QRegion sourceRegion=QRegion(), QWidget.RenderFlags flags=QWidget.DrawWindowBackground|QWidget.DrawChildren)
        QWidget.render(QPainter, QPoint targetOffset=QPoint(), QRegion sourceRegion=QRegion(), QWidget.RenderFlags flags=QWidget.DrawWindowBackground|QWidget.DrawChildren)
        """
        pass

    def RenderFlag(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def RenderFlags(self, *__args):
        """
        QWidget.RenderFlags(QWidget.RenderFlags)
        QWidget.RenderFlags(int)
        QWidget.RenderFlags()
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def repaint(self, *__args):
        """
        QWidget.repaint()
        QWidget.repaint(int, int, int, int)
        QWidget.repaint(QRect)
        QWidget.repaint(QRegion)
        """
        pass

    # real signature unknown; restored from __doc__
    def resetInputContext(self):
        """ QWidget.resetInputContext() """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def resize(self, *__args):
        """
        QWidget.resize(QSize)
        QWidget.resize(int, int)
        """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QWidget.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def restoreGeometry(self, QByteArray):
        """ QWidget.restoreGeometry(QByteArray) -> bool """
        return False

    def saveGeometry(self):  # real signature unknown; restored from __doc__
        """ QWidget.saveGeometry() -> QByteArray """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def scroll(self, p_int, p_int_1, QRect=None):
        """
        QWidget.scroll(int, int)
        QWidget.scroll(int, int, QRect)
        """
        pass

    # real signature unknown; restored from __doc__
    def setAcceptDrops(self, bool):
        """ QWidget.setAcceptDrops(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setAccessibleDescription(self, QString):
        """ QWidget.setAccessibleDescription(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setAccessibleName(self, QString):
        """ QWidget.setAccessibleName(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setAttribute(self, Qt_WidgetAttribute, bool_on=True):
        """ QWidget.setAttribute(Qt.WidgetAttribute, bool on=True) """
        pass

    # real signature unknown; restored from __doc__
    def setAutoFillBackground(self, bool):
        """ QWidget.setAutoFillBackground(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setBackgroundRole(self, QPalette_ColorRole):
        """ QWidget.setBackgroundRole(QPalette.ColorRole) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setBaseSize(self, *__args):
        """
        QWidget.setBaseSize(int, int)
        QWidget.setBaseSize(QSize)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setContentsMargins(self, *__args):
        """
        QWidget.setContentsMargins(int, int, int, int)
        QWidget.setContentsMargins(QMargins)
        """
        pass

    # real signature unknown; restored from __doc__
    def setContextMenuPolicy(self, Qt_ContextMenuPolicy):
        """ QWidget.setContextMenuPolicy(Qt.ContextMenuPolicy) """
        pass

    # real signature unknown; restored from __doc__
    def setCursor(self, QCursor):
        """ QWidget.setCursor(QCursor) """
        pass

    # real signature unknown; restored from __doc__
    def setDisabled(self, bool):
        """ QWidget.setDisabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setEnabled(self, bool):
        """ QWidget.setEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFixedHeight(self, p_int):
        """ QWidget.setFixedHeight(int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setFixedSize(self, *__args):
        """
        QWidget.setFixedSize(QSize)
        QWidget.setFixedSize(int, int)
        """
        pass

    # real signature unknown; restored from __doc__
    def setFixedWidth(self, p_int):
        """ QWidget.setFixedWidth(int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setFocus(self, Qt_FocusReason=None):
        """
        QWidget.setFocus()
        QWidget.setFocus(Qt.FocusReason)
        """
        pass

    # real signature unknown; restored from __doc__
    def setFocusPolicy(self, Qt_FocusPolicy):
        """ QWidget.setFocusPolicy(Qt.FocusPolicy) """
        pass

    # real signature unknown; restored from __doc__
    def setFocusProxy(self, QWidget):
        """ QWidget.setFocusProxy(QWidget) """
        pass

    def setFont(self, QFont):  # real signature unknown; restored from __doc__
        """ QWidget.setFont(QFont) """
        pass

    # real signature unknown; restored from __doc__
    def setForegroundRole(self, QPalette_ColorRole):
        """ QWidget.setForegroundRole(QPalette.ColorRole) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setGeometry(self, *__args):
        """
        QWidget.setGeometry(QRect)
        QWidget.setGeometry(int, int, int, int)
        """
        pass

    # real signature unknown; restored from __doc__
    def setGraphicsEffect(self, QGraphicsEffect):
        """ QWidget.setGraphicsEffect(QGraphicsEffect) """
        pass

    def setHidden(self, bool):  # real signature unknown; restored from __doc__
        """ QWidget.setHidden(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setInputContext(self, QInputContext):
        """ QWidget.setInputContext(QInputContext) """
        pass

    # real signature unknown; restored from __doc__
    def setInputMethodHints(self, Qt_InputMethodHints):
        """ QWidget.setInputMethodHints(Qt.InputMethodHints) """
        pass

    # real signature unknown; restored from __doc__
    def setLayout(self, QLayout):
        """ QWidget.setLayout(QLayout) """
        pass

    # real signature unknown; restored from __doc__
    def setLayoutDirection(self, Qt_LayoutDirection):
        """ QWidget.setLayoutDirection(Qt.LayoutDirection) """
        pass

    # real signature unknown; restored from __doc__
    def setLocale(self, QLocale):
        """ QWidget.setLocale(QLocale) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setMask(self, *__args):
        """
        QWidget.setMask(QBitmap)
        QWidget.setMask(QRegion)
        """
        pass

    # real signature unknown; restored from __doc__
    def setMaximumHeight(self, p_int):
        """ QWidget.setMaximumHeight(int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setMaximumSize(self, *__args):
        """
        QWidget.setMaximumSize(int, int)
        QWidget.setMaximumSize(QSize)
        """
        pass

    # real signature unknown; restored from __doc__
    def setMaximumWidth(self, p_int):
        """ QWidget.setMaximumWidth(int) """
        pass

    # real signature unknown; restored from __doc__
    def setMinimumHeight(self, p_int):
        """ QWidget.setMinimumHeight(int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setMinimumSize(self, *__args):
        """
        QWidget.setMinimumSize(int, int)
        QWidget.setMinimumSize(QSize)
        """
        pass

    # real signature unknown; restored from __doc__
    def setMinimumWidth(self, p_int):
        """ QWidget.setMinimumWidth(int) """
        pass

    # real signature unknown; restored from __doc__
    def setMouseTracking(self, bool):
        """ QWidget.setMouseTracking(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setPalette(self, QPalette):
        """ QWidget.setPalette(QPalette) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setParent(self, QWidget, Qt_WindowFlags=None):
        """
        QWidget.setParent(QWidget)
        QWidget.setParent(QWidget, Qt.WindowFlags)
        """
        pass

    # real signature unknown; restored from __doc__
    def setShortcutAutoRepeat(self, p_int, bool_enabled=True):
        """ QWidget.setShortcutAutoRepeat(int, bool enabled=True) """
        pass

    # real signature unknown; restored from __doc__
    def setShortcutEnabled(self, p_int, bool_enabled=True):
        """ QWidget.setShortcutEnabled(int, bool enabled=True) """
        pass

    def setShown(self, bool):  # real signature unknown; restored from __doc__
        """ QWidget.setShown(bool) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setSizeIncrement(self, *__args):
        """
        QWidget.setSizeIncrement(int, int)
        QWidget.setSizeIncrement(QSize)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setSizePolicy(self, *__args):
        """
        QWidget.setSizePolicy(QSizePolicy)
        QWidget.setSizePolicy(QSizePolicy.Policy, QSizePolicy.Policy)
        """
        pass

    # real signature unknown; restored from __doc__
    def setStatusTip(self, QString):
        """ QWidget.setStatusTip(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setStyle(self, QStyle):
        """ QWidget.setStyle(QStyle) """
        pass

    # real signature unknown; restored from __doc__
    def setStyleSheet(self, QString):
        """ QWidget.setStyleSheet(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTabOrder(self, QWidget, QWidget_1):
        """ QWidget.setTabOrder(QWidget, QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setToolTip(self, QString):
        """ QWidget.setToolTip(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setUpdatesEnabled(self, bool):
        """ QWidget.setUpdatesEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QWidget.setVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setWhatsThis(self, QString):
        """ QWidget.setWhatsThis(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setWindowFilePath(self, QString):
        """ QWidget.setWindowFilePath(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setWindowFlags(self, Qt_WindowFlags):
        """ QWidget.setWindowFlags(Qt.WindowFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setWindowIcon(self, QIcon):
        """ QWidget.setWindowIcon(QIcon) """
        pass

    # real signature unknown; restored from __doc__
    def setWindowIconText(self, QString):
        """ QWidget.setWindowIconText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setWindowModality(self, Qt_WindowModality):
        """ QWidget.setWindowModality(Qt.WindowModality) """
        pass

    # real signature unknown; restored from __doc__
    def setWindowModified(self, bool):
        """ QWidget.setWindowModified(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setWindowOpacity(self, p_float):
        """ QWidget.setWindowOpacity(float) """
        pass

    # real signature unknown; restored from __doc__
    def setWindowRole(self, QString):
        """ QWidget.setWindowRole(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setWindowState(self, Qt_WindowStates):
        """ QWidget.setWindowState(Qt.WindowStates) """
        pass

    # real signature unknown; restored from __doc__
    def setWindowTitle(self, QString):
        """ QWidget.setWindowTitle(QString) """
        pass

    def show(self):  # real signature unknown; restored from __doc__
        """ QWidget.show() """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QWidget.showEvent(QShowEvent) """
        pass

    def showFullScreen(self):  # real signature unknown; restored from __doc__
        """ QWidget.showFullScreen() """
        pass

    def showMaximized(self):  # real signature unknown; restored from __doc__
        """ QWidget.showMaximized() """
        pass

    def showMinimized(self):  # real signature unknown; restored from __doc__
        """ QWidget.showMinimized() """
        pass

    def showNormal(self):  # real signature unknown; restored from __doc__
        """ QWidget.showNormal() """
        pass

    def size(self):  # real signature unknown; restored from __doc__
        """ QWidget.size() -> QSize """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QWidget.sizeHint() -> QSize """
        pass

    def sizeIncrement(self):  # real signature unknown; restored from __doc__
        """ QWidget.sizeIncrement() -> QSize """
        pass

    def sizePolicy(self):  # real signature unknown; restored from __doc__
        """ QWidget.sizePolicy() -> QSizePolicy """
        return QSizePolicy

    # real signature unknown; restored from __doc__
    def stackUnder(self, QWidget):
        """ QWidget.stackUnder(QWidget) """
        pass

    def statusTip(self):  # real signature unknown; restored from __doc__
        """ QWidget.statusTip() -> QString """
        pass

    def style(self):  # real signature unknown; restored from __doc__
        """ QWidget.style() -> QStyle """
        return QStyle

    def styleSheet(self):  # real signature unknown; restored from __doc__
        """ QWidget.styleSheet() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def tabletEvent(self, QTabletEvent):
        """ QWidget.tabletEvent(QTabletEvent) """
        pass

    # real signature unknown; restored from __doc__
    def testAttribute(self, Qt_WidgetAttribute):
        """ QWidget.testAttribute(Qt.WidgetAttribute) -> bool """
        return False

    def toolTip(self):  # real signature unknown; restored from __doc__
        """ QWidget.toolTip() -> QString """
        pass

    def topLevelWidget(self):  # real signature unknown; restored from __doc__
        """ QWidget.topLevelWidget() -> QWidget """
        return QWidget

    def underMouse(self):  # real signature unknown; restored from __doc__
        """ QWidget.underMouse() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def ungrabGesture(self, Qt_GestureType):
        """ QWidget.ungrabGesture(Qt.GestureType) """
        pass

    def unsetCursor(self):  # real signature unknown; restored from __doc__
        """ QWidget.unsetCursor() """
        pass

    # real signature unknown; restored from __doc__
    def unsetLayoutDirection(self):
        """ QWidget.unsetLayoutDirection() """
        pass

    def unsetLocale(self):  # real signature unknown; restored from __doc__
        """ QWidget.unsetLocale() """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def update(self, *__args):
        """
        QWidget.update()
        QWidget.update(QRect)
        QWidget.update(QRegion)
        QWidget.update(int, int, int, int)
        """
        pass

    def updateGeometry(self):  # real signature unknown; restored from __doc__
        """ QWidget.updateGeometry() """
        pass

    # real signature unknown; restored from __doc__
    def updateMicroFocus(self):
        """ QWidget.updateMicroFocus() """
        pass

    def updatesEnabled(self):  # real signature unknown; restored from __doc__
        """ QWidget.updatesEnabled() -> bool """
        return False

    def visibleRegion(self):  # real signature unknown; restored from __doc__
        """ QWidget.visibleRegion() -> QRegion """
        return QRegion

    def whatsThis(self):  # real signature unknown; restored from __doc__
        """ QWidget.whatsThis() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def wheelEvent(self, QWheelEvent):
        """ QWidget.wheelEvent(QWheelEvent) """
        pass

    def width(self):  # real signature unknown; restored from __doc__
        """ QWidget.width() -> int """
        return 0

    def window(self):  # real signature unknown; restored from __doc__
        """ QWidget.window() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def windowActivationChange(self, bool):
        """ QWidget.windowActivationChange(bool) """
        pass

    def windowFilePath(self):  # real signature unknown; restored from __doc__
        """ QWidget.windowFilePath() -> QString """
        pass

    def windowFlags(self):  # real signature unknown; restored from __doc__
        """ QWidget.windowFlags() -> Qt.WindowFlags """
        pass

    def windowIcon(self):  # real signature unknown; restored from __doc__
        """ QWidget.windowIcon() -> QIcon """
        return QIcon

    def windowIconText(self):  # real signature unknown; restored from __doc__
        """ QWidget.windowIconText() -> QString """
        pass

    def windowModality(self):  # real signature unknown; restored from __doc__
        """ QWidget.windowModality() -> Qt.WindowModality """
        pass

    def windowOpacity(self):  # real signature unknown; restored from __doc__
        """ QWidget.windowOpacity() -> float """
        return 0.0

    def windowRole(self):  # real signature unknown; restored from __doc__
        """ QWidget.windowRole() -> QString """
        pass

    def windowState(self):  # real signature unknown; restored from __doc__
        """ QWidget.windowState() -> Qt.WindowStates """
        pass

    def windowTitle(self):  # real signature unknown; restored from __doc__
        """ QWidget.windowTitle() -> QString """
        pass

    def windowType(self):  # real signature unknown; restored from __doc__
        """ QWidget.windowType() -> Qt.WindowType """
        pass

    def winId(self):  # real signature unknown; restored from __doc__
        """ QWidget.winId() -> int """
        return 0

    def x(self):  # real signature unknown; restored from __doc__
        """ QWidget.x() -> int """
        return 0

    def x11Info(self):  # real signature unknown; restored from __doc__
        """ QWidget.x11Info() -> QX11Info """
        return QX11Info

    # real signature unknown; restored from __doc__
    def x11PictureHandle(self):
        """ QWidget.x11PictureHandle() -> int """
        return 0

    def y(self):  # real signature unknown; restored from __doc__
        """ QWidget.y() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None, Qt_WindowFlags_flags=0):
        pass

    DrawChildren = 2
    DrawWindowBackground = 1
    IgnoreMask = 4


class QAbstractButton(QWidget):

    """ QAbstractButton(QWidget parent=None) """
    # real signature unknown; restored from __doc__

    def animateClick(self, int_msecs=100):
        """ QAbstractButton.animateClick(int msecs=100) """
        pass

    def autoExclusive(self):  # real signature unknown; restored from __doc__
        """ QAbstractButton.autoExclusive() -> bool """
        return False

    def autoRepeat(self):  # real signature unknown; restored from __doc__
        """ QAbstractButton.autoRepeat() -> bool """
        return False

    def autoRepeatDelay(self):  # real signature unknown; restored from __doc__
        """ QAbstractButton.autoRepeatDelay() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def autoRepeatInterval(self):
        """ QAbstractButton.autoRepeatInterval() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QAbstractButton.changeEvent(QEvent) """
        pass

    def checkStateSet(self):  # real signature unknown; restored from __doc__
        """ QAbstractButton.checkStateSet() """
        pass

    def click(self):  # real signature unknown; restored from __doc__
        """ QAbstractButton.click() """
        pass

    def clicked(self, *args, **kwargs):  # real signature unknown
        """
        QAbstractButton.clicked[bool] [signal]
        QAbstractButton.clicked[] [signal]
        """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QAbstractButton.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QAbstractButton.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QAbstractButton.focusOutEvent(QFocusEvent) """
        pass

    def group(self):  # real signature unknown; restored from __doc__
        """ QAbstractButton.group() -> QButtonGroup """
        return QButtonGroup

    # real signature unknown; restored from __doc__
    def hitButton(self, QPoint):
        """ QAbstractButton.hitButton(QPoint) -> bool """
        return False

    def icon(self):  # real signature unknown; restored from __doc__
        """ QAbstractButton.icon() -> QIcon """
        return QIcon

    def iconSize(self):  # real signature unknown; restored from __doc__
        """ QAbstractButton.iconSize() -> QSize """
        pass

    def isCheckable(self):  # real signature unknown; restored from __doc__
        """ QAbstractButton.isCheckable() -> bool """
        return False

    def isChecked(self):  # real signature unknown; restored from __doc__
        """ QAbstractButton.isChecked() -> bool """
        return False

    def isDown(self):  # real signature unknown; restored from __doc__
        """ QAbstractButton.isDown() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QAbstractButton.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def keyReleaseEvent(self, QKeyEvent):
        """ QAbstractButton.keyReleaseEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QAbstractButton.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QAbstractButton.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QAbstractButton.mouseReleaseEvent(QMouseEvent) """
        pass

    def nextCheckState(self):  # real signature unknown; restored from __doc__
        """ QAbstractButton.nextCheckState() """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QAbstractButton.paintEvent(QPaintEvent) """
        pass

    def pressed(self, *args, **kwargs):  # real signature unknown
        """ QAbstractButton.pressed[] [signal] """
        pass

    def released(self, *args, **kwargs):  # real signature unknown
        """ QAbstractButton.released[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def setAutoExclusive(self, bool):
        """ QAbstractButton.setAutoExclusive(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setAutoRepeat(self, bool):
        """ QAbstractButton.setAutoRepeat(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setAutoRepeatDelay(self, p_int):
        """ QAbstractButton.setAutoRepeatDelay(int) """
        pass

    # real signature unknown; restored from __doc__
    def setAutoRepeatInterval(self, p_int):
        """ QAbstractButton.setAutoRepeatInterval(int) """
        pass

    # real signature unknown; restored from __doc__
    def setCheckable(self, bool):
        """ QAbstractButton.setCheckable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setChecked(self, bool):
        """ QAbstractButton.setChecked(bool) """
        pass

    def setDown(self, bool):  # real signature unknown; restored from __doc__
        """ QAbstractButton.setDown(bool) """
        pass

    def setIcon(self, QIcon):  # real signature unknown; restored from __doc__
        """ QAbstractButton.setIcon(QIcon) """
        pass

    # real signature unknown; restored from __doc__
    def setIconSize(self, QSize):
        """ QAbstractButton.setIconSize(QSize) """
        pass

    # real signature unknown; restored from __doc__
    def setShortcut(self, QKeySequence):
        """ QAbstractButton.setShortcut(QKeySequence) """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, QString):
        """ QAbstractButton.setText(QString) """
        pass

    def shortcut(self):  # real signature unknown; restored from __doc__
        """ QAbstractButton.shortcut() -> QKeySequence """
        return QKeySequence

    def text(self):  # real signature unknown; restored from __doc__
        """ QAbstractButton.text() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def timerEvent(self, QTimerEvent):
        """ QAbstractButton.timerEvent(QTimerEvent) """
        pass

    def toggle(self):  # real signature unknown; restored from __doc__
        """ QAbstractButton.toggle() """
        pass

    def toggled(self, *args, **kwargs):  # real signature unknown
        """ QAbstractButton.toggled[bool] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass


class QGraphicsItem():  # skipped bases: <type 'sip.wrapper'>

    """ QGraphicsItem(QGraphicsItem parent=None, QGraphicsScene scene=None) """

    def acceptDrops(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.acceptDrops() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def acceptedMouseButtons(self):
        """ QGraphicsItem.acceptedMouseButtons() -> Qt.MouseButtons """
        pass

    # real signature unknown; restored from __doc__
    def acceptHoverEvents(self):
        """ QGraphicsItem.acceptHoverEvents() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def acceptsHoverEvents(self):
        """ QGraphicsItem.acceptsHoverEvents() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def acceptTouchEvents(self):
        """ QGraphicsItem.acceptTouchEvents() -> bool """
        return False

    def advance(self, p_int):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.advance(int) """
        pass

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.boundingRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def boundingRegion(self, QTransform):
        """ QGraphicsItem.boundingRegion(QTransform) -> QRegion """
        return QRegion

    # real signature unknown; restored from __doc__
    def boundingRegionGranularity(self):
        """ QGraphicsItem.boundingRegionGranularity() -> float """
        return 0.0

    def CacheMode(self, *args, **kwargs):  # real signature unknown
        pass

    def cacheMode(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.cacheMode() -> QGraphicsItem.CacheMode """
        pass

    def childItems(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.childItems() -> list-of-QGraphicsItem """
        pass

    # real signature unknown; restored from __doc__
    def childrenBoundingRect(self):
        """ QGraphicsItem.childrenBoundingRect() -> QRectF """
        pass

    def clearFocus(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.clearFocus() """
        pass

    def clipPath(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.clipPath() -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def collidesWithItem(self, QGraphicsItem, Qt_ItemSelectionMode_mode=None):
        """ QGraphicsItem.collidesWithItem(QGraphicsItem, Qt.ItemSelectionMode mode=Qt.IntersectsItemShape) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def collidesWithPath(self, QPainterPath, Qt_ItemSelectionMode_mode=None):
        """ QGraphicsItem.collidesWithPath(QPainterPath, Qt.ItemSelectionMode mode=Qt.IntersectsItemShape) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def collidingItems(self, Qt_ItemSelectionMode_mode=None):
        """ QGraphicsItem.collidingItems(Qt.ItemSelectionMode mode=Qt.IntersectsItemShape) -> list-of-QGraphicsItem """
        pass

    # real signature unknown; restored from __doc__
    def commonAncestorItem(self, QGraphicsItem):
        """ QGraphicsItem.commonAncestorItem(QGraphicsItem) -> QGraphicsItem """
        return QGraphicsItem

    # real signature unknown; restored from __doc__
    def contains(self, QPointF):
        """ QGraphicsItem.contains(QPointF) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def contextMenuEvent(self, QGraphicsSceneContextMenuEvent):
        """ QGraphicsItem.contextMenuEvent(QGraphicsSceneContextMenuEvent) """
        pass

    def cursor(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.cursor() -> QCursor """
        return QCursor

    def data(self, p_int):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.data(int) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def deviceTransform(self, QTransform):
        """ QGraphicsItem.deviceTransform(QTransform) -> QTransform """
        return QTransform

    # real signature unknown; restored from __doc__
    def dragEnterEvent(self, QGraphicsSceneDragDropEvent):
        """ QGraphicsItem.dragEnterEvent(QGraphicsSceneDragDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragLeaveEvent(self, QGraphicsSceneDragDropEvent):
        """ QGraphicsItem.dragLeaveEvent(QGraphicsSceneDragDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragMoveEvent(self, QGraphicsSceneDragDropEvent):
        """ QGraphicsItem.dragMoveEvent(QGraphicsSceneDragDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dropEvent(self, QGraphicsSceneDragDropEvent):
        """ QGraphicsItem.dropEvent(QGraphicsSceneDragDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def effectiveOpacity(self):
        """ QGraphicsItem.effectiveOpacity() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def ensureVisible(self, *__args):
        """
        QGraphicsItem.ensureVisible(QRectF rect=QRectF(), int xMargin=50, int yMargin=50)
        QGraphicsItem.ensureVisible(float, float, float, float, int xMargin=50, int yMargin=50)
        """
        pass

    # real signature unknown; restored from __doc__
    def filtersChildEvents(self):
        """ QGraphicsItem.filtersChildEvents() -> bool """
        return False

    def flags(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.flags() -> QGraphicsItem.GraphicsItemFlags """
        pass

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QGraphicsItem.focusInEvent(QFocusEvent) """
        pass

    def focusItem(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.focusItem() -> QGraphicsItem """
        return QGraphicsItem

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QGraphicsItem.focusOutEvent(QFocusEvent) """
        pass

    def focusProxy(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.focusProxy() -> QGraphicsItem """
        return QGraphicsItem

    def grabKeyboard(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.grabKeyboard() """
        pass

    def grabMouse(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.grabMouse() """
        pass

    def graphicsEffect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.graphicsEffect() -> QGraphicsEffect """
        return QGraphicsEffect

    def GraphicsItemChange(self, *args, **kwargs):  # real signature unknown
        pass

    def GraphicsItemFlag(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def GraphicsItemFlags(self, *__args):
        """
        QGraphicsItem.GraphicsItemFlags(QGraphicsItem.GraphicsItemFlags)
        QGraphicsItem.GraphicsItemFlags(int)
        QGraphicsItem.GraphicsItemFlags()
        """
        pass

    def group(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.group() -> QGraphicsItemGroup """
        return QGraphicsItemGroup

    # real signature unknown; restored from __doc__
    def handlesChildEvents(self):
        """ QGraphicsItem.handlesChildEvents() -> bool """
        return False

    def hasCursor(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.hasCursor() -> bool """
        return False

    def hasFocus(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.hasFocus() -> bool """
        return False

    def hide(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.hide() """
        pass

    # real signature unknown; restored from __doc__
    def hoverEnterEvent(self, QGraphicsSceneHoverEvent):
        """ QGraphicsItem.hoverEnterEvent(QGraphicsSceneHoverEvent) """
        pass

    # real signature unknown; restored from __doc__
    def hoverLeaveEvent(self, QGraphicsSceneHoverEvent):
        """ QGraphicsItem.hoverLeaveEvent(QGraphicsSceneHoverEvent) """
        pass

    # real signature unknown; restored from __doc__
    def hoverMoveEvent(self, QGraphicsSceneHoverEvent):
        """ QGraphicsItem.hoverMoveEvent(QGraphicsSceneHoverEvent) """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodEvent(self, QInputMethodEvent):
        """ QGraphicsItem.inputMethodEvent(QInputMethodEvent) """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodHints(self):
        """ QGraphicsItem.inputMethodHints() -> Qt.InputMethodHints """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodQuery(self, Qt_InputMethodQuery):
        """ QGraphicsItem.inputMethodQuery(Qt.InputMethodQuery) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def installSceneEventFilter(self, QGraphicsItem):
        """ QGraphicsItem.installSceneEventFilter(QGraphicsItem) """
        pass

    def isActive(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.isActive() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isAncestorOf(self, QGraphicsItem):
        """ QGraphicsItem.isAncestorOf(QGraphicsItem) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isBlockedByModalPanel(self):
        """ QGraphicsItem.isBlockedByModalPanel() -> (bool, QGraphicsItem) """
        pass

    def isClipped(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.isClipped() -> bool """
        return False

    def isEnabled(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.isEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def isObscured(self, *__args):
        """
        QGraphicsItem.isObscured() -> bool
        QGraphicsItem.isObscured(QRectF) -> bool
        QGraphicsItem.isObscured(float, float, float, float) -> bool
        """
        return False

    # real signature unknown; restored from __doc__
    def isObscuredBy(self, QGraphicsItem):
        """ QGraphicsItem.isObscuredBy(QGraphicsItem) -> bool """
        return False

    def isPanel(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.isPanel() -> bool """
        return False

    def isSelected(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.isSelected() -> bool """
        return False

    def isUnderMouse(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.isUnderMouse() -> bool """
        return False

    def isVisible(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.isVisible() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isVisibleTo(self, QGraphicsItem):
        """ QGraphicsItem.isVisibleTo(QGraphicsItem) -> bool """
        return False

    def isWidget(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.isWidget() -> bool """
        return False

    def isWindow(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.isWindow() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def itemChange(self, QGraphicsItem_GraphicsItemChange, QVariant):
        """ QGraphicsItem.itemChange(QGraphicsItem.GraphicsItemChange, QVariant) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def itemTransform(self, QGraphicsItem):
        """ QGraphicsItem.itemTransform(QGraphicsItem) -> (QTransform, bool) """
        pass

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QGraphicsItem.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def keyReleaseEvent(self, QKeyEvent):
        """ QGraphicsItem.keyReleaseEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapFromItem(self, QGraphicsItem, *__args):
        """
        QGraphicsItem.mapFromItem(QGraphicsItem, QPointF) -> QPointF
        QGraphicsItem.mapFromItem(QGraphicsItem, QRectF) -> QPolygonF
        QGraphicsItem.mapFromItem(QGraphicsItem, QPolygonF) -> QPolygonF
        QGraphicsItem.mapFromItem(QGraphicsItem, QPainterPath) -> QPainterPath
        QGraphicsItem.mapFromItem(QGraphicsItem, float, float) -> QPointF
        QGraphicsItem.mapFromItem(QGraphicsItem, float, float, float, float) -> QPolygonF
        """
        return QPolygonF or QPainterPath

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapFromParent(self, *__args):
        """
        QGraphicsItem.mapFromParent(QPointF) -> QPointF
        QGraphicsItem.mapFromParent(QRectF) -> QPolygonF
        QGraphicsItem.mapFromParent(QPolygonF) -> QPolygonF
        QGraphicsItem.mapFromParent(QPainterPath) -> QPainterPath
        QGraphicsItem.mapFromParent(float, float) -> QPointF
        QGraphicsItem.mapFromParent(float, float, float, float) -> QPolygonF
        """
        return QPolygonF or QPainterPath

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapFromScene(self, *__args):
        """
        QGraphicsItem.mapFromScene(QPointF) -> QPointF
        QGraphicsItem.mapFromScene(QRectF) -> QPolygonF
        QGraphicsItem.mapFromScene(QPolygonF) -> QPolygonF
        QGraphicsItem.mapFromScene(QPainterPath) -> QPainterPath
        QGraphicsItem.mapFromScene(float, float) -> QPointF
        QGraphicsItem.mapFromScene(float, float, float, float) -> QPolygonF
        """
        return QPolygonF or QPainterPath

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapRectFromItem(self, QGraphicsItem, *__args):
        """
        QGraphicsItem.mapRectFromItem(QGraphicsItem, QRectF) -> QRectF
        QGraphicsItem.mapRectFromItem(QGraphicsItem, float, float, float, float) -> QRectF
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapRectFromParent(self, *__args):
        """
        QGraphicsItem.mapRectFromParent(QRectF) -> QRectF
        QGraphicsItem.mapRectFromParent(float, float, float, float) -> QRectF
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapRectFromScene(self, *__args):
        """
        QGraphicsItem.mapRectFromScene(QRectF) -> QRectF
        QGraphicsItem.mapRectFromScene(float, float, float, float) -> QRectF
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapRectToItem(self, QGraphicsItem, *__args):
        """
        QGraphicsItem.mapRectToItem(QGraphicsItem, QRectF) -> QRectF
        QGraphicsItem.mapRectToItem(QGraphicsItem, float, float, float, float) -> QRectF
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapRectToParent(self, *__args):
        """
        QGraphicsItem.mapRectToParent(QRectF) -> QRectF
        QGraphicsItem.mapRectToParent(float, float, float, float) -> QRectF
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapRectToScene(self, *__args):
        """
        QGraphicsItem.mapRectToScene(QRectF) -> QRectF
        QGraphicsItem.mapRectToScene(float, float, float, float) -> QRectF
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapToItem(self, QGraphicsItem, *__args):
        """
        QGraphicsItem.mapToItem(QGraphicsItem, QPointF) -> QPointF
        QGraphicsItem.mapToItem(QGraphicsItem, QRectF) -> QPolygonF
        QGraphicsItem.mapToItem(QGraphicsItem, QPolygonF) -> QPolygonF
        QGraphicsItem.mapToItem(QGraphicsItem, QPainterPath) -> QPainterPath
        QGraphicsItem.mapToItem(QGraphicsItem, float, float) -> QPointF
        QGraphicsItem.mapToItem(QGraphicsItem, float, float, float, float) -> QPolygonF
        """
        return QPolygonF or QPainterPath

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapToParent(self, *__args):
        """
        QGraphicsItem.mapToParent(QPointF) -> QPointF
        QGraphicsItem.mapToParent(QRectF) -> QPolygonF
        QGraphicsItem.mapToParent(QPolygonF) -> QPolygonF
        QGraphicsItem.mapToParent(QPainterPath) -> QPainterPath
        QGraphicsItem.mapToParent(float, float) -> QPointF
        QGraphicsItem.mapToParent(float, float, float, float) -> QPolygonF
        """
        return QPolygonF or QPainterPath

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapToScene(self, *__args):
        """
        QGraphicsItem.mapToScene(QPointF) -> QPointF
        QGraphicsItem.mapToScene(QRectF) -> QPolygonF
        QGraphicsItem.mapToScene(QPolygonF) -> QPolygonF
        QGraphicsItem.mapToScene(QPainterPath) -> QPainterPath
        QGraphicsItem.mapToScene(float, float) -> QPointF
        QGraphicsItem.mapToScene(float, float, float, float) -> QPolygonF
        """
        return QPolygonF or QPainterPath

    def matrix(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.matrix() -> QMatrix """
        return QMatrix

    # real signature unknown; restored from __doc__
    def mouseDoubleClickEvent(self, QGraphicsSceneMouseEvent):
        """ QGraphicsItem.mouseDoubleClickEvent(QGraphicsSceneMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QGraphicsSceneMouseEvent):
        """ QGraphicsItem.mouseMoveEvent(QGraphicsSceneMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QGraphicsSceneMouseEvent):
        """ QGraphicsItem.mousePressEvent(QGraphicsSceneMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QGraphicsSceneMouseEvent):
        """ QGraphicsItem.mouseReleaseEvent(QGraphicsSceneMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def moveBy(self, p_float, p_float_1):
        """ QGraphicsItem.moveBy(float, float) """
        pass

    def opacity(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.opacity() -> float """
        return 0.0

    def opaqueArea(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.opaqueArea() -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def paint(self, QPainter, QStyleOptionGraphicsItem, QWidget_widget=None):
        """ QGraphicsItem.paint(QPainter, QStyleOptionGraphicsItem, QWidget widget=None) """
        pass

    def panel(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.panel() -> QGraphicsItem """
        return QGraphicsItem

    def panelModality(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.panelModality() -> QGraphicsItem.PanelModality """
        pass

    def PanelModality(self, *args, **kwargs):  # real signature unknown
        pass

    def parentItem(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.parentItem() -> QGraphicsItem """
        return QGraphicsItem

    def parentObject(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.parentObject() -> QGraphicsObject """
        return QGraphicsObject

    def parentWidget(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.parentWidget() -> QGraphicsWidget """
        return QGraphicsWidget

    def pos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.pos() -> QPointF """
        pass

    # real signature unknown; restored from __doc__
    def prepareGeometryChange(self):
        """ QGraphicsItem.prepareGeometryChange() """
        pass

    # real signature unknown; restored from __doc__
    def removeSceneEventFilter(self, QGraphicsItem):
        """ QGraphicsItem.removeSceneEventFilter(QGraphicsItem) """
        pass

    def resetMatrix(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.resetMatrix() """
        pass

    def resetTransform(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.resetTransform() """
        pass

    def rotate(self, p_float):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.rotate(float) """
        pass

    def rotation(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.rotation() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def scale(self, p_float=None, p_float_1=None):
        """
        QGraphicsItem.scale(float, float)
        QGraphicsItem.scale() -> float
        """
        return 0.0

    def scene(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.scene() -> QGraphicsScene """
        return QGraphicsScene

    # real signature unknown; restored from __doc__
    def sceneBoundingRect(self):
        """ QGraphicsItem.sceneBoundingRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def sceneEvent(self, QEvent):
        """ QGraphicsItem.sceneEvent(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def sceneEventFilter(self, QGraphicsItem, QEvent):
        """ QGraphicsItem.sceneEventFilter(QGraphicsItem, QEvent) -> bool """
        return False

    def sceneMatrix(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.sceneMatrix() -> QMatrix """
        return QMatrix

    def scenePos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.scenePos() -> QPointF """
        pass

    def sceneTransform(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.sceneTransform() -> QTransform """
        return QTransform

    # real signature unknown; NOTE: unreliably restored from __doc__
    def scroll(self, p_float, p_float_1, QRectF_rect=None, *args, **kwargs):
        """ QGraphicsItem.scroll(float, float, QRectF rect=QRectF()) """
        pass

    # real signature unknown; restored from __doc__
    def setAcceptDrops(self, bool):
        """ QGraphicsItem.setAcceptDrops(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setAcceptedMouseButtons(self, Qt_MouseButtons):
        """ QGraphicsItem.setAcceptedMouseButtons(Qt.MouseButtons) """
        pass

    # real signature unknown; restored from __doc__
    def setAcceptHoverEvents(self, bool):
        """ QGraphicsItem.setAcceptHoverEvents(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setAcceptsHoverEvents(self, bool):
        """ QGraphicsItem.setAcceptsHoverEvents(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setAcceptTouchEvents(self, bool):
        """ QGraphicsItem.setAcceptTouchEvents(bool) """
        pass

    def setActive(self, bool):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.setActive(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setBoundingRegionGranularity(self, p_float):
        """ QGraphicsItem.setBoundingRegionGranularity(float) """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def setCacheMode(self, QGraphicsItem_CacheMode, QSize_logicalCacheSize=None, *args, **kwargs):
        """ QGraphicsItem.setCacheMode(QGraphicsItem.CacheMode, QSize logicalCacheSize=QSize()) """
        pass

    # real signature unknown; restored from __doc__
    def setCursor(self, QCursor):
        """ QGraphicsItem.setCursor(QCursor) """
        pass

    # real signature unknown; restored from __doc__
    def setData(self, p_int, QVariant):
        """ QGraphicsItem.setData(int, QVariant) """
        pass

    # real signature unknown; restored from __doc__
    def setEnabled(self, bool):
        """ QGraphicsItem.setEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFiltersChildEvents(self, bool):
        """ QGraphicsItem.setFiltersChildEvents(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFlag(self, QGraphicsItem_GraphicsItemFlag, bool_enabled=True):
        """ QGraphicsItem.setFlag(QGraphicsItem.GraphicsItemFlag, bool enabled=True) """
        pass

    # real signature unknown; restored from __doc__
    def setFlags(self, QGraphicsItem_GraphicsItemFlags):
        """ QGraphicsItem.setFlags(QGraphicsItem.GraphicsItemFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setFocus(self, Qt_FocusReason_focusReason=None):
        """ QGraphicsItem.setFocus(Qt.FocusReason focusReason=Qt.OtherFocusReason) """
        pass

    # real signature unknown; restored from __doc__
    def setFocusProxy(self, QGraphicsItem):
        """ QGraphicsItem.setFocusProxy(QGraphicsItem) """
        pass

    # real signature unknown; restored from __doc__
    def setGraphicsEffect(self, QGraphicsEffect):
        """ QGraphicsItem.setGraphicsEffect(QGraphicsEffect) """
        pass

    # real signature unknown; restored from __doc__
    def setGroup(self, QGraphicsItemGroup):
        """ QGraphicsItem.setGroup(QGraphicsItemGroup) """
        pass

    # real signature unknown; restored from __doc__
    def setHandlesChildEvents(self, bool):
        """ QGraphicsItem.setHandlesChildEvents(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setInputMethodHints(self, Qt_InputMethodHints):
        """ QGraphicsItem.setInputMethodHints(Qt.InputMethodHints) """
        pass

    # real signature unknown; restored from __doc__
    def setMatrix(self, QMatrix, bool_combine=False):
        """ QGraphicsItem.setMatrix(QMatrix, bool combine=False) """
        pass

    # real signature unknown; restored from __doc__
    def setOpacity(self, p_float):
        """ QGraphicsItem.setOpacity(float) """
        pass

    # real signature unknown; restored from __doc__
    def setPanelModality(self, QGraphicsItem_PanelModality):
        """ QGraphicsItem.setPanelModality(QGraphicsItem.PanelModality) """
        pass

    # real signature unknown; restored from __doc__
    def setParentItem(self, QGraphicsItem):
        """ QGraphicsItem.setParentItem(QGraphicsItem) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setPos(self, *__args):
        """
        QGraphicsItem.setPos(QPointF)
        QGraphicsItem.setPos(float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def setRotation(self, p_float):
        """ QGraphicsItem.setRotation(float) """
        pass

    # real signature unknown; restored from __doc__
    def setScale(self, p_float):
        """ QGraphicsItem.setScale(float) """
        pass

    # real signature unknown; restored from __doc__
    def setSelected(self, bool):
        """ QGraphicsItem.setSelected(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setToolTip(self, QString):
        """ QGraphicsItem.setToolTip(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTransform(self, QTransform, bool_combine=False):
        """ QGraphicsItem.setTransform(QTransform, bool combine=False) """
        pass

    # real signature unknown; restored from __doc__
    def setTransformations(self, list_of_QGraphicsTransform):
        """ QGraphicsItem.setTransformations(list-of-QGraphicsTransform) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setTransformOriginPoint(self, *__args):
        """
        QGraphicsItem.setTransformOriginPoint(QPointF)
        QGraphicsItem.setTransformOriginPoint(float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QGraphicsItem.setVisible(bool) """
        pass

    def setX(self, p_float):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.setX(float) """
        pass

    def setY(self, p_float):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.setY(float) """
        pass

    # real signature unknown; restored from __doc__
    def setZValue(self, p_float):
        """ QGraphicsItem.setZValue(float) """
        pass

    def shape(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.shape() -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def shear(self, p_float, p_float_1):
        """ QGraphicsItem.shear(float, float) """
        pass

    def show(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.show() """
        pass

    # real signature unknown; restored from __doc__
    def stackBefore(self, QGraphicsItem):
        """ QGraphicsItem.stackBefore(QGraphicsItem) """
        pass

    # real signature unknown; restored from __doc__
    def toGraphicsObject(self):
        """ QGraphicsItem.toGraphicsObject() -> QGraphicsObject """
        return QGraphicsObject

    def toolTip(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.toolTip() -> QString """
        pass

    def topLevelItem(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.topLevelItem() -> QGraphicsItem """
        return QGraphicsItem

    def topLevelWidget(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.topLevelWidget() -> QGraphicsWidget """
        return QGraphicsWidget

    def transform(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.transform() -> QTransform """
        return QTransform

    def transformations(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.transformations() -> list-of-QGraphicsTransform """
        pass

    # real signature unknown; restored from __doc__
    def transformOriginPoint(self):
        """ QGraphicsItem.transformOriginPoint() -> QPointF """
        pass

    # real signature unknown; restored from __doc__
    def translate(self, p_float, p_float_1):
        """ QGraphicsItem.translate(float, float) """
        pass

    def type(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.type() -> int """
        return 0

    def ungrabKeyboard(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.ungrabKeyboard() """
        pass

    def ungrabMouse(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.ungrabMouse() """
        pass

    def unsetCursor(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.unsetCursor() """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def update(self, *__args):
        """
        QGraphicsItem.update(QRectF rect=QRectF())
        QGraphicsItem.update(float, float, float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def updateMicroFocus(self):
        """ QGraphicsItem.updateMicroFocus() """
        pass

    # real signature unknown; restored from __doc__
    def wheelEvent(self, QGraphicsSceneWheelEvent):
        """ QGraphicsItem.wheelEvent(QGraphicsSceneWheelEvent) """
        pass

    def window(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.window() -> QGraphicsWidget """
        return QGraphicsWidget

    def x(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.x() -> float """
        return 0.0

    def y(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.y() -> float """
        return 0.0

    def zValue(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItem.zValue() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def __init__(self, QGraphicsItem_parent=None, QGraphicsScene_scene=None):
        pass

    __weakref__ = property(lambda self: object())  # default

    DeviceCoordinateCache = 2
    ItemAcceptsInputMethod = 4096
    ItemChildAddedChange = 6
    ItemChildRemovedChange = 7
    ItemClipsChildrenToShape = 16
    ItemClipsToShape = 8
    ItemCoordinateCache = 1
    ItemCursorChange = 17
    ItemCursorHasChanged = 18
    ItemDoesntPropagateOpacityToChildren = 128
    ItemEnabledChange = 3
    ItemEnabledHasChanged = 13
    ItemFlagsChange = 21
    ItemFlagsHaveChanged = 22
    ItemHasNoContents = 1024
    ItemIgnoresParentOpacity = 64
    ItemIgnoresTransformations = 32
    ItemIsFocusable = 4
    ItemIsMovable = 1
    ItemIsPanel = 16384
    ItemIsSelectable = 2
    ItemMatrixChange = 1
    ItemNegativeZStacksBehindParent = 8192
    ItemOpacityChange = 25
    ItemOpacityHasChanged = 26
    ItemParentChange = 5
    ItemParentHasChanged = 15
    ItemPositionChange = 0
    ItemPositionHasChanged = 9
    ItemRotationChange = 28
    ItemRotationHasChanged = 29
    ItemScaleChange = 30
    ItemScaleHasChanged = 31
    ItemSceneChange = 11
    ItemSceneHasChanged = 16
    ItemScenePositionHasChanged = 27
    ItemSelectedChange = 4
    ItemSelectedHasChanged = 14
    ItemSendsGeometryChanges = 2048
    ItemSendsScenePositionChanges = 65536
    ItemStacksBehindParent = 256
    ItemToolTipChange = 19
    ItemToolTipHasChanged = 20
    ItemTransformChange = 8
    ItemTransformHasChanged = 10
    ItemTransformOriginPointChange = 32
    ItemTransformOriginPointHasChanged = 33
    ItemUsesExtendedStyleOption = 512
    ItemVisibleChange = 2
    ItemVisibleHasChanged = 12
    ItemZValueChange = 23
    ItemZValueHasChanged = 24
    NoCache = 0
    NonModal = 0
    PanelModal = 1
    SceneModal = 2
    UserType = 65536


class QAbstractGraphicsShapeItem(QGraphicsItem):

    """ QAbstractGraphicsShapeItem(QGraphicsItem parent=None, QGraphicsScene scene=None) """

    def brush(self):  # real signature unknown; restored from __doc__
        """ QAbstractGraphicsShapeItem.brush() -> QBrush """
        return QBrush

    # real signature unknown; restored from __doc__
    def isObscuredBy(self, QGraphicsItem):
        """ QAbstractGraphicsShapeItem.isObscuredBy(QGraphicsItem) -> bool """
        return False

    def opaqueArea(self):  # real signature unknown; restored from __doc__
        """ QAbstractGraphicsShapeItem.opaqueArea() -> QPainterPath """
        return QPainterPath

    def pen(self):  # real signature unknown; restored from __doc__
        """ QAbstractGraphicsShapeItem.pen() -> QPen """
        return QPen

    # real signature unknown; restored from __doc__
    def setBrush(self, QBrush):
        """ QAbstractGraphicsShapeItem.setBrush(QBrush) """
        pass

    def setPen(self, QPen):  # real signature unknown; restored from __doc__
        """ QAbstractGraphicsShapeItem.setPen(QPen) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QGraphicsItem_parent=None, QGraphicsScene_scene=None):
        pass


class QAbstractItemDelegate(__PyQt4_QtCore.QObject):

    """ QAbstractItemDelegate(QObject parent=None) """

    def closeEditor(self, *args, **kwargs):  # real signature unknown
        """
        QAbstractItemDelegate.closeEditor[QWidget, QAbstractItemDelegate.EndEditHint] [signal]
        QAbstractItemDelegate.closeEditor[QWidget] [signal]
        """
        pass

    def commitData(self, *args, **kwargs):  # real signature unknown
        """ QAbstractItemDelegate.commitData[QWidget] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def createEditor(self, QWidget, QStyleOptionViewItem, QModelIndex):
        """ QAbstractItemDelegate.createEditor(QWidget, QStyleOptionViewItem, QModelIndex) -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def editorEvent(self, QEvent, QAbstractItemModel, QStyleOptionViewItem, QModelIndex):
        """ QAbstractItemDelegate.editorEvent(QEvent, QAbstractItemModel, QStyleOptionViewItem, QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def elidedText(self, QFontMetrics, p_int, Qt_TextElideMode, QString):
        """ QAbstractItemDelegate.elidedText(QFontMetrics, int, Qt.TextElideMode, QString) -> QString """
        pass

    def EndEditHint(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def helpEvent(self, QHelpEvent, QAbstractItemView, QStyleOptionViewItem, QModelIndex):
        """ QAbstractItemDelegate.helpEvent(QHelpEvent, QAbstractItemView, QStyleOptionViewItem, QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def paint(self, QPainter, QStyleOptionViewItem, QModelIndex):
        """ QAbstractItemDelegate.paint(QPainter, QStyleOptionViewItem, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def setEditorData(self, QWidget, QModelIndex):
        """ QAbstractItemDelegate.setEditorData(QWidget, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def setModelData(self, QWidget, QAbstractItemModel, QModelIndex):
        """ QAbstractItemDelegate.setModelData(QWidget, QAbstractItemModel, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def sizeHint(self, QStyleOptionViewItem, QModelIndex):
        """ QAbstractItemDelegate.sizeHint(QStyleOptionViewItem, QModelIndex) -> QSize """
        pass

    def sizeHintChanged(self, *args, **kwargs):  # real signature unknown
        """ QAbstractItemDelegate.sizeHintChanged[QModelIndex] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def updateEditorGeometry(self, QWidget, QStyleOptionViewItem, QModelIndex):
        """ QAbstractItemDelegate.updateEditorGeometry(QWidget, QStyleOptionViewItem, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass

    EditNextItem = 1
    EditPreviousItem = 2
    NoHint = 0
    RevertModelCache = 4
    SubmitModelCache = 3


class QFrame(QWidget):

    """ QFrame(QWidget parent=None, Qt.WindowFlags flags=0) """
    # real signature unknown; restored from __doc__

    def changeEvent(self, QEvent):
        """ QFrame.changeEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def drawFrame(self, QPainter):
        """ QFrame.drawFrame(QPainter) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QFrame.event(QEvent) -> bool """
        return False

    def frameRect(self):  # real signature unknown; restored from __doc__
        """ QFrame.frameRect() -> QRect """
        pass

    def frameShadow(self):  # real signature unknown; restored from __doc__
        """ QFrame.frameShadow() -> QFrame.Shadow """
        pass

    def frameShape(self):  # real signature unknown; restored from __doc__
        """ QFrame.frameShape() -> QFrame.Shape """
        pass

    def frameStyle(self):  # real signature unknown; restored from __doc__
        """ QFrame.frameStyle() -> int """
        return 0

    def frameWidth(self):  # real signature unknown; restored from __doc__
        """ QFrame.frameWidth() -> int """
        return 0

    def lineWidth(self):  # real signature unknown; restored from __doc__
        """ QFrame.lineWidth() -> int """
        return 0

    def midLineWidth(self):  # real signature unknown; restored from __doc__
        """ QFrame.midLineWidth() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QFrame.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setFrameRect(self, QRect):
        """ QFrame.setFrameRect(QRect) """
        pass

    # real signature unknown; restored from __doc__
    def setFrameShadow(self, QFrame_Shadow):
        """ QFrame.setFrameShadow(QFrame.Shadow) """
        pass

    # real signature unknown; restored from __doc__
    def setFrameShape(self, QFrame_Shape):
        """ QFrame.setFrameShape(QFrame.Shape) """
        pass

    # real signature unknown; restored from __doc__
    def setFrameStyle(self, p_int):
        """ QFrame.setFrameStyle(int) """
        pass

    # real signature unknown; restored from __doc__
    def setLineWidth(self, p_int):
        """ QFrame.setLineWidth(int) """
        pass

    # real signature unknown; restored from __doc__
    def setMidLineWidth(self, p_int):
        """ QFrame.setMidLineWidth(int) """
        pass

    def Shadow(self, *args, **kwargs):  # real signature unknown
        pass

    def Shape(self, *args, **kwargs):  # real signature unknown
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QFrame.sizeHint() -> QSize """
        pass

    def StyleMask(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None, Qt_WindowFlags_flags=0):
        pass

    Box = 1
    HLine = 4
    NoFrame = 0
    Panel = 2
    Plain = 16
    Raised = 32
    Shadow_Mask = 240
    Shape_Mask = 15
    StyledPanel = 6
    Sunken = 48
    VLine = 5
    WinPanel = 3


class QAbstractScrollArea(QFrame):

    """ QAbstractScrollArea(QWidget parent=None) """
    # real signature unknown; restored from __doc__

    def addScrollBarWidget(self, QWidget, Qt_Alignment):
        """ QAbstractScrollArea.addScrollBarWidget(QWidget, Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def contextMenuEvent(self, QContextMenuEvent):
        """ QAbstractScrollArea.contextMenuEvent(QContextMenuEvent) """
        pass

    def cornerWidget(self):  # real signature unknown; restored from __doc__
        """ QAbstractScrollArea.cornerWidget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def dragEnterEvent(self, QDragEnterEvent):
        """ QAbstractScrollArea.dragEnterEvent(QDragEnterEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragLeaveEvent(self, QDragLeaveEvent):
        """ QAbstractScrollArea.dragLeaveEvent(QDragLeaveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragMoveEvent(self, QDragMoveEvent):
        """ QAbstractScrollArea.dragMoveEvent(QDragMoveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dropEvent(self, QDropEvent):
        """ QAbstractScrollArea.dropEvent(QDropEvent) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QAbstractScrollArea.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def horizontalScrollBar(self):
        """ QAbstractScrollArea.horizontalScrollBar() -> QScrollBar """
        return QScrollBar

    # real signature unknown; restored from __doc__
    def horizontalScrollBarPolicy(self):
        """ QAbstractScrollArea.horizontalScrollBarPolicy() -> Qt.ScrollBarPolicy """
        pass

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QAbstractScrollArea.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def maximumViewportSize(self):
        """ QAbstractScrollArea.maximumViewportSize() -> QSize """
        pass

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QAbstractScrollArea.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def mouseDoubleClickEvent(self, QMouseEvent):
        """ QAbstractScrollArea.mouseDoubleClickEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QAbstractScrollArea.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QAbstractScrollArea.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QAbstractScrollArea.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QAbstractScrollArea.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QAbstractScrollArea.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def scrollBarWidgets(self, Qt_Alignment):
        """ QAbstractScrollArea.scrollBarWidgets(Qt.Alignment) -> list-of-QWidget """
        pass

    # real signature unknown; restored from __doc__
    def scrollContentsBy(self, p_int, p_int_1):
        """ QAbstractScrollArea.scrollContentsBy(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setCornerWidget(self, QWidget):
        """ QAbstractScrollArea.setCornerWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setHorizontalScrollBar(self, QScrollBar):
        """ QAbstractScrollArea.setHorizontalScrollBar(QScrollBar) """
        pass

    # real signature unknown; restored from __doc__
    def setHorizontalScrollBarPolicy(self, Qt_ScrollBarPolicy):
        """ QAbstractScrollArea.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy) """
        pass

    # real signature unknown; restored from __doc__
    def setupViewport(self, QWidget):
        """ QAbstractScrollArea.setupViewport(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalScrollBar(self, QScrollBar):
        """ QAbstractScrollArea.setVerticalScrollBar(QScrollBar) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalScrollBarPolicy(self, Qt_ScrollBarPolicy):
        """ QAbstractScrollArea.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy) """
        pass

    # real signature unknown; restored from __doc__
    def setViewport(self, QWidget):
        """ QAbstractScrollArea.setViewport(QWidget) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setViewportMargins(self, *__args):
        """
        QAbstractScrollArea.setViewportMargins(int, int, int, int)
        QAbstractScrollArea.setViewportMargins(QMargins)
        """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QAbstractScrollArea.sizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def verticalScrollBar(self):
        """ QAbstractScrollArea.verticalScrollBar() -> QScrollBar """
        return QScrollBar

    # real signature unknown; restored from __doc__
    def verticalScrollBarPolicy(self):
        """ QAbstractScrollArea.verticalScrollBarPolicy() -> Qt.ScrollBarPolicy """
        pass

    def viewport(self):  # real signature unknown; restored from __doc__
        """ QAbstractScrollArea.viewport() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def viewportEvent(self, QEvent):
        """ QAbstractScrollArea.viewportEvent(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def wheelEvent(self, QWheelEvent):
        """ QAbstractScrollArea.wheelEvent(QWheelEvent) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass


class QAbstractItemView(QAbstractScrollArea):

    """ QAbstractItemView(QWidget parent=None) """

    def activated(self, *args, **kwargs):  # real signature unknown
        """ QAbstractItemView.activated[QModelIndex] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def alternatingRowColors(self):
        """ QAbstractItemView.alternatingRowColors() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def autoScrollMargin(self):
        """ QAbstractItemView.autoScrollMargin() -> int """
        return 0

    def clearSelection(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.clearSelection() """
        pass

    def clicked(self, *args, **kwargs):  # real signature unknown
        """ QAbstractItemView.clicked[QModelIndex] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def closeEditor(self, QWidget, QAbstractItemDelegate_EndEditHint):
        """ QAbstractItemView.closeEditor(QWidget, QAbstractItemDelegate.EndEditHint) """
        pass

    # real signature unknown; restored from __doc__
    def closePersistentEditor(self, QModelIndex):
        """ QAbstractItemView.closePersistentEditor(QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def commitData(self, QWidget):
        """ QAbstractItemView.commitData(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def currentChanged(self, QModelIndex, QModelIndex_1):
        """ QAbstractItemView.currentChanged(QModelIndex, QModelIndex) """
        pass

    def currentIndex(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.currentIndex() -> QModelIndex """
        pass

    def CursorAction(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def dataChanged(self, QModelIndex, QModelIndex_1):
        """ QAbstractItemView.dataChanged(QModelIndex, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def defaultDropAction(self):
        """ QAbstractItemView.defaultDropAction() -> Qt.DropAction """
        pass

    # real signature unknown; restored from __doc__
    def dirtyRegionOffset(self):
        """ QAbstractItemView.dirtyRegionOffset() -> QPoint """
        pass

    def doItemsLayout(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.doItemsLayout() """
        pass

    def doubleClicked(self, *args, **kwargs):  # real signature unknown
        """ QAbstractItemView.doubleClicked[QModelIndex] [signal] """
        pass

    def DragDropMode(self, *args, **kwargs):  # real signature unknown
        pass

    def dragDropMode(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.dragDropMode() -> QAbstractItemView.DragDropMode """
        pass

    # real signature unknown; restored from __doc__
    def dragDropOverwriteMode(self):
        """ QAbstractItemView.dragDropOverwriteMode() -> bool """
        return False

    def dragEnabled(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.dragEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def dragEnterEvent(self, QDragEnterEvent):
        """ QAbstractItemView.dragEnterEvent(QDragEnterEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragLeaveEvent(self, QDragLeaveEvent):
        """ QAbstractItemView.dragLeaveEvent(QDragLeaveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragMoveEvent(self, QDragMoveEvent):
        """ QAbstractItemView.dragMoveEvent(QDragMoveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dropEvent(self, QDropEvent):
        """ QAbstractItemView.dropEvent(QDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dropIndicatorPosition(self):
        """ QAbstractItemView.dropIndicatorPosition() -> QAbstractItemView.DropIndicatorPosition """
        pass

    def DropIndicatorPosition(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def edit(self, QModelIndex, QAbstractItemView_EditTrigger=None, QEvent=None):
        """
        QAbstractItemView.edit(QModelIndex)
        QAbstractItemView.edit(QModelIndex, QAbstractItemView.EditTrigger, QEvent) -> bool
        """
        return False

    # real signature unknown; restored from __doc__
    def editorDestroyed(self, QObject):
        """ QAbstractItemView.editorDestroyed(QObject) """
        pass

    def EditTrigger(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def EditTriggers(self, *__args):
        """
        QAbstractItemView.EditTriggers(QAbstractItemView.EditTriggers)
        QAbstractItemView.EditTriggers(int)
        QAbstractItemView.EditTriggers()
        """
        pass

    def editTriggers(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.editTriggers() -> QAbstractItemView.EditTriggers """
        pass

    def entered(self, *args, **kwargs):  # real signature unknown
        """ QAbstractItemView.entered[QModelIndex] [signal] """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def executeDelayedItemsLayout(self):
        """ QAbstractItemView.executeDelayedItemsLayout() """
        pass

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QAbstractItemView.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusNextPrevChild(self, bool):
        """ QAbstractItemView.focusNextPrevChild(bool) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QAbstractItemView.focusOutEvent(QFocusEvent) """
        pass

    def hasAutoScroll(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.hasAutoScroll() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def horizontalOffset(self):
        """ QAbstractItemView.horizontalOffset() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def horizontalScrollbarAction(self, p_int):
        """ QAbstractItemView.horizontalScrollbarAction(int) """
        pass

    # real signature unknown; restored from __doc__
    def horizontalScrollbarValueChanged(self, p_int):
        """ QAbstractItemView.horizontalScrollbarValueChanged(int) """
        pass

    # real signature unknown; restored from __doc__
    def horizontalScrollMode(self):
        """ QAbstractItemView.horizontalScrollMode() -> QAbstractItemView.ScrollMode """
        pass

    # real signature unknown; restored from __doc__
    def horizontalStepsPerItem(self):
        """ QAbstractItemView.horizontalStepsPerItem() -> int """
        return 0

    def iconSize(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.iconSize() -> QSize """
        pass

    def indexAt(self, QPoint):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.indexAt(QPoint) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def indexWidget(self, QModelIndex):
        """ QAbstractItemView.indexWidget(QModelIndex) -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def inputMethodEvent(self, QInputMethodEvent):
        """ QAbstractItemView.inputMethodEvent(QInputMethodEvent) """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodQuery(self, Qt_InputMethodQuery):
        """ QAbstractItemView.inputMethodQuery(Qt.InputMethodQuery) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def isIndexHidden(self, QModelIndex):
        """ QAbstractItemView.isIndexHidden(QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def itemDelegate(self, QModelIndex=None):
        """
        QAbstractItemView.itemDelegate() -> QAbstractItemDelegate
        QAbstractItemView.itemDelegate(QModelIndex) -> QAbstractItemDelegate
        """
        return QAbstractItemDelegate

    # real signature unknown; restored from __doc__
    def itemDelegateForColumn(self, p_int):
        """ QAbstractItemView.itemDelegateForColumn(int) -> QAbstractItemDelegate """
        return QAbstractItemDelegate

    # real signature unknown; restored from __doc__
    def itemDelegateForRow(self, p_int):
        """ QAbstractItemView.itemDelegateForRow(int) -> QAbstractItemDelegate """
        return QAbstractItemDelegate

    # real signature unknown; restored from __doc__
    def keyboardSearch(self, QString):
        """ QAbstractItemView.keyboardSearch(QString) """
        pass

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QAbstractItemView.keyPressEvent(QKeyEvent) """
        pass

    def model(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.model() -> QAbstractItemModel """
        pass

    # real signature unknown; restored from __doc__
    def mouseDoubleClickEvent(self, QMouseEvent):
        """ QAbstractItemView.mouseDoubleClickEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QAbstractItemView.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QAbstractItemView.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QAbstractItemView.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def moveCursor(self, QAbstractItemView_CursorAction, Qt_KeyboardModifiers):
        """ QAbstractItemView.moveCursor(QAbstractItemView.CursorAction, Qt.KeyboardModifiers) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def openPersistentEditor(self, QModelIndex):
        """ QAbstractItemView.openPersistentEditor(QModelIndex) """
        pass

    def pressed(self, *args, **kwargs):  # real signature unknown
        """ QAbstractItemView.pressed[QModelIndex] [signal] """
        pass

    def reset(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.reset() """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QAbstractItemView.resizeEvent(QResizeEvent) """
        pass

    def rootIndex(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.rootIndex() -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def rowsAboutToBeRemoved(self, QModelIndex, p_int, p_int_1):
        """ QAbstractItemView.rowsAboutToBeRemoved(QModelIndex, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def rowsInserted(self, QModelIndex, p_int, p_int_1):
        """ QAbstractItemView.rowsInserted(QModelIndex, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def scheduleDelayedItemsLayout(self):
        """ QAbstractItemView.scheduleDelayedItemsLayout() """
        pass

    # real signature unknown; restored from __doc__
    def scrollDirtyRegion(self, p_int, p_int_1):
        """ QAbstractItemView.scrollDirtyRegion(int, int) """
        pass

    def ScrollHint(self, *args, **kwargs):  # real signature unknown
        pass

    def ScrollMode(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def scrollTo(self, QModelIndex, QAbstractItemView_ScrollHint_hint=None):
        """ QAbstractItemView.scrollTo(QModelIndex, QAbstractItemView.ScrollHint hint=QAbstractItemView.EnsureVisible) """
        pass

    def scrollToBottom(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.scrollToBottom() """
        pass

    def scrollToTop(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.scrollToTop() """
        pass

    def selectAll(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.selectAll() """
        pass

    def selectedIndexes(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.selectedIndexes() -> list-of-QModelIndex """
        pass

    def SelectionBehavior(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def selectionBehavior(self):
        """ QAbstractItemView.selectionBehavior() -> QAbstractItemView.SelectionBehavior """
        pass

    # real signature unknown; restored from __doc__
    def selectionChanged(self, QItemSelection, QItemSelection_1):
        """ QAbstractItemView.selectionChanged(QItemSelection, QItemSelection) """
        pass

    # real signature unknown; restored from __doc__
    def selectionCommand(self, QModelIndex, QEvent_event=None):
        """ QAbstractItemView.selectionCommand(QModelIndex, QEvent event=None) -> QItemSelectionModel.SelectionFlags """
        pass

    def SelectionMode(self, *args, **kwargs):  # real signature unknown
        pass

    def selectionMode(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.selectionMode() -> QAbstractItemView.SelectionMode """
        pass

    def selectionModel(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.selectionModel() -> QItemSelectionModel """
        return QItemSelectionModel

    # real signature unknown; restored from __doc__
    def setAlternatingRowColors(self, bool):
        """ QAbstractItemView.setAlternatingRowColors(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setAutoScroll(self, bool):
        """ QAbstractItemView.setAutoScroll(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setAutoScrollMargin(self, p_int):
        """ QAbstractItemView.setAutoScrollMargin(int) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentIndex(self, QModelIndex):
        """ QAbstractItemView.setCurrentIndex(QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def setDefaultDropAction(self, Qt_DropAction):
        """ QAbstractItemView.setDefaultDropAction(Qt.DropAction) """
        pass

    # real signature unknown; restored from __doc__
    def setDirtyRegion(self, QRegion):
        """ QAbstractItemView.setDirtyRegion(QRegion) """
        pass

    # real signature unknown; restored from __doc__
    def setDragDropMode(self, QAbstractItemView_DragDropMode):
        """ QAbstractItemView.setDragDropMode(QAbstractItemView.DragDropMode) """
        pass

    # real signature unknown; restored from __doc__
    def setDragDropOverwriteMode(self, bool):
        """ QAbstractItemView.setDragDropOverwriteMode(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setDragEnabled(self, bool):
        """ QAbstractItemView.setDragEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setDropIndicatorShown(self, bool):
        """ QAbstractItemView.setDropIndicatorShown(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setEditTriggers(self, QAbstractItemView_EditTriggers):
        """ QAbstractItemView.setEditTriggers(QAbstractItemView.EditTriggers) """
        pass

    # real signature unknown; restored from __doc__
    def setHorizontalScrollMode(self, QAbstractItemView_ScrollMode):
        """ QAbstractItemView.setHorizontalScrollMode(QAbstractItemView.ScrollMode) """
        pass

    # real signature unknown; restored from __doc__
    def setHorizontalStepsPerItem(self, p_int):
        """ QAbstractItemView.setHorizontalStepsPerItem(int) """
        pass

    # real signature unknown; restored from __doc__
    def setIconSize(self, QSize):
        """ QAbstractItemView.setIconSize(QSize) """
        pass

    # real signature unknown; restored from __doc__
    def setIndexWidget(self, QModelIndex, QWidget):
        """ QAbstractItemView.setIndexWidget(QModelIndex, QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setItemDelegate(self, QAbstractItemDelegate):
        """ QAbstractItemView.setItemDelegate(QAbstractItemDelegate) """
        pass

    # real signature unknown; restored from __doc__
    def setItemDelegateForColumn(self, p_int, QAbstractItemDelegate):
        """ QAbstractItemView.setItemDelegateForColumn(int, QAbstractItemDelegate) """
        pass

    # real signature unknown; restored from __doc__
    def setItemDelegateForRow(self, p_int, QAbstractItemDelegate):
        """ QAbstractItemView.setItemDelegateForRow(int, QAbstractItemDelegate) """
        pass

    # real signature unknown; restored from __doc__
    def setModel(self, QAbstractItemModel):
        """ QAbstractItemView.setModel(QAbstractItemModel) """
        pass

    # real signature unknown; restored from __doc__
    def setRootIndex(self, QModelIndex):
        """ QAbstractItemView.setRootIndex(QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def setSelection(self, QRect, QItemSelectionModel_SelectionFlags):
        """ QAbstractItemView.setSelection(QRect, QItemSelectionModel.SelectionFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setSelectionBehavior(self, QAbstractItemView_SelectionBehavior):
        """ QAbstractItemView.setSelectionBehavior(QAbstractItemView.SelectionBehavior) """
        pass

    # real signature unknown; restored from __doc__
    def setSelectionMode(self, QAbstractItemView_SelectionMode):
        """ QAbstractItemView.setSelectionMode(QAbstractItemView.SelectionMode) """
        pass

    # real signature unknown; restored from __doc__
    def setSelectionModel(self, QItemSelectionModel):
        """ QAbstractItemView.setSelectionModel(QItemSelectionModel) """
        pass

    # real signature unknown; restored from __doc__
    def setState(self, QAbstractItemView_State):
        """ QAbstractItemView.setState(QAbstractItemView.State) """
        pass

    # real signature unknown; restored from __doc__
    def setTabKeyNavigation(self, bool):
        """ QAbstractItemView.setTabKeyNavigation(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setTextElideMode(self, Qt_TextElideMode):
        """ QAbstractItemView.setTextElideMode(Qt.TextElideMode) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalScrollMode(self, QAbstractItemView_ScrollMode):
        """ QAbstractItemView.setVerticalScrollMode(QAbstractItemView.ScrollMode) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalStepsPerItem(self, p_int):
        """ QAbstractItemView.setVerticalStepsPerItem(int) """
        pass

    # real signature unknown; restored from __doc__
    def showDropIndicator(self):
        """ QAbstractItemView.showDropIndicator() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def sizeHintForColumn(self, p_int):
        """ QAbstractItemView.sizeHintForColumn(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def sizeHintForIndex(self, QModelIndex):
        """ QAbstractItemView.sizeHintForIndex(QModelIndex) -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def sizeHintForRow(self, p_int):
        """ QAbstractItemView.sizeHintForRow(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def startDrag(self, Qt_DropActions):
        """ QAbstractItemView.startDrag(Qt.DropActions) """
        pass

    def State(self, *args, **kwargs):  # real signature unknown
        pass

    def state(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.state() -> QAbstractItemView.State """
        pass

    # real signature unknown; restored from __doc__
    def tabKeyNavigation(self):
        """ QAbstractItemView.tabKeyNavigation() -> bool """
        return False

    def textElideMode(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.textElideMode() -> Qt.TextElideMode """
        pass

    # real signature unknown; restored from __doc__
    def timerEvent(self, QTimerEvent):
        """ QAbstractItemView.timerEvent(QTimerEvent) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def update(self, QModelIndex=None):
        """
        QAbstractItemView.update()
        QAbstractItemView.update(QModelIndex)
        """
        pass

    # real signature unknown; restored from __doc__
    def updateEditorData(self):
        """ QAbstractItemView.updateEditorData() """
        pass

    # real signature unknown; restored from __doc__
    def updateEditorGeometries(self):
        """ QAbstractItemView.updateEditorGeometries() """
        pass

    # real signature unknown; restored from __doc__
    def updateGeometries(self):
        """ QAbstractItemView.updateGeometries() """
        pass

    def verticalOffset(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.verticalOffset() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def verticalScrollbarAction(self, p_int):
        """ QAbstractItemView.verticalScrollbarAction(int) """
        pass

    # real signature unknown; restored from __doc__
    def verticalScrollbarValueChanged(self, p_int):
        """ QAbstractItemView.verticalScrollbarValueChanged(int) """
        pass

    # real signature unknown; restored from __doc__
    def verticalScrollMode(self):
        """ QAbstractItemView.verticalScrollMode() -> QAbstractItemView.ScrollMode """
        pass

    # real signature unknown; restored from __doc__
    def verticalStepsPerItem(self):
        """ QAbstractItemView.verticalStepsPerItem() -> int """
        return 0

    def viewOptions(self):  # real signature unknown; restored from __doc__
        """ QAbstractItemView.viewOptions() -> QStyleOptionViewItem """
        return QStyleOptionViewItem

    def viewportEntered(self, *args, **kwargs):  # real signature unknown
        """ QAbstractItemView.viewportEntered[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def viewportEvent(self, QEvent):
        """ QAbstractItemView.viewportEvent(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def visualRect(self, QModelIndex):
        """ QAbstractItemView.visualRect(QModelIndex) -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def visualRegionForSelection(self, QItemSelection):
        """ QAbstractItemView.visualRegionForSelection(QItemSelection) -> QRegion """
        return QRegion

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    AboveItem = 1
    AllEditTriggers = 31
    AnimatingState = 6
    AnyKeyPressed = 16
    BelowItem = 2
    CollapsingState = 5
    ContiguousSelection = 4
    CurrentChanged = 1
    DoubleClicked = 2
    DragDrop = 3
    DraggingState = 1
    DragOnly = 1
    DragSelectingState = 2
    DropOnly = 2
    EditingState = 3
    EditKeyPressed = 8
    EnsureVisible = 0
    ExpandingState = 4
    ExtendedSelection = 3
    InternalMove = 4
    MoveDown = 1
    MoveEnd = 5
    MoveHome = 4
    MoveLeft = 2
    MoveNext = 8
    MovePageDown = 7
    MovePageUp = 6
    MovePrevious = 9
    MoveRight = 3
    MoveUp = 0
    MultiSelection = 2
    NoDragDrop = 0
    NoEditTriggers = 0
    NoSelection = 0
    NoState = 0
    OnItem = 0
    OnViewport = 3
    PositionAtBottom = 2
    PositionAtCenter = 3
    PositionAtTop = 1
    ScrollPerItem = 0
    ScrollPerPixel = 1
    SelectColumns = 2
    SelectedClicked = 4
    SelectItems = 0
    SelectRows = 1
    SingleSelection = 1


class QDialog(QWidget):

    """ QDialog(QWidget parent=None, Qt.WindowFlags flags=0) """

    def accept(self):  # real signature unknown; restored from __doc__
        """ QDialog.accept() """
        pass

    def accepted(self, *args, **kwargs):  # real signature unknown
        """ QDialog.accepted[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def closeEvent(self, QCloseEvent):
        """ QDialog.closeEvent(QCloseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def contextMenuEvent(self, QContextMenuEvent):
        """ QDialog.contextMenuEvent(QContextMenuEvent) """
        pass

    def DialogCode(self, *args, **kwargs):  # real signature unknown
        pass

    def done(self, p_int):  # real signature unknown; restored from __doc__
        """ QDialog.done(int) """
        pass

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QDialog.eventFilter(QObject, QEvent) -> bool """
        return False

    def exec_(self):  # real signature unknown; restored from __doc__
        """ QDialog.exec_() -> int """
        return 0

    def extension(self):  # real signature unknown; restored from __doc__
        """ QDialog.extension() -> QWidget """
        return QWidget

    def finished(self, *args, **kwargs):  # real signature unknown
        """ QDialog.finished[int] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def isSizeGripEnabled(self):
        """ QDialog.isSizeGripEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QDialog.keyPressEvent(QKeyEvent) """
        pass

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QDialog.minimumSizeHint() -> QSize """
        pass

    def open(self):  # real signature unknown; restored from __doc__
        """ QDialog.open() """
        pass

    def orientation(self):  # real signature unknown; restored from __doc__
        """ QDialog.orientation() -> Qt.Orientation """
        pass

    def reject(self):  # real signature unknown; restored from __doc__
        """ QDialog.reject() """
        pass

    def rejected(self, *args, **kwargs):  # real signature unknown
        """ QDialog.rejected[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QDialog.resizeEvent(QResizeEvent) """
        pass

    def result(self):  # real signature unknown; restored from __doc__
        """ QDialog.result() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setExtension(self, QWidget):
        """ QDialog.setExtension(QWidget) """
        pass

    def setModal(self, bool):  # real signature unknown; restored from __doc__
        """ QDialog.setModal(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setOrientation(self, Qt_Orientation):
        """ QDialog.setOrientation(Qt.Orientation) """
        pass

    # real signature unknown; restored from __doc__
    def setResult(self, p_int):
        """ QDialog.setResult(int) """
        pass

    # real signature unknown; restored from __doc__
    def setSizeGripEnabled(self, bool):
        """ QDialog.setSizeGripEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QDialog.setVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QDialog.showEvent(QShowEvent) """
        pass

    # real signature unknown; restored from __doc__
    def showExtension(self, bool):
        """ QDialog.showExtension(bool) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QDialog.sizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None, Qt_WindowFlags_flags=0):
        pass

    Accepted = 1
    Rejected = 0


class QAbstractPrintDialog(QDialog):

    """ QAbstractPrintDialog(QPrinter, QWidget parent=None) """
    # real signature unknown; restored from __doc__

    def addEnabledOption(self, QAbstractPrintDialog_PrintDialogOption):
        """ QAbstractPrintDialog.addEnabledOption(QAbstractPrintDialog.PrintDialogOption) """
        pass

    def enabledOptions(self):  # real signature unknown; restored from __doc__
        """ QAbstractPrintDialog.enabledOptions() -> QAbstractPrintDialog.PrintDialogOptions """
        pass

    def exec_(self):  # real signature unknown; restored from __doc__
        """ QAbstractPrintDialog.exec_() -> int """
        return 0

    def fromPage(self):  # real signature unknown; restored from __doc__
        """ QAbstractPrintDialog.fromPage() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def isOptionEnabled(self, QAbstractPrintDialog_PrintDialogOption):
        """ QAbstractPrintDialog.isOptionEnabled(QAbstractPrintDialog.PrintDialogOption) -> bool """
        return False

    def maxPage(self):  # real signature unknown; restored from __doc__
        """ QAbstractPrintDialog.maxPage() -> int """
        return 0

    def minPage(self):  # real signature unknown; restored from __doc__
        """ QAbstractPrintDialog.minPage() -> int """
        return 0

    def PrintDialogOption(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def PrintDialogOptions(self, *__args):
        """
        QAbstractPrintDialog.PrintDialogOptions(QAbstractPrintDialog.PrintDialogOptions)
        QAbstractPrintDialog.PrintDialogOptions(int)
        QAbstractPrintDialog.PrintDialogOptions()
        """
        pass

    def printer(self):  # real signature unknown; restored from __doc__
        """ QAbstractPrintDialog.printer() -> QPrinter """
        return QPrinter

    def PrintRange(self, *args, **kwargs):  # real signature unknown
        pass

    def printRange(self):  # real signature unknown; restored from __doc__
        """ QAbstractPrintDialog.printRange() -> QAbstractPrintDialog.PrintRange """
        pass

    # real signature unknown; restored from __doc__
    def setEnabledOptions(self, QAbstractPrintDialog_PrintDialogOptions):
        """ QAbstractPrintDialog.setEnabledOptions(QAbstractPrintDialog.PrintDialogOptions) """
        pass

    # real signature unknown; restored from __doc__
    def setFromTo(self, p_int, p_int_1):
        """ QAbstractPrintDialog.setFromTo(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setMinMax(self, p_int, p_int_1):
        """ QAbstractPrintDialog.setMinMax(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setOptionTabs(self, list_of_QWidget):
        """ QAbstractPrintDialog.setOptionTabs(list-of-QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setPrintRange(self, QAbstractPrintDialog_PrintRange):
        """ QAbstractPrintDialog.setPrintRange(QAbstractPrintDialog.PrintRange) """
        pass

    def toPage(self):  # real signature unknown; restored from __doc__
        """ QAbstractPrintDialog.toPage() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def __init__(self, QPrinter, QWidget_parent=None):
        pass

    AllPages = 0
    CurrentPage = 3
    DontUseSheet = 32
    None = 0
    PageRange = 2
    PrintCollateCopies = 16
    PrintCurrentPage = 64
    PrintPageRange = 4
    PrintSelection = 2
    PrintShowPageSize = 8
    PrintToFile = 1
    Selection = 1


class QAbstractProxyModel(__PyQt4_QtCore.QAbstractItemModel):

    """ QAbstractProxyModel(QObject parent=None) """
    # real signature unknown; restored from __doc__

    def data(self, QModelIndex, int_role=None):
        """ QAbstractProxyModel.data(QModelIndex, int role=Qt.DisplayRole) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def flags(self, QModelIndex):
        """ QAbstractProxyModel.flags(QModelIndex) -> Qt.ItemFlags """
        pass

    # real signature unknown; restored from __doc__
    def headerData(self, p_int, Qt_Orientation, p_int_1):
        """ QAbstractProxyModel.headerData(int, Qt.Orientation, int) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def itemData(self, QModelIndex):
        """ QAbstractProxyModel.itemData(QModelIndex) -> dict-of-int-QVariant """
        pass

    # real signature unknown; restored from __doc__
    def mapFromSource(self, QModelIndex):
        """ QAbstractProxyModel.mapFromSource(QModelIndex) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def mapSelectionFromSource(self, QItemSelection):
        """ QAbstractProxyModel.mapSelectionFromSource(QItemSelection) -> QItemSelection """
        return QItemSelection

    # real signature unknown; restored from __doc__
    def mapSelectionToSource(self, QItemSelection):
        """ QAbstractProxyModel.mapSelectionToSource(QItemSelection) -> QItemSelection """
        return QItemSelection

    # real signature unknown; restored from __doc__
    def mapToSource(self, QModelIndex):
        """ QAbstractProxyModel.mapToSource(QModelIndex) -> QModelIndex """
        pass

    def revert(self):  # real signature unknown; restored from __doc__
        """ QAbstractProxyModel.revert() """
        pass

    # real signature unknown; restored from __doc__
    def setData(self, QModelIndex, QVariant, int_role=None):
        """ QAbstractProxyModel.setData(QModelIndex, QVariant, int role=Qt.EditRole) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setHeaderData(self, p_int, Qt_Orientation, QVariant, int_role=None):
        """ QAbstractProxyModel.setHeaderData(int, Qt.Orientation, QVariant, int role=Qt.EditRole) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setSourceModel(self, QAbstractItemModel):
        """ QAbstractProxyModel.setSourceModel(QAbstractItemModel) """
        pass

    def sourceModel(self):  # real signature unknown; restored from __doc__
        """ QAbstractProxyModel.sourceModel() -> QAbstractItemModel """
        pass

    def submit(self):  # real signature unknown; restored from __doc__
        """ QAbstractProxyModel.submit() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QAbstractSlider(QWidget):

    """ QAbstractSlider(QWidget parent=None) """

    def actionTriggered(self, *args, **kwargs):  # real signature unknown
        """ QAbstractSlider.actionTriggered[int] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QAbstractSlider.changeEvent(QEvent) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QAbstractSlider.event(QEvent) -> bool """
        return False

    def hasTracking(self):  # real signature unknown; restored from __doc__
        """ QAbstractSlider.hasTracking() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def invertedAppearance(self):
        """ QAbstractSlider.invertedAppearance() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def invertedControls(self):
        """ QAbstractSlider.invertedControls() -> bool """
        return False

    def isSliderDown(self):  # real signature unknown; restored from __doc__
        """ QAbstractSlider.isSliderDown() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QAbstractSlider.keyPressEvent(QKeyEvent) """
        pass

    def maximum(self):  # real signature unknown; restored from __doc__
        """ QAbstractSlider.maximum() -> int """
        return 0

    def minimum(self):  # real signature unknown; restored from __doc__
        """ QAbstractSlider.minimum() -> int """
        return 0

    def orientation(self):  # real signature unknown; restored from __doc__
        """ QAbstractSlider.orientation() -> Qt.Orientation """
        pass

    def pageStep(self):  # real signature unknown; restored from __doc__
        """ QAbstractSlider.pageStep() -> int """
        return 0

    def rangeChanged(self, *args, **kwargs):  # real signature unknown
        """ QAbstractSlider.rangeChanged[int, int] [signal] """
        pass

    def repeatAction(self):  # real signature unknown; restored from __doc__
        """ QAbstractSlider.repeatAction() -> QAbstractSlider.SliderAction """
        pass

    # real signature unknown; restored from __doc__
    def setInvertedAppearance(self, bool):
        """ QAbstractSlider.setInvertedAppearance(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setInvertedControls(self, bool):
        """ QAbstractSlider.setInvertedControls(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setMaximum(self, p_int):
        """ QAbstractSlider.setMaximum(int) """
        pass

    # real signature unknown; restored from __doc__
    def setMinimum(self, p_int):
        """ QAbstractSlider.setMinimum(int) """
        pass

    # real signature unknown; restored from __doc__
    def setOrientation(self, Qt_Orientation):
        """ QAbstractSlider.setOrientation(Qt.Orientation) """
        pass

    # real signature unknown; restored from __doc__
    def setPageStep(self, p_int):
        """ QAbstractSlider.setPageStep(int) """
        pass

    # real signature unknown; restored from __doc__
    def setRange(self, p_int, p_int_1):
        """ QAbstractSlider.setRange(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setRepeatAction(self, QAbstractSlider_SliderAction, int_thresholdTime=500, int_repeatTime=50):
        """ QAbstractSlider.setRepeatAction(QAbstractSlider.SliderAction, int thresholdTime=500, int repeatTime=50) """
        pass

    # real signature unknown; restored from __doc__
    def setSingleStep(self, p_int):
        """ QAbstractSlider.setSingleStep(int) """
        pass

    # real signature unknown; restored from __doc__
    def setSliderDown(self, bool):
        """ QAbstractSlider.setSliderDown(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSliderPosition(self, p_int):
        """ QAbstractSlider.setSliderPosition(int) """
        pass

    # real signature unknown; restored from __doc__
    def setTracking(self, bool):
        """ QAbstractSlider.setTracking(bool) """
        pass

    def setValue(self, p_int):  # real signature unknown; restored from __doc__
        """ QAbstractSlider.setValue(int) """
        pass

    def singleStep(self):  # real signature unknown; restored from __doc__
        """ QAbstractSlider.singleStep() -> int """
        return 0

    def SliderAction(self, *args, **kwargs):  # real signature unknown
        pass

    def SliderChange(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def sliderChange(self, QAbstractSlider_SliderChange):
        """ QAbstractSlider.sliderChange(QAbstractSlider.SliderChange) """
        pass

    def sliderMoved(self, *args, **kwargs):  # real signature unknown
        """ QAbstractSlider.sliderMoved[int] [signal] """
        pass

    def sliderPosition(self):  # real signature unknown; restored from __doc__
        """ QAbstractSlider.sliderPosition() -> int """
        return 0

    def sliderPressed(self, *args, **kwargs):  # real signature unknown
        """ QAbstractSlider.sliderPressed[] [signal] """
        pass

    def sliderReleased(self, *args, **kwargs):  # real signature unknown
        """ QAbstractSlider.sliderReleased[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def timerEvent(self, QTimerEvent):
        """ QAbstractSlider.timerEvent(QTimerEvent) """
        pass

    # real signature unknown; restored from __doc__
    def triggerAction(self, QAbstractSlider_SliderAction):
        """ QAbstractSlider.triggerAction(QAbstractSlider.SliderAction) """
        pass

    def value(self):  # real signature unknown; restored from __doc__
        """ QAbstractSlider.value() -> int """
        return 0

    def valueChanged(self, *args, **kwargs):  # real signature unknown
        """ QAbstractSlider.valueChanged[int] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def wheelEvent(self, QWheelEvent):
        """ QAbstractSlider.wheelEvent(QWheelEvent) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    SliderMove = 7
    SliderNoAction = 0
    SliderOrientationChange = 1
    SliderPageStepAdd = 3
    SliderPageStepSub = 4
    SliderRangeChange = 0
    SliderSingleStepAdd = 1
    SliderSingleStepSub = 2
    SliderStepsChange = 2
    SliderToMaximum = 6
    SliderToMinimum = 5
    SliderValueChange = 3


class QAbstractSpinBox(QWidget):

    """ QAbstractSpinBox(QWidget parent=None) """

    def alignment(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.alignment() -> Qt.Alignment """
        pass

    def ButtonSymbols(self, *args, **kwargs):  # real signature unknown
        pass

    def buttonSymbols(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.buttonSymbols() -> QAbstractSpinBox.ButtonSymbols """
        pass

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QAbstractSpinBox.changeEvent(QEvent) """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.clear() """
        pass

    # real signature unknown; restored from __doc__
    def closeEvent(self, QCloseEvent):
        """ QAbstractSpinBox.closeEvent(QCloseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def contextMenuEvent(self, QContextMenuEvent):
        """ QAbstractSpinBox.contextMenuEvent(QContextMenuEvent) """
        pass

    def correctionMode(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.correctionMode() -> QAbstractSpinBox.CorrectionMode """
        pass

    def CorrectionMode(self, *args, **kwargs):  # real signature unknown
        pass

    def editingFinished(self, *args, **kwargs):  # real signature unknown
        """ QAbstractSpinBox.editingFinished[] [signal] """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.event(QEvent) -> bool """
        return False

    def fixup(self, QString):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.fixup(QString) """
        pass

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QAbstractSpinBox.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QAbstractSpinBox.focusOutEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def hasAcceptableInput(self):
        """ QAbstractSpinBox.hasAcceptableInput() -> bool """
        return False

    def hasFrame(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.hasFrame() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def hideEvent(self, QHideEvent):
        """ QAbstractSpinBox.hideEvent(QHideEvent) """
        pass

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionSpinBox):
        """ QAbstractSpinBox.initStyleOption(QStyleOptionSpinBox) """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodQuery(self, Qt_InputMethodQuery):
        """ QAbstractSpinBox.inputMethodQuery(Qt.InputMethodQuery) -> QVariant """
        pass

    def interpretText(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.interpretText() """
        pass

    def isAccelerated(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.isAccelerated() -> bool """
        return False

    def isReadOnly(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.isReadOnly() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyboardTracking(self):
        """ QAbstractSpinBox.keyboardTracking() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QAbstractSpinBox.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def keyReleaseEvent(self, QKeyEvent):
        """ QAbstractSpinBox.keyReleaseEvent(QKeyEvent) """
        pass

    def lineEdit(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.lineEdit() -> QLineEdit """
        return QLineEdit

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QAbstractSpinBox.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QAbstractSpinBox.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QAbstractSpinBox.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QAbstractSpinBox.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QAbstractSpinBox.resizeEvent(QResizeEvent) """
        pass

    def selectAll(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.selectAll() """
        pass

    # real signature unknown; restored from __doc__
    def setAccelerated(self, bool):
        """ QAbstractSpinBox.setAccelerated(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setAlignment(self, Qt_Alignment):
        """ QAbstractSpinBox.setAlignment(Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setButtonSymbols(self, QAbstractSpinBox_ButtonSymbols):
        """ QAbstractSpinBox.setButtonSymbols(QAbstractSpinBox.ButtonSymbols) """
        pass

    # real signature unknown; restored from __doc__
    def setCorrectionMode(self, QAbstractSpinBox_CorrectionMode):
        """ QAbstractSpinBox.setCorrectionMode(QAbstractSpinBox.CorrectionMode) """
        pass

    def setFrame(self, bool):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.setFrame(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setKeyboardTracking(self, bool):
        """ QAbstractSpinBox.setKeyboardTracking(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setLineEdit(self, QLineEdit):
        """ QAbstractSpinBox.setLineEdit(QLineEdit) """
        pass

    # real signature unknown; restored from __doc__
    def setReadOnly(self, bool):
        """ QAbstractSpinBox.setReadOnly(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSpecialValueText(self, QString):
        """ QAbstractSpinBox.setSpecialValueText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setWrapping(self, bool):
        """ QAbstractSpinBox.setWrapping(bool) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QAbstractSpinBox.showEvent(QShowEvent) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.sizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def specialValueText(self):
        """ QAbstractSpinBox.specialValueText() -> QString """
        pass

    def stepBy(self, p_int):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.stepBy(int) """
        pass

    def stepDown(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.stepDown() """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def StepEnabled(self, *__args):
        """
        QAbstractSpinBox.StepEnabled(QAbstractSpinBox.StepEnabled)
        QAbstractSpinBox.StepEnabled(int)
        QAbstractSpinBox.StepEnabled()
        """
        pass

    def stepEnabled(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.stepEnabled() -> QAbstractSpinBox.StepEnabled """
        pass

    def StepEnabledFlag(self, *args, **kwargs):  # real signature unknown
        pass

    def stepUp(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.stepUp() """
        pass

    def text(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.text() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def timerEvent(self, QTimerEvent):
        """ QAbstractSpinBox.timerEvent(QTimerEvent) """
        pass

    # real signature unknown; restored from __doc__
    def validate(self, QString, p_int):
        """ QAbstractSpinBox.validate(QString, int) -> (QValidator.State, int) """
        pass

    # real signature unknown; restored from __doc__
    def wheelEvent(self, QWheelEvent):
        """ QAbstractSpinBox.wheelEvent(QWheelEvent) """
        pass

    def wrapping(self):  # real signature unknown; restored from __doc__
        """ QAbstractSpinBox.wrapping() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    CorrectToNearestValue = 1
    CorrectToPreviousValue = 0
    NoButtons = 2
    PlusMinus = 1
    StepDownEnabled = 2
    StepNone = 0
    StepUpEnabled = 1
    UpDownArrows = 0


class QAbstractTextDocumentLayout(__PyQt4_QtCore.QObject):

    """ QAbstractTextDocumentLayout(QTextDocument) """
    # real signature unknown; restored from __doc__

    def anchorAt(self, QPointF):
        """ QAbstractTextDocumentLayout.anchorAt(QPointF) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def blockBoundingRect(self, QTextBlock):
        """ QAbstractTextDocumentLayout.blockBoundingRect(QTextBlock) -> QRectF """
        pass

    def document(self):  # real signature unknown; restored from __doc__
        """ QAbstractTextDocumentLayout.document() -> QTextDocument """
        return QTextDocument

    # real signature unknown; restored from __doc__
    def documentChanged(self, p_int, p_int_1, p_int_2):
        """ QAbstractTextDocumentLayout.documentChanged(int, int, int) """
        pass

    def documentSize(self):  # real signature unknown; restored from __doc__
        """ QAbstractTextDocumentLayout.documentSize() -> QSizeF """
        pass

    def documentSizeChanged(self, *args, **kwargs):  # real signature unknown
        """ QAbstractTextDocumentLayout.documentSizeChanged[QSizeF] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def draw(self, QPainter, QAbstractTextDocumentLayout_PaintContext):
        """ QAbstractTextDocumentLayout.draw(QPainter, QAbstractTextDocumentLayout.PaintContext) """
        pass

    # real signature unknown; restored from __doc__
    def drawInlineObject(self, QPainter, QRectF, QTextInlineObject, p_int, QTextFormat):
        """ QAbstractTextDocumentLayout.drawInlineObject(QPainter, QRectF, QTextInlineObject, int, QTextFormat) """
        pass

    def format(self, p_int):  # real signature unknown; restored from __doc__
        """ QAbstractTextDocumentLayout.format(int) -> QTextCharFormat """
        return QTextCharFormat

    # real signature unknown; restored from __doc__
    def frameBoundingRect(self, QTextFrame):
        """ QAbstractTextDocumentLayout.frameBoundingRect(QTextFrame) -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def handlerForObject(self, p_int):
        """ QAbstractTextDocumentLayout.handlerForObject(int) -> QTextObjectInterface """
        return QTextObjectInterface

    # real signature unknown; restored from __doc__
    def hitTest(self, QPointF, Qt_HitTestAccuracy):
        """ QAbstractTextDocumentLayout.hitTest(QPointF, Qt.HitTestAccuracy) -> int """
        return 0

    def pageCount(self):  # real signature unknown; restored from __doc__
        """ QAbstractTextDocumentLayout.pageCount() -> int """
        return 0

    def pageCountChanged(self, *args, **kwargs):  # real signature unknown
        """ QAbstractTextDocumentLayout.pageCountChanged[int] [signal] """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def PaintContext(self, QAbstractTextDocumentLayout_PaintContext=None):
        """
        QAbstractTextDocumentLayout.PaintContext()
        QAbstractTextDocumentLayout.PaintContext(QAbstractTextDocumentLayout.PaintContext)
        """
        pass

    def paintDevice(self):  # real signature unknown; restored from __doc__
        """ QAbstractTextDocumentLayout.paintDevice() -> QPaintDevice """
        return QPaintDevice

    # real signature unknown; restored from __doc__
    def positionInlineObject(self, QTextInlineObject, p_int, QTextFormat):
        """ QAbstractTextDocumentLayout.positionInlineObject(QTextInlineObject, int, QTextFormat) """
        pass

    # real signature unknown; restored from __doc__
    def registerHandler(self, p_int, QObject):
        """ QAbstractTextDocumentLayout.registerHandler(int, QObject) """
        pass

    # real signature unknown; restored from __doc__
    def resizeInlineObject(self, QTextInlineObject, p_int, QTextFormat):
        """ QAbstractTextDocumentLayout.resizeInlineObject(QTextInlineObject, int, QTextFormat) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def Selection(self, QAbstractTextDocumentLayout_Selection=None):
        """
        QAbstractTextDocumentLayout.Selection()
        QAbstractTextDocumentLayout.Selection(QAbstractTextDocumentLayout.Selection)
        """
        pass

    # real signature unknown; restored from __doc__
    def setPaintDevice(self, QPaintDevice):
        """ QAbstractTextDocumentLayout.setPaintDevice(QPaintDevice) """
        pass

    def update(self, *args, **kwargs):  # real signature unknown
        """
        QAbstractTextDocumentLayout.update[QRectF] [signal]
        QAbstractTextDocumentLayout.update[] [signal]
        """
        pass

    def updateBlock(self, *args, **kwargs):  # real signature unknown
        """ QAbstractTextDocumentLayout.updateBlock[QTextBlock] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QTextDocument):
        pass


class QAction(__PyQt4_QtCore.QObject):

    """
    QAction(QObject)
    QAction(QString, QObject)
    QAction(QIcon, QString, QObject)
    """

    def ActionEvent(self, *args, **kwargs):  # real signature unknown
        pass

    def actionGroup(self):  # real signature unknown; restored from __doc__
        """ QAction.actionGroup() -> QActionGroup """
        return QActionGroup

    # real signature unknown; restored from __doc__
    def activate(self, QAction_ActionEvent):
        """ QAction.activate(QAction.ActionEvent) """
        pass

    # real signature unknown; restored from __doc__
    def associatedGraphicsWidgets(self):
        """ QAction.associatedGraphicsWidgets() -> list-of-QGraphicsWidget """
        pass

    # real signature unknown; restored from __doc__
    def associatedWidgets(self):
        """ QAction.associatedWidgets() -> list-of-QWidget """
        pass

    def autoRepeat(self):  # real signature unknown; restored from __doc__
        """ QAction.autoRepeat() -> bool """
        return False

    def changed(self, *args, **kwargs):  # real signature unknown
        """ QAction.changed[] [signal] """
        pass

    def data(self):  # real signature unknown; restored from __doc__
        """ QAction.data() -> QVariant """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QAction.event(QEvent) -> bool """
        return False

    def font(self):  # real signature unknown; restored from __doc__
        """ QAction.font() -> QFont """
        return QFont

    def hover(self):  # real signature unknown; restored from __doc__
        """ QAction.hover() """
        pass

    def hovered(self, *args, **kwargs):  # real signature unknown
        """ QAction.hovered[] [signal] """
        pass

    def icon(self):  # real signature unknown; restored from __doc__
        """ QAction.icon() -> QIcon """
        return QIcon

    def iconText(self):  # real signature unknown; restored from __doc__
        """ QAction.iconText() -> QString """
        pass

    def isCheckable(self):  # real signature unknown; restored from __doc__
        """ QAction.isCheckable() -> bool """
        return False

    def isChecked(self):  # real signature unknown; restored from __doc__
        """ QAction.isChecked() -> bool """
        return False

    def isEnabled(self):  # real signature unknown; restored from __doc__
        """ QAction.isEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isIconVisibleInMenu(self):
        """ QAction.isIconVisibleInMenu() -> bool """
        return False

    def isSeparator(self):  # real signature unknown; restored from __doc__
        """ QAction.isSeparator() -> bool """
        return False

    def isVisible(self):  # real signature unknown; restored from __doc__
        """ QAction.isVisible() -> bool """
        return False

    def menu(self):  # real signature unknown; restored from __doc__
        """ QAction.menu() -> QMenu """
        return QMenu

    def MenuRole(self, *args, **kwargs):  # real signature unknown
        pass

    def menuRole(self):  # real signature unknown; restored from __doc__
        """ QAction.menuRole() -> QAction.MenuRole """
        pass

    def parentWidget(self):  # real signature unknown; restored from __doc__
        """ QAction.parentWidget() -> QWidget """
        return QWidget

    def Priority(self, *args, **kwargs):  # real signature unknown
        pass

    def priority(self):  # real signature unknown; restored from __doc__
        """ QAction.priority() -> QAction.Priority """
        pass

    # real signature unknown; restored from __doc__
    def setActionGroup(self, QActionGroup):
        """ QAction.setActionGroup(QActionGroup) """
        pass

    # real signature unknown; restored from __doc__
    def setAutoRepeat(self, bool):
        """ QAction.setAutoRepeat(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setCheckable(self, bool):
        """ QAction.setCheckable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setChecked(self, bool):
        """ QAction.setChecked(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setData(self, QVariant):
        """ QAction.setData(QVariant) """
        pass

    # real signature unknown; restored from __doc__
    def setDisabled(self, bool):
        """ QAction.setDisabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setEnabled(self, bool):
        """ QAction.setEnabled(bool) """
        pass

    def setFont(self, QFont):  # real signature unknown; restored from __doc__
        """ QAction.setFont(QFont) """
        pass

    def setIcon(self, QIcon):  # real signature unknown; restored from __doc__
        """ QAction.setIcon(QIcon) """
        pass

    # real signature unknown; restored from __doc__
    def setIconText(self, QString):
        """ QAction.setIconText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setIconVisibleInMenu(self, bool):
        """ QAction.setIconVisibleInMenu(bool) """
        pass

    def setMenu(self, QMenu):  # real signature unknown; restored from __doc__
        """ QAction.setMenu(QMenu) """
        pass

    # real signature unknown; restored from __doc__
    def setMenuRole(self, QAction_MenuRole):
        """ QAction.setMenuRole(QAction.MenuRole) """
        pass

    # real signature unknown; restored from __doc__
    def setPriority(self, QAction_Priority):
        """ QAction.setPriority(QAction.Priority) """
        pass

    # real signature unknown; restored from __doc__
    def setSeparator(self, bool):
        """ QAction.setSeparator(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setShortcut(self, QKeySequence):
        """ QAction.setShortcut(QKeySequence) """
        pass

    # real signature unknown; restored from __doc__
    def setShortcutContext(self, Qt_ShortcutContext):
        """ QAction.setShortcutContext(Qt.ShortcutContext) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setShortcuts(self, *__args):
        """
        QAction.setShortcuts(list-of-QKeySequence)
        QAction.setShortcuts(QKeySequence.StandardKey)
        """
        pass

    # real signature unknown; restored from __doc__
    def setSoftKeyRole(self, QAction_SoftKeyRole):
        """ QAction.setSoftKeyRole(QAction.SoftKeyRole) """
        pass

    # real signature unknown; restored from __doc__
    def setStatusTip(self, QString):
        """ QAction.setStatusTip(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, QString):
        """ QAction.setText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setToolTip(self, QString):
        """ QAction.setToolTip(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QAction.setVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setWhatsThis(self, QString):
        """ QAction.setWhatsThis(QString) """
        pass

    def shortcut(self):  # real signature unknown; restored from __doc__
        """ QAction.shortcut() -> QKeySequence """
        return QKeySequence

    def shortcutContext(self):  # real signature unknown; restored from __doc__
        """ QAction.shortcutContext() -> Qt.ShortcutContext """
        pass

    def shortcuts(self):  # real signature unknown; restored from __doc__
        """ QAction.shortcuts() -> list-of-QKeySequence """
        pass

    # real signature unknown; restored from __doc__
    def showStatusText(self, QWidget_widget=None):
        """ QAction.showStatusText(QWidget widget=None) -> bool """
        return False

    def SoftKeyRole(self, *args, **kwargs):  # real signature unknown
        pass

    def softKeyRole(self):  # real signature unknown; restored from __doc__
        """ QAction.softKeyRole() -> QAction.SoftKeyRole """
        pass

    def statusTip(self):  # real signature unknown; restored from __doc__
        """ QAction.statusTip() -> QString """
        pass

    def text(self):  # real signature unknown; restored from __doc__
        """ QAction.text() -> QString """
        pass

    def toggle(self):  # real signature unknown; restored from __doc__
        """ QAction.toggle() """
        pass

    def toggled(self, *args, **kwargs):  # real signature unknown
        """ QAction.toggled[bool] [signal] """
        pass

    def toolTip(self):  # real signature unknown; restored from __doc__
        """ QAction.toolTip() -> QString """
        pass

    def trigger(self):  # real signature unknown; restored from __doc__
        """ QAction.trigger() """
        pass

    def triggered(self, *args, **kwargs):  # real signature unknown
        """
        QAction.triggered[bool] [signal]
        QAction.triggered[] [signal]
        """
        pass

    def whatsThis(self):  # real signature unknown; restored from __doc__
        """ QAction.whatsThis() -> QString """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    AboutQtRole = 3
    AboutRole = 4
    ApplicationSpecificRole = 2
    HighPriority = 256
    Hover = 1
    LowPriority = 0
    NegativeSoftKey = 2
    NormalPriority = 128
    NoRole = 0
    NoSoftKey = 0
    PositiveSoftKey = 1
    PreferencesRole = 5
    QuitRole = 6
    SelectSoftKey = 3
    TextHeuristicRole = 1
    Trigger = 0


class QActionEvent(__PyQt4_QtCore.QEvent):

    """
    QActionEvent(int, QAction, QAction before=None)
    QActionEvent(QActionEvent)
    """

    def action(self):  # real signature unknown; restored from __doc__
        """ QActionEvent.action() -> QAction """
        return QAction

    def before(self):  # real signature unknown; restored from __doc__
        """ QActionEvent.before() -> QAction """
        return QAction

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QActionGroup(__PyQt4_QtCore.QObject):

    """ QActionGroup(QObject) """

    def actions(self):  # real signature unknown; restored from __doc__
        """ QActionGroup.actions() -> list-of-QAction """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def addAction(self, *__args):
        """
        QActionGroup.addAction(QAction) -> QAction
        QActionGroup.addAction(QString) -> QAction
        QActionGroup.addAction(QIcon, QString) -> QAction
        """
        return QAction

    def checkedAction(self):  # real signature unknown; restored from __doc__
        """ QActionGroup.checkedAction() -> QAction """
        return QAction

    def hovered(self, *args, **kwargs):  # real signature unknown
        """ QActionGroup.hovered[QAction] [signal] """
        pass

    def isEnabled(self):  # real signature unknown; restored from __doc__
        """ QActionGroup.isEnabled() -> bool """
        return False

    def isExclusive(self):  # real signature unknown; restored from __doc__
        """ QActionGroup.isExclusive() -> bool """
        return False

    def isVisible(self):  # real signature unknown; restored from __doc__
        """ QActionGroup.isVisible() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def removeAction(self, QAction):
        """ QActionGroup.removeAction(QAction) """
        pass

    def selected(self, *args, **kwargs):  # real signature unknown
        """ QActionGroup.selected[QAction] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def setDisabled(self, bool):
        """ QActionGroup.setDisabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setEnabled(self, bool):
        """ QActionGroup.setEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setExclusive(self, bool):
        """ QActionGroup.setExclusive(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QActionGroup.setVisible(bool) """
        pass

    def triggered(self, *args, **kwargs):  # real signature unknown
        """ QActionGroup.triggered[QAction] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject):
        pass


class QApplication(__PyQt4_QtCore.QCoreApplication):

    """
    QApplication(list-of-str)
    QApplication(list-of-str, bool)
    QApplication(list-of-str, QApplication.Type)
    QApplication(Display, int visual=0, int colormap=0)
    QApplication(Display, list-of-str, int visual=0, int cmap=0)
    """

    def aboutQt(self):  # real signature unknown; restored from __doc__
        """ QApplication.aboutQt() """
        pass

    # real signature unknown; restored from __doc__
    def activeModalWidget(self):
        """ QApplication.activeModalWidget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def activePopupWidget(self):
        """ QApplication.activePopupWidget() -> QWidget """
        return QWidget

    def activeWindow(self):  # real signature unknown; restored from __doc__
        """ QApplication.activeWindow() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def alert(self, QWidget, int_msecs=0):
        """ QApplication.alert(QWidget, int msecs=0) """
        pass

    def allWidgets(self):  # real signature unknown; restored from __doc__
        """ QApplication.allWidgets() -> list-of-QWidget """
        pass

    def autoSipEnabled(self):  # real signature unknown; restored from __doc__
        """ QApplication.autoSipEnabled() -> bool """
        return False

    def beep(self):  # real signature unknown; restored from __doc__
        """ QApplication.beep() """
        pass

    # real signature unknown; restored from __doc__
    def changeOverrideCursor(self, QCursor):
        """ QApplication.changeOverrideCursor(QCursor) """
        pass

    def clipboard(self):  # real signature unknown; restored from __doc__
        """ QApplication.clipboard() -> QClipboard """
        return QClipboard

    def closeAllWindows(self):  # real signature unknown; restored from __doc__
        """ QApplication.closeAllWindows() """
        pass

    def colorSpec(self):  # real signature unknown; restored from __doc__
        """ QApplication.colorSpec() -> int """
        return 0

    def ColorSpec(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def commitData(self, QSessionManager):
        """ QApplication.commitData(QSessionManager) """
        pass

    def commitDataRequest(self, *args, **kwargs):  # real signature unknown
        """ QApplication.commitDataRequest[QSessionManager] [signal] """
        pass

    def cursorFlashTime(self):  # real signature unknown; restored from __doc__
        """ QApplication.cursorFlashTime() -> int """
        return 0

    def desktop(self):  # real signature unknown; restored from __doc__
        """ QApplication.desktop() -> QDesktopWidget """
        return QDesktopWidget

    # real signature unknown; restored from __doc__
    def desktopSettingsAware(self):
        """ QApplication.desktopSettingsAware() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def doubleClickInterval(self):
        """ QApplication.doubleClickInterval() -> int """
        return 0

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QApplication.event(QEvent) -> bool """
        return False

    def exec_(self):  # real signature unknown; restored from __doc__
        """ QApplication.exec_() -> int """
        return 0

    def focusChanged(self, *args, **kwargs):  # real signature unknown
        """ QApplication.focusChanged[QWidget, QWidget] [signal] """
        pass

    def focusWidget(self):  # real signature unknown; restored from __doc__
        """ QApplication.focusWidget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__ with multiple overloads
    def font(self, *__args):
        """
        QApplication.font() -> QFont
        QApplication.font(QWidget) -> QFont
        QApplication.font(str) -> QFont
        """
        return QFont

    def fontDatabaseChanged(self, *args, **kwargs):  # real signature unknown
        """ QApplication.fontDatabaseChanged[] [signal] """
        pass

    def fontMetrics(self):  # real signature unknown; restored from __doc__
        """ QApplication.fontMetrics() -> QFontMetrics """
        return QFontMetrics

    def globalStrut(self):  # real signature unknown; restored from __doc__
        """ QApplication.globalStrut() -> QSize """
        pass

    def inputContext(self):  # real signature unknown; restored from __doc__
        """ QApplication.inputContext() -> QInputContext """
        return QInputContext

    # real signature unknown; restored from __doc__
    def isEffectEnabled(self, Qt_UIEffect):
        """ QApplication.isEffectEnabled(Qt.UIEffect) -> bool """
        return False

    def isLeftToRight(self):  # real signature unknown; restored from __doc__
        """ QApplication.isLeftToRight() -> bool """
        return False

    def isRightToLeft(self):  # real signature unknown; restored from __doc__
        """ QApplication.isRightToLeft() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isSessionRestored(self):
        """ QApplication.isSessionRestored() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyboardInputDirection(self):
        """ QApplication.keyboardInputDirection() -> Qt.LayoutDirection """
        pass

    # real signature unknown; restored from __doc__
    def keyboardInputInterval(self):
        """ QApplication.keyboardInputInterval() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def keyboardInputLocale(self):
        """ QApplication.keyboardInputLocale() -> QLocale """
        pass

    # real signature unknown; restored from __doc__
    def keyboardModifiers(self):
        """ QApplication.keyboardModifiers() -> Qt.KeyboardModifiers """
        pass

    def lastWindowClosed(self, *args, **kwargs):  # real signature unknown
        """ QApplication.lastWindowClosed[] [signal] """
        pass

    def layoutDirection(self):  # real signature unknown; restored from __doc__
        """ QApplication.layoutDirection() -> Qt.LayoutDirection """
        pass

    def mouseButtons(self):  # real signature unknown; restored from __doc__
        """ QApplication.mouseButtons() -> Qt.MouseButtons """
        pass

    # real signature unknown; restored from __doc__
    def notify(self, QObject, QEvent):
        """ QApplication.notify(QObject, QEvent) -> bool """
        return False

    def overrideCursor(self):  # real signature unknown; restored from __doc__
        """ QApplication.overrideCursor() -> QCursor """
        return QCursor

    # real signature unknown; restored from __doc__ with multiple overloads
    def palette(self, *__args):
        """
        QApplication.palette() -> QPalette
        QApplication.palette(QWidget) -> QPalette
        QApplication.palette(str) -> QPalette
        """
        return QPalette

    # real signature unknown; restored from __doc__
    def quitOnLastWindowClosed(self):
        """ QApplication.quitOnLastWindowClosed() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def restoreOverrideCursor(self):
        """ QApplication.restoreOverrideCursor() """
        pass

    # real signature unknown; restored from __doc__
    def saveState(self, QSessionManager):
        """ QApplication.saveState(QSessionManager) """
        pass

    def saveStateRequest(self, *args, **kwargs):  # real signature unknown
        """ QApplication.saveStateRequest[QSessionManager] [signal] """
        pass

    def sessionId(self):  # real signature unknown; restored from __doc__
        """ QApplication.sessionId() -> QString """
        pass

    def sessionKey(self):  # real signature unknown; restored from __doc__
        """ QApplication.sessionKey() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def setActiveWindow(self, QWidget):
        """ QApplication.setActiveWindow(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setAutoSipEnabled(self, bool):
        """ QApplication.setAutoSipEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setColorSpec(self, p_int):
        """ QApplication.setColorSpec(int) """
        pass

    # real signature unknown; restored from __doc__
    def setCursorFlashTime(self, p_int):
        """ QApplication.setCursorFlashTime(int) """
        pass

    # real signature unknown; restored from __doc__
    def setDesktopSettingsAware(self, bool):
        """ QApplication.setDesktopSettingsAware(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setDoubleClickInterval(self, p_int):
        """ QApplication.setDoubleClickInterval(int) """
        pass

    # real signature unknown; restored from __doc__
    def setEffectEnabled(self, Qt_UIEffect, bool_enabled=True):
        """ QApplication.setEffectEnabled(Qt.UIEffect, bool enabled=True) """
        pass

    # real signature unknown; restored from __doc__
    def setFont(self, QFont, str_className=None):
        """ QApplication.setFont(QFont, str className=None) """
        pass

    # real signature unknown; restored from __doc__
    def setGlobalStrut(self, QSize):
        """ QApplication.setGlobalStrut(QSize) """
        pass

    # real signature unknown; restored from __doc__
    def setGraphicsSystem(self, QString):
        """ QApplication.setGraphicsSystem(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setInputContext(self, QInputContext):
        """ QApplication.setInputContext(QInputContext) """
        pass

    # real signature unknown; restored from __doc__
    def setKeyboardInputInterval(self, p_int):
        """ QApplication.setKeyboardInputInterval(int) """
        pass

    # real signature unknown; restored from __doc__
    def setLayoutDirection(self, Qt_LayoutDirection):
        """ QApplication.setLayoutDirection(Qt.LayoutDirection) """
        pass

    # real signature unknown; restored from __doc__
    def setOverrideCursor(self, QCursor):
        """ QApplication.setOverrideCursor(QCursor) """
        pass

    # real signature unknown; restored from __doc__
    def setPalette(self, QPalette, str_className=None):
        """ QApplication.setPalette(QPalette, str className=None) """
        pass

    # real signature unknown; restored from __doc__
    def setQuitOnLastWindowClosed(self, bool):
        """ QApplication.setQuitOnLastWindowClosed(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setStartDragDistance(self, p_int):
        """ QApplication.setStartDragDistance(int) """
        pass

    # real signature unknown; restored from __doc__
    def setStartDragTime(self, p_int):
        """ QApplication.setStartDragTime(int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setStyle(self, *__args):
        """
        QApplication.setStyle(QStyle)
        QApplication.setStyle(QString) -> QStyle
        """
        return QStyle

    # real signature unknown; restored from __doc__
    def setStyleSheet(self, QString):
        """ QApplication.setStyleSheet(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setWheelScrollLines(self, p_int):
        """ QApplication.setWheelScrollLines(int) """
        pass

    # real signature unknown; restored from __doc__
    def setWindowIcon(self, QIcon):
        """ QApplication.setWindowIcon(QIcon) """
        pass

    # real signature unknown; restored from __doc__
    def startDragDistance(self):
        """ QApplication.startDragDistance() -> int """
        return 0

    def startDragTime(self):  # real signature unknown; restored from __doc__
        """ QApplication.startDragTime() -> int """
        return 0

    def style(self):  # real signature unknown; restored from __doc__
        """ QApplication.style() -> QStyle """
        return QStyle

    def styleSheet(self):  # real signature unknown; restored from __doc__
        """ QApplication.styleSheet() -> QString """
        pass

    def syncX(self):  # real signature unknown; restored from __doc__
        """ QApplication.syncX() """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def topLevelAt(self, *__args):
        """
        QApplication.topLevelAt(QPoint) -> QWidget
        QApplication.topLevelAt(int, int) -> QWidget
        """
        return QWidget

    def topLevelWidgets(self):  # real signature unknown; restored from __doc__
        """ QApplication.topLevelWidgets() -> list-of-QWidget """
        pass

    def Type(self, *args, **kwargs):  # real signature unknown
        pass

    def type(self):  # real signature unknown; restored from __doc__
        """ QApplication.type() -> QApplication.Type """
        pass

    # real signature unknown; restored from __doc__
    def wheelScrollLines(self):
        """ QApplication.wheelScrollLines() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def widgetAt(self, *__args):
        """
        QApplication.widgetAt(QPoint) -> QWidget
        QApplication.widgetAt(int, int) -> QWidget
        """
        return QWidget

    def windowIcon(self):  # real signature unknown; restored from __doc__
        """ QApplication.windowIcon() -> QIcon """
        return QIcon

    # real signature unknown; restored from __doc__
    def x11EventFilter(self, sip_voidptr):
        """ QApplication.x11EventFilter(sip.voidptr) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def x11ProcessEvent(self, sip_voidptr):
        """ QApplication.x11ProcessEvent(sip.voidptr) -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    CustomColor = 1
    GuiClient = 1
    GuiServer = 2
    ManyColor = 2
    NormalColor = 0
    Tty = 0


class QPixmap(QPaintDevice):

    """
    QPixmap()
    QPixmap(int, int)
    QPixmap(QSize)
    QPixmap(QString, str format=None, Qt.ImageConversionFlags flags=Qt.AutoColor)
    QPixmap(list-of-str)
    QPixmap(QPixmap)
    QPixmap(QVariant)
    """

    def alphaChannel(self):  # real signature unknown; restored from __doc__
        """ QPixmap.alphaChannel() -> QPixmap """
        return QPixmap

    def cacheKey(self):  # real signature unknown; restored from __doc__
        """ QPixmap.cacheKey() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def convertFromImage(self, QImage, Qt_ImageConversionFlags_flags=None):
        """ QPixmap.convertFromImage(QImage, Qt.ImageConversionFlags flags=Qt.AutoColor) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def copy(self, *__args):
        """
        QPixmap.copy(QRect rect=QRect()) -> QPixmap
        QPixmap.copy(int, int, int, int) -> QPixmap
        """
        return QPixmap

    # real signature unknown; restored from __doc__
    def createHeuristicMask(self, bool_clipTight=True):
        """ QPixmap.createHeuristicMask(bool clipTight=True) -> QBitmap """
        return QBitmap

    # real signature unknown; restored from __doc__ with multiple overloads
    def createMaskFromColor(self, QColor, Qt_MaskMode=None):
        """
        QPixmap.createMaskFromColor(QColor, Qt.MaskMode) -> QBitmap
        QPixmap.createMaskFromColor(QColor) -> QBitmap
        """
        return QBitmap

    def defaultDepth(self):  # real signature unknown; restored from __doc__
        """ QPixmap.defaultDepth() -> int """
        return 0

    def depth(self):  # real signature unknown; restored from __doc__
        """ QPixmap.depth() -> int """
        return 0

    def detach(self):  # real signature unknown; restored from __doc__
        """ QPixmap.detach() """
        pass

    def devType(self):  # real signature unknown; restored from __doc__
        """ QPixmap.devType() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def fill(self, *__args):
        """
        QPixmap.fill(QColor color=Qt.white)
        QPixmap.fill(QWidget, QPoint)
        QPixmap.fill(QWidget, int, int)
        """
        pass

    # real signature unknown; restored from __doc__
    def fromImage(self, QImage, Qt_ImageConversionFlags_flags=None):
        """ QPixmap.fromImage(QImage, Qt.ImageConversionFlags flags=Qt.AutoColor) -> QPixmap """
        return QPixmap

    # real signature unknown; restored from __doc__
    def fromImageReader(self, QImageReader, Qt_ImageConversionFlags_flags=None):
        """ QPixmap.fromImageReader(QImageReader, Qt.ImageConversionFlags flags=Qt.AutoColor) -> QPixmap """
        return QPixmap

    # real signature unknown; restored from __doc__
    def fromX11Pixmap(self, p_int, QPixmap_ShareMode_mode=None):
        """ QPixmap.fromX11Pixmap(int, QPixmap.ShareMode mode=QPixmap.ImplicitlyShared) -> QPixmap """
        return QPixmap

    # real signature unknown; restored from __doc__ with multiple overloads
    def grabWidget(self, QWidget, *__args):
        """
        QPixmap.grabWidget(QWidget, QRect) -> QPixmap
        QPixmap.grabWidget(QWidget, int x=0, int y=0, int width=-1, int height=-1) -> QPixmap
        """
        return QPixmap

    # real signature unknown; restored from __doc__
    def grabWindow(self, p_int, int_x=0, int_y=0, int_width=-1, int_height=-1):
        """ QPixmap.grabWindow(int, int x=0, int y=0, int width=-1, int height=-1) -> QPixmap """
        return QPixmap

    def handle(self):  # real signature unknown; restored from __doc__
        """ QPixmap.handle() -> int """
        return 0

    def hasAlpha(self):  # real signature unknown; restored from __doc__
        """ QPixmap.hasAlpha() -> bool """
        return False

    def hasAlphaChannel(self):  # real signature unknown; restored from __doc__
        """ QPixmap.hasAlphaChannel() -> bool """
        return False

    def height(self):  # real signature unknown; restored from __doc__
        """ QPixmap.height() -> int """
        return 0

    def isNull(self):  # real signature unknown; restored from __doc__
        """ QPixmap.isNull() -> bool """
        return False

    def isQBitmap(self):  # real signature unknown; restored from __doc__
        """ QPixmap.isQBitmap() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def load(self, QString, str_format=None, Qt_ImageConversionFlags_flags=None):
        """ QPixmap.load(QString, str format=None, Qt.ImageConversionFlags flags=Qt.AutoColor) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def loadFromData(self, *__args):
        """
        QPixmap.loadFromData(str, str format=None, Qt.ImageConversionFlags flags=Qt.AutoColor) -> bool
        QPixmap.loadFromData(QByteArray, str format=None, Qt.ImageConversionFlags flags=Qt.AutoColor) -> bool
        """
        return False

    def mask(self):  # real signature unknown; restored from __doc__
        """ QPixmap.mask() -> QBitmap """
        return QBitmap

    # real signature unknown; restored from __doc__
    def metric(self, QPaintDevice_PaintDeviceMetric):
        """ QPixmap.metric(QPaintDevice.PaintDeviceMetric) -> int """
        return 0

    def paintEngine(self):  # real signature unknown; restored from __doc__
        """ QPixmap.paintEngine() -> QPaintEngine """
        return QPaintEngine

    def rect(self):  # real signature unknown; restored from __doc__
        """ QPixmap.rect() -> QRect """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def save(self, *__args):
        """
        QPixmap.save(QString, str format=None, int quality=-1) -> bool
        QPixmap.save(QIODevice, str format=None, int quality=-1) -> bool
        """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def scaled(self, *__args):
        """
        QPixmap.scaled(int, int, Qt.AspectRatioMode aspectRatioMode=Qt.IgnoreAspectRatio, Qt.TransformationMode transformMode=Qt.FastTransformation) -> QPixmap
        QPixmap.scaled(QSize, Qt.AspectRatioMode aspectRatioMode=Qt.IgnoreAspectRatio, Qt.TransformationMode transformMode=Qt.FastTransformation) -> QPixmap
        """
        return QPixmap

    # real signature unknown; restored from __doc__
    def scaledToHeight(self, p_int, Qt_TransformationMode_mode=None):
        """ QPixmap.scaledToHeight(int, Qt.TransformationMode mode=Qt.FastTransformation) -> QPixmap """
        return QPixmap

    # real signature unknown; restored from __doc__
    def scaledToWidth(self, p_int, Qt_TransformationMode_mode=None):
        """ QPixmap.scaledToWidth(int, Qt.TransformationMode mode=Qt.FastTransformation) -> QPixmap """
        return QPixmap

    # real signature unknown; restored from __doc__ with multiple overloads
    def scroll(self, p_int, p_int_1, *__args):
        """
        QPixmap.scroll(int, int, QRect) -> QRegion
        QPixmap.scroll(int, int, int, int, int, int) -> QRegion
        """
        return QRegion

    def serialNumber(self):  # real signature unknown; restored from __doc__
        """ QPixmap.serialNumber() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setAlphaChannel(self, QPixmap):
        """ QPixmap.setAlphaChannel(QPixmap) """
        pass

    # real signature unknown; restored from __doc__
    def setMask(self, QBitmap):
        """ QPixmap.setMask(QBitmap) """
        pass

    def ShareMode(self, *args, **kwargs):  # real signature unknown
        pass

    def size(self):  # real signature unknown; restored from __doc__
        """ QPixmap.size() -> QSize """
        pass

    def toImage(self):  # real signature unknown; restored from __doc__
        """ QPixmap.toImage() -> QImage """
        return QImage

    # real signature unknown; restored from __doc__ with multiple overloads
    def transformed(self, *__args):
        """
        QPixmap.transformed(QMatrix, Qt.TransformationMode mode=Qt.FastTransformation) -> QPixmap
        QPixmap.transformed(QTransform, Qt.TransformationMode mode=Qt.FastTransformation) -> QPixmap
        """
        return QPixmap

    # real signature unknown; restored from __doc__ with multiple overloads
    def trueMatrix(self, *__args):
        """
        QPixmap.trueMatrix(QMatrix, int, int) -> QMatrix
        QPixmap.trueMatrix(QTransform, int, int) -> QTransform
        """
        return QMatrix or QTransform

    def width(self):  # real signature unknown; restored from __doc__
        """ QPixmap.width() -> int """
        return 0

    def x11Info(self):  # real signature unknown; restored from __doc__
        """ QPixmap.x11Info() -> QX11Info """
        return QX11Info

    # real signature unknown; restored from __doc__
    def x11PictureHandle(self):
        """ QPixmap.x11PictureHandle() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    ExplicitlyShared = 1
    ImplicitlyShared = 0


class QBitmap(QPixmap):

    """
    QBitmap()
    QBitmap(QPixmap)
    QBitmap(int, int)
    QBitmap(QSize)
    QBitmap(QString, str format=None)
    QBitmap(QVariant)
    QBitmap(QBitmap)
    """

    def clear(self):  # real signature unknown; restored from __doc__
        """ QBitmap.clear() """
        pass

    # real signature unknown; restored from __doc__
    def fromData(self, QSize, p_str, QImage_Format_format=None):
        """ QBitmap.fromData(QSize, str, QImage.Format format=QImage.Format_MonoLSB) -> QBitmap """
        return QBitmap

    # real signature unknown; restored from __doc__
    def fromImage(self, QImage, Qt_ImageConversionFlags_flags=None):
        """ QBitmap.fromImage(QImage, Qt.ImageConversionFlags flags=Qt.AutoColor) -> QBitmap """
        return QBitmap

    # real signature unknown; restored from __doc__ with multiple overloads
    def transformed(self, *__args):
        """
        QBitmap.transformed(QMatrix) -> QBitmap
        QBitmap.transformed(QTransform) -> QBitmap
        """
        return QBitmap

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QLayoutItem():  # skipped bases: <type 'sip.wrapper'>

    """
    QLayoutItem(Qt.Alignment alignment=0)
    QLayoutItem(QLayoutItem)
    """

    def alignment(self):  # real signature unknown; restored from __doc__
        """ QLayoutItem.alignment() -> Qt.Alignment """
        pass

    def controlTypes(self):  # real signature unknown; restored from __doc__
        """ QLayoutItem.controlTypes() -> QSizePolicy.ControlTypes """
        pass

    # real signature unknown; restored from __doc__
    def expandingDirections(self):
        """ QLayoutItem.expandingDirections() -> Qt.Orientations """
        pass

    def geometry(self):  # real signature unknown; restored from __doc__
        """ QLayoutItem.geometry() -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def hasHeightForWidth(self):
        """ QLayoutItem.hasHeightForWidth() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def heightForWidth(self, p_int):
        """ QLayoutItem.heightForWidth(int) -> int """
        return 0

    def invalidate(self):  # real signature unknown; restored from __doc__
        """ QLayoutItem.invalidate() """
        pass

    def isEmpty(self):  # real signature unknown; restored from __doc__
        """ QLayoutItem.isEmpty() -> bool """
        return False

    def layout(self):  # real signature unknown; restored from __doc__
        """ QLayoutItem.layout() -> QLayout """
        return QLayout

    def maximumSize(self):  # real signature unknown; restored from __doc__
        """ QLayoutItem.maximumSize() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def minimumHeightForWidth(self, p_int):
        """ QLayoutItem.minimumHeightForWidth(int) -> int """
        return 0

    def minimumSize(self):  # real signature unknown; restored from __doc__
        """ QLayoutItem.minimumSize() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def setAlignment(self, Qt_Alignment):
        """ QLayoutItem.setAlignment(Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setGeometry(self, QRect):
        """ QLayoutItem.setGeometry(QRect) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QLayoutItem.sizeHint() -> QSize """
        pass

    def spacerItem(self):  # real signature unknown; restored from __doc__
        """ QLayoutItem.spacerItem() -> QSpacerItem """
        return QSpacerItem

    def widget(self):  # real signature unknown; restored from __doc__
        """ QLayoutItem.widget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    __weakref__ = property(lambda self: object())  # default


class QLayout(__PyQt4_QtCore.QObject, QLayoutItem):

    """
    QLayout(QWidget)
    QLayout()
    """

    def activate(self):  # real signature unknown; restored from __doc__
        """ QLayout.activate() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def addChildLayout(self, QLayout):
        """ QLayout.addChildLayout(QLayout) """
        pass

    # real signature unknown; restored from __doc__
    def addChildWidget(self, QWidget):
        """ QLayout.addChildWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def addItem(self, QLayoutItem):
        """ QLayout.addItem(QLayoutItem) """
        pass

    # real signature unknown; restored from __doc__
    def addWidget(self, QWidget):
        """ QLayout.addWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def alignmentRect(self, QRect):
        """ QLayout.alignmentRect(QRect) -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def childEvent(self, QChildEvent):
        """ QLayout.childEvent(QChildEvent) """
        pass

    # real signature unknown; restored from __doc__
    def closestAcceptableSize(self, QWidget, QSize):
        """ QLayout.closestAcceptableSize(QWidget, QSize) -> QSize """
        pass

    def contentsMargins(self):  # real signature unknown; restored from __doc__
        """ QLayout.contentsMargins() -> QMargins """
        pass

    def contentsRect(self):  # real signature unknown; restored from __doc__
        """ QLayout.contentsRect() -> QRect """
        pass

    def count(self):  # real signature unknown; restored from __doc__
        """ QLayout.count() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def expandingDirections(self):
        """ QLayout.expandingDirections() -> Qt.Orientations """
        pass

    def geometry(self):  # real signature unknown; restored from __doc__
        """ QLayout.geometry() -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def getContentsMargins(self):
        """ QLayout.getContentsMargins() -> (int, int, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def indexOf(self, QWidget):
        """ QLayout.indexOf(QWidget) -> int """
        return 0

    def invalidate(self):  # real signature unknown; restored from __doc__
        """ QLayout.invalidate() """
        pass

    def isEmpty(self):  # real signature unknown; restored from __doc__
        """ QLayout.isEmpty() -> bool """
        return False

    def isEnabled(self):  # real signature unknown; restored from __doc__
        """ QLayout.isEnabled() -> bool """
        return False

    def itemAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QLayout.itemAt(int) -> QLayoutItem """
        return QLayoutItem

    def layout(self):  # real signature unknown; restored from __doc__
        """ QLayout.layout() -> QLayout """
        return QLayout

    def margin(self):  # real signature unknown; restored from __doc__
        """ QLayout.margin() -> int """
        return 0

    def maximumSize(self):  # real signature unknown; restored from __doc__
        """ QLayout.maximumSize() -> QSize """
        pass

    def menuBar(self):  # real signature unknown; restored from __doc__
        """ QLayout.menuBar() -> QWidget """
        return QWidget

    def minimumSize(self):  # real signature unknown; restored from __doc__
        """ QLayout.minimumSize() -> QSize """
        pass

    def parentWidget(self):  # real signature unknown; restored from __doc__
        """ QLayout.parentWidget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def removeItem(self, QLayoutItem):
        """ QLayout.removeItem(QLayoutItem) """
        pass

    # real signature unknown; restored from __doc__
    def removeWidget(self, QWidget):
        """ QLayout.removeWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setAlignment(self, *__args):
        """
        QLayout.setAlignment(QWidget, Qt.Alignment) -> bool
        QLayout.setAlignment(QLayout, Qt.Alignment) -> bool
        QLayout.setAlignment(Qt.Alignment)
        """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def setContentsMargins(self, *__args):
        """
        QLayout.setContentsMargins(int, int, int, int)
        QLayout.setContentsMargins(QMargins)
        """
        pass

    # real signature unknown; restored from __doc__
    def setEnabled(self, bool):
        """ QLayout.setEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setGeometry(self, QRect):
        """ QLayout.setGeometry(QRect) """
        pass

    # real signature unknown; restored from __doc__
    def setMargin(self, p_int):
        """ QLayout.setMargin(int) """
        pass

    # real signature unknown; restored from __doc__
    def setMenuBar(self, QWidget):
        """ QLayout.setMenuBar(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setSizeConstraint(self, QLayout_SizeConstraint):
        """ QLayout.setSizeConstraint(QLayout.SizeConstraint) """
        pass

    # real signature unknown; restored from __doc__
    def setSpacing(self, p_int):
        """ QLayout.setSpacing(int) """
        pass

    def sizeConstraint(self):  # real signature unknown; restored from __doc__
        """ QLayout.sizeConstraint() -> QLayout.SizeConstraint """
        pass

    def SizeConstraint(self, *args, **kwargs):  # real signature unknown
        pass

    def spacing(self):  # real signature unknown; restored from __doc__
        """ QLayout.spacing() -> int """
        return 0

    def takeAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QLayout.takeAt(int) -> QLayoutItem """
        return QLayoutItem

    # real signature unknown; restored from __doc__
    def totalHeightForWidth(self, p_int):
        """ QLayout.totalHeightForWidth(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def totalMaximumSize(self):
        """ QLayout.totalMaximumSize() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def totalMinimumSize(self):
        """ QLayout.totalMinimumSize() -> QSize """
        pass

    def totalSizeHint(self):  # real signature unknown; restored from __doc__
        """ QLayout.totalSizeHint() -> QSize """
        pass

    def update(self):  # real signature unknown; restored from __doc__
        """ QLayout.update() """
        pass

    # real signature unknown; restored from __doc__
    def widgetEvent(self, QEvent):
        """ QLayout.widgetEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QWidget=None):
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass

    SetDefaultConstraint = 0
    SetFixedSize = 3
    SetMaximumSize = 4
    SetMinAndMaxSize = 5
    SetMinimumSize = 2
    SetNoConstraint = 1


class QBoxLayout(QLayout):

    """ QBoxLayout(QBoxLayout.Direction, QWidget parent=None) """
    # real signature unknown; restored from __doc__

    def addItem(self, QLayoutItem):
        """ QBoxLayout.addItem(QLayoutItem) """
        pass

    # real signature unknown; restored from __doc__
    def addLayout(self, QLayout, int_stretch=0):
        """ QBoxLayout.addLayout(QLayout, int stretch=0) """
        pass

    # real signature unknown; restored from __doc__
    def addSpacerItem(self, QSpacerItem):
        """ QBoxLayout.addSpacerItem(QSpacerItem) """
        pass

    # real signature unknown; restored from __doc__
    def addSpacing(self, p_int):
        """ QBoxLayout.addSpacing(int) """
        pass

    # real signature unknown; restored from __doc__
    def addStretch(self, int_stretch=0):
        """ QBoxLayout.addStretch(int stretch=0) """
        pass

    def addStrut(self, p_int):  # real signature unknown; restored from __doc__
        """ QBoxLayout.addStrut(int) """
        pass

    # real signature unknown; restored from __doc__
    def addWidget(self, QWidget, int_stretch=0, Qt_Alignment_alignment=0):
        """ QBoxLayout.addWidget(QWidget, int stretch=0, Qt.Alignment alignment=0) """
        pass

    def count(self):  # real signature unknown; restored from __doc__
        """ QBoxLayout.count() -> int """
        return 0

    def Direction(self, *args, **kwargs):  # real signature unknown
        pass

    def direction(self):  # real signature unknown; restored from __doc__
        """ QBoxLayout.direction() -> QBoxLayout.Direction """
        pass

    # real signature unknown; restored from __doc__
    def expandingDirections(self):
        """ QBoxLayout.expandingDirections() -> Qt.Orientations """
        pass

    # real signature unknown; restored from __doc__
    def hasHeightForWidth(self):
        """ QBoxLayout.hasHeightForWidth() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def heightForWidth(self, p_int):
        """ QBoxLayout.heightForWidth(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def insertItem(self, p_int, QLayoutItem):
        """ QBoxLayout.insertItem(int, QLayoutItem) """
        pass

    # real signature unknown; restored from __doc__
    def insertLayout(self, p_int, QLayout, int_stretch=0):
        """ QBoxLayout.insertLayout(int, QLayout, int stretch=0) """
        pass

    # real signature unknown; restored from __doc__
    def insertSpacerItem(self, p_int, QSpacerItem):
        """ QBoxLayout.insertSpacerItem(int, QSpacerItem) """
        pass

    # real signature unknown; restored from __doc__
    def insertSpacing(self, p_int, p_int_1):
        """ QBoxLayout.insertSpacing(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def insertStretch(self, p_int, int_stretch=0):
        """ QBoxLayout.insertStretch(int, int stretch=0) """
        pass

    # real signature unknown; restored from __doc__
    def insertWidget(self, p_int, QWidget, int_stretch=0, Qt_Alignment_alignment=0):
        """ QBoxLayout.insertWidget(int, QWidget, int stretch=0, Qt.Alignment alignment=0) """
        pass

    def invalidate(self):  # real signature unknown; restored from __doc__
        """ QBoxLayout.invalidate() """
        pass

    def itemAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QBoxLayout.itemAt(int) -> QLayoutItem """
        return QLayoutItem

    def maximumSize(self):  # real signature unknown; restored from __doc__
        """ QBoxLayout.maximumSize() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def minimumHeightForWidth(self, p_int):
        """ QBoxLayout.minimumHeightForWidth(int) -> int """
        return 0

    def minimumSize(self):  # real signature unknown; restored from __doc__
        """ QBoxLayout.minimumSize() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def setDirection(self, QBoxLayout_Direction):
        """ QBoxLayout.setDirection(QBoxLayout.Direction) """
        pass

    # real signature unknown; restored from __doc__
    def setGeometry(self, QRect):
        """ QBoxLayout.setGeometry(QRect) """
        pass

    # real signature unknown; restored from __doc__
    def setSpacing(self, p_int):
        """ QBoxLayout.setSpacing(int) """
        pass

    # real signature unknown; restored from __doc__
    def setStretch(self, p_int, p_int_1):
        """ QBoxLayout.setStretch(int, int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setStretchFactor(self, *__args):
        """
        QBoxLayout.setStretchFactor(QWidget, int) -> bool
        QBoxLayout.setStretchFactor(QLayout, int) -> bool
        """
        return False

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QBoxLayout.sizeHint() -> QSize """
        pass

    def spacing(self):  # real signature unknown; restored from __doc__
        """ QBoxLayout.spacing() -> int """
        return 0

    def stretch(self, p_int):  # real signature unknown; restored from __doc__
        """ QBoxLayout.stretch(int) -> int """
        return 0

    def takeAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QBoxLayout.takeAt(int) -> QLayoutItem """
        return QLayoutItem

    # real signature unknown; restored from __doc__
    def __init__(self, QBoxLayout_Direction, QWidget_parent=None):
        pass

    BottomToTop = 3
    Down = 2
    LeftToRight = 0
    RightToLeft = 1
    TopToBottom = 2
    Up = 3


class QBrush():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QBrush()
    QBrush(Qt.BrushStyle)
    QBrush(QColor, Qt.BrushStyle style=Qt.SolidPattern)
    QBrush(Qt.GlobalColor, Qt.BrushStyle style=Qt.SolidPattern)
    QBrush(QColor, QPixmap)
    QBrush(Qt.GlobalColor, QPixmap)
    QBrush(QPixmap)
    QBrush(QImage)
    QBrush(QGradient)
    QBrush(QBrush)
    QBrush(QVariant)
    """

    def color(self):  # real signature unknown; restored from __doc__
        """ QBrush.color() -> QColor """
        return QColor

    def gradient(self):  # real signature unknown; restored from __doc__
        """ QBrush.gradient() -> QGradient """
        return QGradient

    def isOpaque(self):  # real signature unknown; restored from __doc__
        """ QBrush.isOpaque() -> bool """
        return False

    def matrix(self):  # real signature unknown; restored from __doc__
        """ QBrush.matrix() -> QMatrix """
        return QMatrix

    # real signature unknown; restored from __doc__ with multiple overloads
    def setColor(self, *__args):
        """
        QBrush.setColor(QColor)
        QBrush.setColor(Qt.GlobalColor)
        """
        pass

    # real signature unknown; restored from __doc__
    def setMatrix(self, QMatrix):
        """ QBrush.setMatrix(QMatrix) """
        pass

    # real signature unknown; restored from __doc__
    def setStyle(self, Qt_BrushStyle):
        """ QBrush.setStyle(Qt.BrushStyle) """
        pass

    # real signature unknown; restored from __doc__
    def setTexture(self, QPixmap):
        """ QBrush.setTexture(QPixmap) """
        pass

    # real signature unknown; restored from __doc__
    def setTextureImage(self, QImage):
        """ QBrush.setTextureImage(QImage) """
        pass

    # real signature unknown; restored from __doc__
    def setTransform(self, QTransform):
        """ QBrush.setTransform(QTransform) """
        pass

    def style(self):  # real signature unknown; restored from __doc__
        """ QBrush.style() -> Qt.BrushStyle """
        pass

    def texture(self):  # real signature unknown; restored from __doc__
        """ QBrush.texture() -> QPixmap """
        return QPixmap

    def textureImage(self):  # real signature unknown; restored from __doc__
        """ QBrush.textureImage() -> QImage """
        return QImage

    def transform(self):  # real signature unknown; restored from __doc__
        """ QBrush.transform() -> QTransform """
        return QTransform

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QButtonGroup(__PyQt4_QtCore.QObject):

    """ QButtonGroup(QObject parent=None) """
    # real signature unknown; restored from __doc__ with multiple overloads

    def addButton(self, QAbstractButton, p_int=None):
        """
        QButtonGroup.addButton(QAbstractButton)
        QButtonGroup.addButton(QAbstractButton, int)
        """
        pass

    def button(self, p_int):  # real signature unknown; restored from __doc__
        """ QButtonGroup.button(int) -> QAbstractButton """
        return QAbstractButton

    def buttonClicked(self, *args, **kwargs):  # real signature unknown
        """
        QButtonGroup.buttonClicked[QAbstractButton] [signal]
        QButtonGroup.buttonClicked[int] [signal]
        """
        pass

    def buttonPressed(self, *args, **kwargs):  # real signature unknown
        """
        QButtonGroup.buttonPressed[QAbstractButton] [signal]
        QButtonGroup.buttonPressed[int] [signal]
        """
        pass

    def buttonReleased(self, *args, **kwargs):  # real signature unknown
        """
        QButtonGroup.buttonReleased[QAbstractButton] [signal]
        QButtonGroup.buttonReleased[int] [signal]
        """
        pass

    def buttons(self):  # real signature unknown; restored from __doc__
        """ QButtonGroup.buttons() -> list-of-QAbstractButton """
        pass

    def checkedButton(self):  # real signature unknown; restored from __doc__
        """ QButtonGroup.checkedButton() -> QAbstractButton """
        return QAbstractButton

    def checkedId(self):  # real signature unknown; restored from __doc__
        """ QButtonGroup.checkedId() -> int """
        return 0

    def exclusive(self):  # real signature unknown; restored from __doc__
        """ QButtonGroup.exclusive() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def id(self, QAbstractButton):
        """ QButtonGroup.id(QAbstractButton) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def removeButton(self, QAbstractButton):
        """ QButtonGroup.removeButton(QAbstractButton) """
        pass

    # real signature unknown; restored from __doc__
    def setExclusive(self, bool):
        """ QButtonGroup.setExclusive(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setId(self, QAbstractButton, p_int):
        """ QButtonGroup.setId(QAbstractButton, int) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QCalendarWidget(QWidget):

    """ QCalendarWidget(QWidget parent=None) """

    def activated(self, *args, **kwargs):  # real signature unknown
        """ QCalendarWidget.activated[QDate] [signal] """
        pass

    def clicked(self, *args, **kwargs):  # real signature unknown
        """ QCalendarWidget.clicked[QDate] [signal] """
        pass

    def currentPageChanged(self, *args, **kwargs):  # real signature unknown
        """ QCalendarWidget.currentPageChanged[int, int] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def dateEditAcceptDelay(self):
        """ QCalendarWidget.dateEditAcceptDelay() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def dateTextFormat(self, QDate=None):
        """
        QCalendarWidget.dateTextFormat() -> dict-of-QDate-QTextCharFormat
        QCalendarWidget.dateTextFormat(QDate) -> QTextCharFormat
        """
        return QTextCharFormat

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QCalendarWidget.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QCalendarWidget.eventFilter(QObject, QEvent) -> bool """
        return False

    def firstDayOfWeek(self):  # real signature unknown; restored from __doc__
        """ QCalendarWidget.firstDayOfWeek() -> Qt.DayOfWeek """
        pass

    # real signature unknown; restored from __doc__
    def headerTextFormat(self):
        """ QCalendarWidget.headerTextFormat() -> QTextCharFormat """
        return QTextCharFormat

    # real signature unknown; restored from __doc__
    def horizontalHeaderFormat(self):
        """ QCalendarWidget.horizontalHeaderFormat() -> QCalendarWidget.HorizontalHeaderFormat """
        pass

    # real signature unknown
    def HorizontalHeaderFormat(self, *args, **kwargs):
        pass

    # real signature unknown; restored from __doc__
    def isDateEditEnabled(self):
        """ QCalendarWidget.isDateEditEnabled() -> bool """
        return False

    def isGridVisible(self):  # real signature unknown; restored from __doc__
        """ QCalendarWidget.isGridVisible() -> bool """
        return False

    def isHeaderVisible(self):  # real signature unknown; restored from __doc__
        """ QCalendarWidget.isHeaderVisible() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isNavigationBarVisible(self):
        """ QCalendarWidget.isNavigationBarVisible() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QCalendarWidget.keyPressEvent(QKeyEvent) """
        pass

    def maximumDate(self):  # real signature unknown; restored from __doc__
        """ QCalendarWidget.maximumDate() -> QDate """
        pass

    def minimumDate(self):  # real signature unknown; restored from __doc__
        """ QCalendarWidget.minimumDate() -> QDate """
        pass

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QCalendarWidget.minimumSizeHint() -> QSize """
        pass

    def monthShown(self):  # real signature unknown; restored from __doc__
        """ QCalendarWidget.monthShown() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QCalendarWidget.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintCell(self, QPainter, QRect, QDate):
        """ QCalendarWidget.paintCell(QPainter, QRect, QDate) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QCalendarWidget.resizeEvent(QResizeEvent) """
        pass

    def selectedDate(self):  # real signature unknown; restored from __doc__
        """ QCalendarWidget.selectedDate() -> QDate """
        pass

    def selectionChanged(self, *args, **kwargs):  # real signature unknown
        """ QCalendarWidget.selectionChanged[] [signal] """
        pass

    def selectionMode(self):  # real signature unknown; restored from __doc__
        """ QCalendarWidget.selectionMode() -> QCalendarWidget.SelectionMode """
        pass

    def SelectionMode(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def setCurrentPage(self, p_int, p_int_1):
        """ QCalendarWidget.setCurrentPage(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setDateEditAcceptDelay(self, p_int):
        """ QCalendarWidget.setDateEditAcceptDelay(int) """
        pass

    # real signature unknown; restored from __doc__
    def setDateEditEnabled(self, bool):
        """ QCalendarWidget.setDateEditEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setDateRange(self, QDate, QDate_1):
        """ QCalendarWidget.setDateRange(QDate, QDate) """
        pass

    # real signature unknown; restored from __doc__
    def setDateTextFormat(self, QDate, QTextCharFormat):
        """ QCalendarWidget.setDateTextFormat(QDate, QTextCharFormat) """
        pass

    # real signature unknown; restored from __doc__
    def setFirstDayOfWeek(self, Qt_DayOfWeek):
        """ QCalendarWidget.setFirstDayOfWeek(Qt.DayOfWeek) """
        pass

    # real signature unknown; restored from __doc__
    def setGridVisible(self, bool):
        """ QCalendarWidget.setGridVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setHeaderTextFormat(self, QTextCharFormat):
        """ QCalendarWidget.setHeaderTextFormat(QTextCharFormat) """
        pass

    # real signature unknown; restored from __doc__
    def setHeaderVisible(self, bool):
        """ QCalendarWidget.setHeaderVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setHorizontalHeaderFormat(self, QCalendarWidget_HorizontalHeaderFormat):
        """ QCalendarWidget.setHorizontalHeaderFormat(QCalendarWidget.HorizontalHeaderFormat) """
        pass

    # real signature unknown; restored from __doc__
    def setMaximumDate(self, QDate):
        """ QCalendarWidget.setMaximumDate(QDate) """
        pass

    # real signature unknown; restored from __doc__
    def setMinimumDate(self, QDate):
        """ QCalendarWidget.setMinimumDate(QDate) """
        pass

    # real signature unknown; restored from __doc__
    def setNavigationBarVisible(self, bool):
        """ QCalendarWidget.setNavigationBarVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSelectedDate(self, QDate):
        """ QCalendarWidget.setSelectedDate(QDate) """
        pass

    # real signature unknown; restored from __doc__
    def setSelectionMode(self, QCalendarWidget_SelectionMode):
        """ QCalendarWidget.setSelectionMode(QCalendarWidget.SelectionMode) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalHeaderFormat(self, QCalendarWidget_VerticalHeaderFormat):
        """ QCalendarWidget.setVerticalHeaderFormat(QCalendarWidget.VerticalHeaderFormat) """
        pass

    # real signature unknown; restored from __doc__
    def setWeekdayTextFormat(self, Qt_DayOfWeek, QTextCharFormat):
        """ QCalendarWidget.setWeekdayTextFormat(Qt.DayOfWeek, QTextCharFormat) """
        pass

    def showNextMonth(self):  # real signature unknown; restored from __doc__
        """ QCalendarWidget.showNextMonth() """
        pass

    def showNextYear(self):  # real signature unknown; restored from __doc__
        """ QCalendarWidget.showNextYear() """
        pass

    # real signature unknown; restored from __doc__
    def showPreviousMonth(self):
        """ QCalendarWidget.showPreviousMonth() """
        pass

    # real signature unknown; restored from __doc__
    def showPreviousYear(self):
        """ QCalendarWidget.showPreviousYear() """
        pass

    # real signature unknown; restored from __doc__
    def showSelectedDate(self):
        """ QCalendarWidget.showSelectedDate() """
        pass

    def showToday(self):  # real signature unknown; restored from __doc__
        """ QCalendarWidget.showToday() """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QCalendarWidget.sizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def updateCell(self, QDate):
        """ QCalendarWidget.updateCell(QDate) """
        pass

    def updateCells(self):  # real signature unknown; restored from __doc__
        """ QCalendarWidget.updateCells() """
        pass

    def VerticalHeaderFormat(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def verticalHeaderFormat(self):
        """ QCalendarWidget.verticalHeaderFormat() -> QCalendarWidget.VerticalHeaderFormat """
        pass

    # real signature unknown; restored from __doc__
    def weekdayTextFormat(self, Qt_DayOfWeek):
        """ QCalendarWidget.weekdayTextFormat(Qt.DayOfWeek) -> QTextCharFormat """
        return QTextCharFormat

    def yearShown(self):  # real signature unknown; restored from __doc__
        """ QCalendarWidget.yearShown() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    ISOWeekNumbers = 1
    LongDayNames = 3
    NoHorizontalHeader = 0
    NoSelection = 0
    NoVerticalHeader = 0
    ShortDayNames = 2
    SingleLetterDayNames = 1
    SingleSelection = 1


class QCheckBox(QAbstractButton):

    """
    QCheckBox(QWidget parent=None)
    QCheckBox(QString, QWidget parent=None)
    """

    def checkState(self):  # real signature unknown; restored from __doc__
        """ QCheckBox.checkState() -> Qt.CheckState """
        pass

    def checkStateSet(self):  # real signature unknown; restored from __doc__
        """ QCheckBox.checkStateSet() """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QCheckBox.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def hitButton(self, QPoint):
        """ QCheckBox.hitButton(QPoint) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionButton):
        """ QCheckBox.initStyleOption(QStyleOptionButton) """
        pass

    def isTristate(self):  # real signature unknown; restored from __doc__
        """ QCheckBox.isTristate() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QCheckBox.mouseMoveEvent(QMouseEvent) """
        pass

    def nextCheckState(self):  # real signature unknown; restored from __doc__
        """ QCheckBox.nextCheckState() """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QCheckBox.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setCheckState(self, Qt_CheckState):
        """ QCheckBox.setCheckState(Qt.CheckState) """
        pass

    # real signature unknown; restored from __doc__
    def setTristate(self, bool_on=True):
        """ QCheckBox.setTristate(bool on=True) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QCheckBox.sizeHint() -> QSize """
        pass

    def stateChanged(self, *args, **kwargs):  # real signature unknown
        """ QCheckBox.stateChanged[int] [signal] """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QClipboard(__PyQt4_QtCore.QObject):
    # no doc

    def changed(self, *args, **kwargs):  # real signature unknown
        """ QClipboard.changed[QClipboard.Mode] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def clear(self, QClipboard_Mode_mode=None):
        """ QClipboard.clear(QClipboard.Mode mode=QClipboard.Clipboard) """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def connectNotify(self, SIGNAL, *args, **kwargs):
        """ QClipboard.connectNotify(SIGNAL()) """
        pass

    def dataChanged(self, *args, **kwargs):  # real signature unknown
        """ QClipboard.dataChanged[] [signal] """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QClipboard.event(QEvent) -> bool """
        return False

    def findBufferChanged(self, *args, **kwargs):  # real signature unknown
        """ QClipboard.findBufferChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def image(self, QClipboard_Mode_mode=None):
        """ QClipboard.image(QClipboard.Mode mode=QClipboard.Clipboard) -> QImage """
        return QImage

    # real signature unknown; restored from __doc__
    def mimeData(self, QClipboard_Mode_mode=None):
        """ QClipboard.mimeData(QClipboard.Mode mode=QClipboard.Clipboard) -> QMimeData """
        pass

    def Mode(self, *args, **kwargs):  # real signature unknown
        pass

    def ownsClipboard(self):  # real signature unknown; restored from __doc__
        """ QClipboard.ownsClipboard() -> bool """
        return False

    def ownsFindBuffer(self):  # real signature unknown; restored from __doc__
        """ QClipboard.ownsFindBuffer() -> bool """
        return False

    def ownsSelection(self):  # real signature unknown; restored from __doc__
        """ QClipboard.ownsSelection() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def pixmap(self, QClipboard_Mode_mode=None):
        """ QClipboard.pixmap(QClipboard.Mode mode=QClipboard.Clipboard) -> QPixmap """
        return QPixmap

    def selectionChanged(self, *args, **kwargs):  # real signature unknown
        """ QClipboard.selectionChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def setImage(self, QImage, QClipboard_Mode_mode=None):
        """ QClipboard.setImage(QImage, QClipboard.Mode mode=QClipboard.Clipboard) """
        pass

    # real signature unknown; restored from __doc__
    def setMimeData(self, QMimeData, QClipboard_Mode_mode=None):
        """ QClipboard.setMimeData(QMimeData, QClipboard.Mode mode=QClipboard.Clipboard) """
        pass

    # real signature unknown; restored from __doc__
    def setPixmap(self, QPixmap, QClipboard_Mode_mode=None):
        """ QClipboard.setPixmap(QPixmap, QClipboard.Mode mode=QClipboard.Clipboard) """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, QString, QClipboard_Mode_mode=None):
        """ QClipboard.setText(QString, QClipboard.Mode mode=QClipboard.Clipboard) """
        pass

    # real signature unknown; restored from __doc__
    def supportsFindBuffer(self):
        """ QClipboard.supportsFindBuffer() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def supportsSelection(self):
        """ QClipboard.supportsSelection() -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def text(self, *__args):
        """
        QClipboard.text(QClipboard.Mode mode=QClipboard.Clipboard) -> QString
        QClipboard.text(QString, QClipboard.Mode mode=QClipboard.Clipboard) -> QString
        """
        pass

    def __init__(self, *args, **kwargs):  # real signature unknown
        pass

    Clipboard = 0
    FindBuffer = 2
    Selection = 1


class QCloseEvent(__PyQt4_QtCore.QEvent):

    """
    QCloseEvent()
    QCloseEvent(QCloseEvent)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def __init__(self, QCloseEvent=None):
        pass


class QColor():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QColor(Qt.GlobalColor)
    QColor(int)
    QColor(QVariant)
    QColor()
    QColor(int, int, int, int alpha=255)
    QColor(QString)
    QColor(QColor)
    """
    # real signature unknown; restored from __doc__

    def allowX11ColorNames(self):
        """ QColor.allowX11ColorNames() -> bool """
        return False

    def alpha(self):  # real signature unknown; restored from __doc__
        """ QColor.alpha() -> int """
        return 0

    def alphaF(self):  # real signature unknown; restored from __doc__
        """ QColor.alphaF() -> float """
        return 0.0

    def black(self):  # real signature unknown; restored from __doc__
        """ QColor.black() -> int """
        return 0

    def blackF(self):  # real signature unknown; restored from __doc__
        """ QColor.blackF() -> float """
        return 0.0

    def blue(self):  # real signature unknown; restored from __doc__
        """ QColor.blue() -> int """
        return 0

    def blueF(self):  # real signature unknown; restored from __doc__
        """ QColor.blueF() -> float """
        return 0.0

    def colorNames(self):  # real signature unknown; restored from __doc__
        """ QColor.colorNames() -> QStringList """
        pass

    # real signature unknown; restored from __doc__
    def convertTo(self, QColor_Spec):
        """ QColor.convertTo(QColor.Spec) -> QColor """
        return QColor

    def cyan(self):  # real signature unknown; restored from __doc__
        """ QColor.cyan() -> int """
        return 0

    def cyanF(self):  # real signature unknown; restored from __doc__
        """ QColor.cyanF() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def dark(self, int_factor=200):
        """ QColor.dark(int factor=200) -> QColor """
        return QColor

    # real signature unknown; restored from __doc__
    def darker(self, int_factor=200):
        """ QColor.darker(int factor=200) -> QColor """
        return QColor

    # real signature unknown; restored from __doc__
    def fromCmyk(self, p_int, p_int_1, p_int_2, p_int_3, int_alpha=255):
        """ QColor.fromCmyk(int, int, int, int, int alpha=255) -> QColor """
        return QColor

    # real signature unknown; restored from __doc__
    def fromCmykF(self, p_float, p_float_1, p_float_2, p_float_3, float_alpha=1):
        """ QColor.fromCmykF(float, float, float, float, float alpha=1) -> QColor """
        return QColor

    # real signature unknown; restored from __doc__
    def fromHsl(self, p_int, p_int_1, p_int_2, int_alpha=255):
        """ QColor.fromHsl(int, int, int, int alpha=255) -> QColor """
        return QColor

    # real signature unknown; restored from __doc__
    def fromHslF(self, p_float, p_float_1, p_float_2, float_alpha=1):
        """ QColor.fromHslF(float, float, float, float alpha=1) -> QColor """
        return QColor

    # real signature unknown; restored from __doc__
    def fromHsv(self, p_int, p_int_1, p_int_2, int_alpha=255):
        """ QColor.fromHsv(int, int, int, int alpha=255) -> QColor """
        return QColor

    # real signature unknown; restored from __doc__
    def fromHsvF(self, p_float, p_float_1, p_float_2, float_alpha=1):
        """ QColor.fromHsvF(float, float, float, float alpha=1) -> QColor """
        return QColor

    # real signature unknown; restored from __doc__ with multiple overloads
    def fromRgb(self, p_int, p_int_1=None, p_int_2=None, int_alpha=255):
        """
        QColor.fromRgb(int) -> QColor
        QColor.fromRgb(int, int, int, int alpha=255) -> QColor
        """
        return QColor

    def fromRgba(self, p_int):  # real signature unknown; restored from __doc__
        """ QColor.fromRgba(int) -> QColor """
        return QColor

    # real signature unknown; restored from __doc__
    def fromRgbF(self, p_float, p_float_1, p_float_2, float_alpha=1):
        """ QColor.fromRgbF(float, float, float, float alpha=1) -> QColor """
        return QColor

    def getCmyk(self):  # real signature unknown; restored from __doc__
        """ QColor.getCmyk() -> (int, int, int, int, int) """
        pass

    def getCmykF(self):  # real signature unknown; restored from __doc__
        """ QColor.getCmykF() -> (float, float, float, float, float) """
        pass

    def getHsl(self):  # real signature unknown; restored from __doc__
        """ QColor.getHsl() -> (int, int, int, int) """
        pass

    def getHslF(self):  # real signature unknown; restored from __doc__
        """ QColor.getHslF() -> (float, float, float, float) """
        pass

    def getHsv(self):  # real signature unknown; restored from __doc__
        """ QColor.getHsv() -> (int, int, int, int) """
        pass

    def getHsvF(self):  # real signature unknown; restored from __doc__
        """ QColor.getHsvF() -> (float, float, float, float) """
        pass

    def getRgb(self):  # real signature unknown; restored from __doc__
        """ QColor.getRgb() -> (int, int, int, int) """
        pass

    def getRgbF(self):  # real signature unknown; restored from __doc__
        """ QColor.getRgbF() -> (float, float, float, float) """
        pass

    def green(self):  # real signature unknown; restored from __doc__
        """ QColor.green() -> int """
        return 0

    def greenF(self):  # real signature unknown; restored from __doc__
        """ QColor.greenF() -> float """
        return 0.0

    def hslHue(self):  # real signature unknown; restored from __doc__
        """ QColor.hslHue() -> int """
        return 0

    def hslHueF(self):  # real signature unknown; restored from __doc__
        """ QColor.hslHueF() -> float """
        return 0.0

    def hslSaturation(self):  # real signature unknown; restored from __doc__
        """ QColor.hslSaturation() -> int """
        return 0

    def hslSaturationF(self):  # real signature unknown; restored from __doc__
        """ QColor.hslSaturationF() -> float """
        return 0.0

    def hsvHue(self):  # real signature unknown; restored from __doc__
        """ QColor.hsvHue() -> int """
        return 0

    def hsvHueF(self):  # real signature unknown; restored from __doc__
        """ QColor.hsvHueF() -> float """
        return 0.0

    def hsvSaturation(self):  # real signature unknown; restored from __doc__
        """ QColor.hsvSaturation() -> int """
        return 0

    def hsvSaturationF(self):  # real signature unknown; restored from __doc__
        """ QColor.hsvSaturationF() -> float """
        return 0.0

    def hue(self):  # real signature unknown; restored from __doc__
        """ QColor.hue() -> int """
        return 0

    def hueF(self):  # real signature unknown; restored from __doc__
        """ QColor.hueF() -> float """
        return 0.0

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QColor.isValid() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isValidColor(self, QString):
        """ QColor.isValidColor(QString) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def light(self, int_factor=150):
        """ QColor.light(int factor=150) -> QColor """
        return QColor

    # real signature unknown; restored from __doc__
    def lighter(self, int_factor=150):
        """ QColor.lighter(int factor=150) -> QColor """
        return QColor

    def lightness(self):  # real signature unknown; restored from __doc__
        """ QColor.lightness() -> int """
        return 0

    def lightnessF(self):  # real signature unknown; restored from __doc__
        """ QColor.lightnessF() -> float """
        return 0.0

    def magenta(self):  # real signature unknown; restored from __doc__
        """ QColor.magenta() -> int """
        return 0

    def magentaF(self):  # real signature unknown; restored from __doc__
        """ QColor.magentaF() -> float """
        return 0.0

    def name(self):  # real signature unknown; restored from __doc__
        """ QColor.name() -> QString """
        pass

    def red(self):  # real signature unknown; restored from __doc__
        """ QColor.red() -> int """
        return 0

    def redF(self):  # real signature unknown; restored from __doc__
        """ QColor.redF() -> float """
        return 0.0

    def rgb(self):  # real signature unknown; restored from __doc__
        """ QColor.rgb() -> int """
        return 0

    def rgba(self):  # real signature unknown; restored from __doc__
        """ QColor.rgba() -> int """
        return 0

    def saturation(self):  # real signature unknown; restored from __doc__
        """ QColor.saturation() -> int """
        return 0

    def saturationF(self):  # real signature unknown; restored from __doc__
        """ QColor.saturationF() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def setAllowX11ColorNames(self, bool):
        """ QColor.setAllowX11ColorNames(bool) """
        pass

    def setAlpha(self, p_int):  # real signature unknown; restored from __doc__
        """ QColor.setAlpha(int) """
        pass

    # real signature unknown; restored from __doc__
    def setAlphaF(self, p_float):
        """ QColor.setAlphaF(float) """
        pass

    def setBlue(self, p_int):  # real signature unknown; restored from __doc__
        """ QColor.setBlue(int) """
        pass

    # real signature unknown; restored from __doc__
    def setBlueF(self, p_float):
        """ QColor.setBlueF(float) """
        pass

    # real signature unknown; restored from __doc__
    def setCmyk(self, p_int, p_int_1, p_int_2, p_int_3, int_alpha=255):
        """ QColor.setCmyk(int, int, int, int, int alpha=255) """
        pass

    # real signature unknown; restored from __doc__
    def setCmykF(self, p_float, p_float_1, p_float_2, p_float_3, float_alpha=1):
        """ QColor.setCmykF(float, float, float, float, float alpha=1) """
        pass

    def setGreen(self, p_int):  # real signature unknown; restored from __doc__
        """ QColor.setGreen(int) """
        pass

    # real signature unknown; restored from __doc__
    def setGreenF(self, p_float):
        """ QColor.setGreenF(float) """
        pass

    # real signature unknown; restored from __doc__
    def setHsl(self, p_int, p_int_1, p_int_2, int_alpha=255):
        """ QColor.setHsl(int, int, int, int alpha=255) """
        pass

    # real signature unknown; restored from __doc__
    def setHslF(self, p_float, p_float_1, p_float_2, float_alpha=1):
        """ QColor.setHslF(float, float, float, float alpha=1) """
        pass

    # real signature unknown; restored from __doc__
    def setHsv(self, p_int, p_int_1, p_int_2, int_alpha=255):
        """ QColor.setHsv(int, int, int, int alpha=255) """
        pass

    # real signature unknown; restored from __doc__
    def setHsvF(self, p_float, p_float_1, p_float_2, float_alpha=1):
        """ QColor.setHsvF(float, float, float, float alpha=1) """
        pass

    # real signature unknown; restored from __doc__
    def setNamedColor(self, QString):
        """ QColor.setNamedColor(QString) """
        pass

    def setRed(self, p_int):  # real signature unknown; restored from __doc__
        """ QColor.setRed(int) """
        pass

    # real signature unknown; restored from __doc__
    def setRedF(self, p_float):
        """ QColor.setRedF(float) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setRgb(self, p_int, p_int_1=None, p_int_2=None, int_alpha=255):
        """
        QColor.setRgb(int, int, int, int alpha=255)
        QColor.setRgb(int)
        """
        pass

    def setRgba(self, p_int):  # real signature unknown; restored from __doc__
        """ QColor.setRgba(int) """
        pass

    # real signature unknown; restored from __doc__
    def setRgbF(self, p_float, p_float_1, p_float_2, float_alpha=1):
        """ QColor.setRgbF(float, float, float, float alpha=1) """
        pass

    def spec(self):  # real signature unknown; restored from __doc__
        """ QColor.spec() -> QColor.Spec """
        pass

    def Spec(self, *args, **kwargs):  # real signature unknown
        pass

    def toCmyk(self):  # real signature unknown; restored from __doc__
        """ QColor.toCmyk() -> QColor """
        return QColor

    def toHsl(self):  # real signature unknown; restored from __doc__
        """ QColor.toHsl() -> QColor """
        return QColor

    def toHsv(self):  # real signature unknown; restored from __doc__
        """ QColor.toHsv() -> QColor """
        return QColor

    def toRgb(self):  # real signature unknown; restored from __doc__
        """ QColor.toRgb() -> QColor """
        return QColor

    def value(self):  # real signature unknown; restored from __doc__
        """ QColor.value() -> int """
        return 0

    def valueF(self):  # real signature unknown; restored from __doc__
        """ QColor.valueF() -> float """
        return 0.0

    def yellow(self):  # real signature unknown; restored from __doc__
        """ QColor.yellow() -> int """
        return 0

    def yellowF(self):  # real signature unknown; restored from __doc__
        """ QColor.yellowF() -> float """
        return 0.0

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    __weakref__ = property(lambda self: object())  # default

    Cmyk = 3
    Hsl = 4
    Hsv = 2
    Invalid = 0
    Rgb = 1


class QColorDialog(QDialog):

    """
    QColorDialog(QWidget parent=None)
    QColorDialog(QColor, QWidget parent=None)
    """
    # real signature unknown; restored from __doc__

    def changeEvent(self, QEvent):
        """ QColorDialog.changeEvent(QEvent) """
        pass

    def ColorDialogOption(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def ColorDialogOptions(self, *__args):
        """
        QColorDialog.ColorDialogOptions(QColorDialog.ColorDialogOptions)
        QColorDialog.ColorDialogOptions(int)
        QColorDialog.ColorDialogOptions()
        """
        pass

    def colorSelected(self, *args, **kwargs):  # real signature unknown
        """ QColorDialog.colorSelected[QColor] [signal] """
        pass

    def currentColor(self):  # real signature unknown; restored from __doc__
        """ QColorDialog.currentColor() -> QColor """
        return QColor

    def currentColorChanged(self, *args, **kwargs):  # real signature unknown
        """ QColorDialog.currentColorChanged[QColor] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def customColor(self, p_int):
        """ QColorDialog.customColor(int) -> int """
        return 0

    def customCount(self):  # real signature unknown; restored from __doc__
        """ QColorDialog.customCount() -> int """
        return 0

    def done(self, p_int):  # real signature unknown; restored from __doc__
        """ QColorDialog.done(int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def getColor(self, *__args):
        """
        QColorDialog.getColor(QColor initial=Qt.white, QWidget parent=None) -> QColor
        QColorDialog.getColor(QColor, QWidget, QString, QColorDialog.ColorDialogOptions options=0) -> QColor
        """
        return QColor

    # real signature unknown; restored from __doc__
    def getRgba(self, int_initial=2147483647, QWidget_parent=None):
        """ QColorDialog.getRgba(int initial=2147483647, QWidget parent=None) -> (int, bool) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def open(self, *__args):
        """
        QColorDialog.open()
        QColorDialog.open(QObject, SLOT())
        QColorDialog.open(callable)
        """
        pass

    def options(self):  # real signature unknown; restored from __doc__
        """ QColorDialog.options() -> QColorDialog.ColorDialogOptions """
        pass

    def selectedColor(self):  # real signature unknown; restored from __doc__
        """ QColorDialog.selectedColor() -> QColor """
        return QColor

    # real signature unknown; restored from __doc__
    def setCurrentColor(self, QColor):
        """ QColorDialog.setCurrentColor(QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setCustomColor(self, p_int, p_int_1):
        """ QColorDialog.setCustomColor(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setOption(self, QColorDialog_ColorDialogOption, bool_on=True):
        """ QColorDialog.setOption(QColorDialog.ColorDialogOption, bool on=True) """
        pass

    # real signature unknown; restored from __doc__
    def setOptions(self, QColorDialog_ColorDialogOptions):
        """ QColorDialog.setOptions(QColorDialog.ColorDialogOptions) """
        pass

    # real signature unknown; restored from __doc__
    def setStandardColor(self, p_int, p_int_1):
        """ QColorDialog.setStandardColor(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QColorDialog.setVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def testOption(self, QColorDialog_ColorDialogOption):
        """ QColorDialog.testOption(QColorDialog.ColorDialogOption) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    DontUseNativeDialog = 4
    NoButtons = 2
    ShowAlphaChannel = 1


class QColumnView(QAbstractItemView):

    """ QColumnView(QWidget parent=None) """

    def columnWidths(self):  # real signature unknown; restored from __doc__
        """ QColumnView.columnWidths() -> list-of-int """
        pass

    # real signature unknown; restored from __doc__
    def createColumn(self, QModelIndex):
        """ QColumnView.createColumn(QModelIndex) -> QAbstractItemView """
        return QAbstractItemView

    # real signature unknown; restored from __doc__
    def currentChanged(self, QModelIndex, QModelIndex_1):
        """ QColumnView.currentChanged(QModelIndex, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def horizontalOffset(self):
        """ QColumnView.horizontalOffset() -> int """
        return 0

    def indexAt(self, QPoint):  # real signature unknown; restored from __doc__
        """ QColumnView.indexAt(QPoint) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def initializeColumn(self, QAbstractItemView):
        """ QColumnView.initializeColumn(QAbstractItemView) """
        pass

    # real signature unknown; restored from __doc__
    def isIndexHidden(self, QModelIndex):
        """ QColumnView.isIndexHidden(QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def moveCursor(self, QAbstractItemView_CursorAction, Qt_KeyboardModifiers):
        """ QColumnView.moveCursor(QAbstractItemView.CursorAction, Qt.KeyboardModifiers) -> QModelIndex """
        pass

    def previewWidget(self):  # real signature unknown; restored from __doc__
        """ QColumnView.previewWidget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QColumnView.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def resizeGripsVisible(self):
        """ QColumnView.resizeGripsVisible() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def rowsInserted(self, QModelIndex, p_int, p_int_1):
        """ QColumnView.rowsInserted(QModelIndex, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def scrollContentsBy(self, p_int, p_int_1):
        """ QColumnView.scrollContentsBy(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def scrollTo(self, QModelIndex, QAbstractItemView_ScrollHint_hint=None):
        """ QColumnView.scrollTo(QModelIndex, QAbstractItemView.ScrollHint hint=QAbstractItemView.EnsureVisible) """
        pass

    def selectAll(self):  # real signature unknown; restored from __doc__
        """ QColumnView.selectAll() """
        pass

    # real signature unknown; restored from __doc__
    def setColumnWidths(self, list_of_int):
        """ QColumnView.setColumnWidths(list-of-int) """
        pass

    # real signature unknown; restored from __doc__
    def setModel(self, QAbstractItemModel):
        """ QColumnView.setModel(QAbstractItemModel) """
        pass

    # real signature unknown; restored from __doc__
    def setPreviewWidget(self, QWidget):
        """ QColumnView.setPreviewWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setResizeGripsVisible(self, bool):
        """ QColumnView.setResizeGripsVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setRootIndex(self, QModelIndex):
        """ QColumnView.setRootIndex(QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def setSelection(self, QRect, QItemSelectionModel_SelectionFlags):
        """ QColumnView.setSelection(QRect, QItemSelectionModel.SelectionFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setSelectionModel(self, QItemSelectionModel):
        """ QColumnView.setSelectionModel(QItemSelectionModel) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QColumnView.sizeHint() -> QSize """
        pass

    def updatePreviewWidget(self, *args, **kwargs):  # real signature unknown
        """ QColumnView.updatePreviewWidget[QModelIndex] [signal] """
        pass

    def verticalOffset(self):  # real signature unknown; restored from __doc__
        """ QColumnView.verticalOffset() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def visualRect(self, QModelIndex):
        """ QColumnView.visualRect(QModelIndex) -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def visualRegionForSelection(self, QItemSelection):
        """ QColumnView.visualRegionForSelection(QItemSelection) -> QRegion """
        return QRegion

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass


class QComboBox(QWidget):

    """ QComboBox(QWidget parent=None) """

    def activated(self, *args, **kwargs):  # real signature unknown
        """
        QComboBox.activated[int] [signal]
        QComboBox.activated[QString] [signal]
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def addItem(self, *__args):
        """
        QComboBox.addItem(QString, QVariant userData=QVariant())
        QComboBox.addItem(QIcon, QString, QVariant userData=QVariant())
        """
        pass

    # real signature unknown; restored from __doc__
    def addItems(self, QStringList):
        """ QComboBox.addItems(QStringList) """
        pass

    def autoCompletion(self):  # real signature unknown; restored from __doc__
        """ QComboBox.autoCompletion() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def autoCompletionCaseSensitivity(self):
        """ QComboBox.autoCompletionCaseSensitivity() -> Qt.CaseSensitivity """
        pass

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QComboBox.changeEvent(QEvent) """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QComboBox.clear() """
        pass

    def clearEditText(self):  # real signature unknown; restored from __doc__
        """ QComboBox.clearEditText() """
        pass

    def completer(self):  # real signature unknown; restored from __doc__
        """ QComboBox.completer() -> QCompleter """
        return QCompleter

    # real signature unknown; restored from __doc__
    def contextMenuEvent(self, QContextMenuEvent):
        """ QComboBox.contextMenuEvent(QContextMenuEvent) """
        pass

    def count(self):  # real signature unknown; restored from __doc__
        """ QComboBox.count() -> int """
        return 0

    def currentIndex(self):  # real signature unknown; restored from __doc__
        """ QComboBox.currentIndex() -> int """
        return 0

    def currentIndexChanged(self, *args, **kwargs):  # real signature unknown
        """
        QComboBox.currentIndexChanged[int] [signal]
        QComboBox.currentIndexChanged[QString] [signal]
        """
        pass

    def currentText(self):  # real signature unknown; restored from __doc__
        """ QComboBox.currentText() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def duplicatesEnabled(self):
        """ QComboBox.duplicatesEnabled() -> bool """
        return False

    def editTextChanged(self, *args, **kwargs):  # real signature unknown
        """ QComboBox.editTextChanged[QString] [signal] """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QComboBox.event(QEvent) -> bool """
        return False

    # real signature unknown; NOTE: unreliably restored from __doc__
    def findData(self, QVariant, int_role=None, Qt_MatchFlags_flags=None, *args, **kwargs):
        """ QComboBox.findData(QVariant, int role=Qt.UserRole, Qt.MatchFlags flags=Qt.MatchExactly|Qt.MatchCaseSensitive) -> int """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def findText(self, QString, Qt_MatchFlags_flags=None, *args, **kwargs):
        """ QComboBox.findText(QString, Qt.MatchFlags flags=Qt.MatchExactly|Qt.MatchCaseSensitive) -> int """
        pass

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QComboBox.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QComboBox.focusOutEvent(QFocusEvent) """
        pass

    def hasFrame(self):  # real signature unknown; restored from __doc__
        """ QComboBox.hasFrame() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def hideEvent(self, QHideEvent):
        """ QComboBox.hideEvent(QHideEvent) """
        pass

    def hidePopup(self):  # real signature unknown; restored from __doc__
        """ QComboBox.hidePopup() """
        pass

    def highlighted(self, *args, **kwargs):  # real signature unknown
        """
        QComboBox.highlighted[int] [signal]
        QComboBox.highlighted[QString] [signal]
        """
        pass

    def iconSize(self):  # real signature unknown; restored from __doc__
        """ QComboBox.iconSize() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionComboBox):
        """ QComboBox.initStyleOption(QStyleOptionComboBox) """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodEvent(self, QInputMethodEvent):
        """ QComboBox.inputMethodEvent(QInputMethodEvent) """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodQuery(self, Qt_InputMethodQuery):
        """ QComboBox.inputMethodQuery(Qt.InputMethodQuery) -> QVariant """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def insertItem(self, p_int, *__args):
        """
        QComboBox.insertItem(int, QString, QVariant userData=QVariant())
        QComboBox.insertItem(int, QIcon, QString, QVariant userData=QVariant())
        """
        pass

    # real signature unknown; restored from __doc__
    def insertItems(self, p_int, QStringList):
        """ QComboBox.insertItems(int, QStringList) """
        pass

    def insertPolicy(self):  # real signature unknown; restored from __doc__
        """ QComboBox.insertPolicy() -> QComboBox.InsertPolicy """
        pass

    def InsertPolicy(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def insertSeparator(self, p_int):
        """ QComboBox.insertSeparator(int) """
        pass

    def isEditable(self):  # real signature unknown; restored from __doc__
        """ QComboBox.isEditable() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def itemData(self, p_int, int_role=None):
        """ QComboBox.itemData(int, int role=Qt.UserRole) -> QVariant """
        pass

    def itemDelegate(self):  # real signature unknown; restored from __doc__
        """ QComboBox.itemDelegate() -> QAbstractItemDelegate """
        return QAbstractItemDelegate

    def itemIcon(self, p_int):  # real signature unknown; restored from __doc__
        """ QComboBox.itemIcon(int) -> QIcon """
        return QIcon

    def itemText(self, p_int):  # real signature unknown; restored from __doc__
        """ QComboBox.itemText(int) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QComboBox.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def keyReleaseEvent(self, QKeyEvent):
        """ QComboBox.keyReleaseEvent(QKeyEvent) """
        pass

    def lineEdit(self):  # real signature unknown; restored from __doc__
        """ QComboBox.lineEdit() -> QLineEdit """
        return QLineEdit

    def maxCount(self):  # real signature unknown; restored from __doc__
        """ QComboBox.maxCount() -> int """
        return 0

    def maxVisibleItems(self):  # real signature unknown; restored from __doc__
        """ QComboBox.maxVisibleItems() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def minimumContentsLength(self):
        """ QComboBox.minimumContentsLength() -> int """
        return 0

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QComboBox.minimumSizeHint() -> QSize """
        pass

    def model(self):  # real signature unknown; restored from __doc__
        """ QComboBox.model() -> QAbstractItemModel """
        pass

    def modelColumn(self):  # real signature unknown; restored from __doc__
        """ QComboBox.modelColumn() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QComboBox.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QComboBox.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QComboBox.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def removeItem(self, p_int):
        """ QComboBox.removeItem(int) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QComboBox.resizeEvent(QResizeEvent) """
        pass

    def rootModelIndex(self):  # real signature unknown; restored from __doc__
        """ QComboBox.rootModelIndex() -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def setAutoCompletion(self, bool):
        """ QComboBox.setAutoCompletion(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setAutoCompletionCaseSensitivity(self, Qt_CaseSensitivity):
        """ QComboBox.setAutoCompletionCaseSensitivity(Qt.CaseSensitivity) """
        pass

    # real signature unknown; restored from __doc__
    def setCompleter(self, QCompleter):
        """ QComboBox.setCompleter(QCompleter) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentIndex(self, p_int):
        """ QComboBox.setCurrentIndex(int) """
        pass

    # real signature unknown; restored from __doc__
    def setDuplicatesEnabled(self, bool):
        """ QComboBox.setDuplicatesEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setEditable(self, bool):
        """ QComboBox.setEditable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setEditText(self, QString):
        """ QComboBox.setEditText(QString) """
        pass

    def setFrame(self, bool):  # real signature unknown; restored from __doc__
        """ QComboBox.setFrame(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setIconSize(self, QSize):
        """ QComboBox.setIconSize(QSize) """
        pass

    # real signature unknown; restored from __doc__
    def setInsertPolicy(self, QComboBox_InsertPolicy):
        """ QComboBox.setInsertPolicy(QComboBox.InsertPolicy) """
        pass

    # real signature unknown; restored from __doc__
    def setItemData(self, p_int, QVariant, int_role=None):
        """ QComboBox.setItemData(int, QVariant, int role=Qt.UserRole) """
        pass

    # real signature unknown; restored from __doc__
    def setItemDelegate(self, QAbstractItemDelegate):
        """ QComboBox.setItemDelegate(QAbstractItemDelegate) """
        pass

    # real signature unknown; restored from __doc__
    def setItemIcon(self, p_int, QIcon):
        """ QComboBox.setItemIcon(int, QIcon) """
        pass

    # real signature unknown; restored from __doc__
    def setItemText(self, p_int, QString):
        """ QComboBox.setItemText(int, QString) """
        pass

    # real signature unknown; restored from __doc__
    def setLineEdit(self, QLineEdit):
        """ QComboBox.setLineEdit(QLineEdit) """
        pass

    # real signature unknown; restored from __doc__
    def setMaxCount(self, p_int):
        """ QComboBox.setMaxCount(int) """
        pass

    # real signature unknown; restored from __doc__
    def setMaxVisibleItems(self, p_int):
        """ QComboBox.setMaxVisibleItems(int) """
        pass

    # real signature unknown; restored from __doc__
    def setMinimumContentsLength(self, p_int):
        """ QComboBox.setMinimumContentsLength(int) """
        pass

    # real signature unknown; restored from __doc__
    def setModel(self, QAbstractItemModel):
        """ QComboBox.setModel(QAbstractItemModel) """
        pass

    # real signature unknown; restored from __doc__
    def setModelColumn(self, p_int):
        """ QComboBox.setModelColumn(int) """
        pass

    # real signature unknown; restored from __doc__
    def setRootModelIndex(self, QModelIndex):
        """ QComboBox.setRootModelIndex(QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def setSizeAdjustPolicy(self, QComboBox_SizeAdjustPolicy):
        """ QComboBox.setSizeAdjustPolicy(QComboBox.SizeAdjustPolicy) """
        pass

    # real signature unknown; restored from __doc__
    def setValidator(self, QValidator):
        """ QComboBox.setValidator(QValidator) """
        pass

    # real signature unknown; restored from __doc__
    def setView(self, QAbstractItemView):
        """ QComboBox.setView(QAbstractItemView) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QComboBox.showEvent(QShowEvent) """
        pass

    def showPopup(self):  # real signature unknown; restored from __doc__
        """ QComboBox.showPopup() """
        pass

    def SizeAdjustPolicy(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def sizeAdjustPolicy(self):
        """ QComboBox.sizeAdjustPolicy() -> QComboBox.SizeAdjustPolicy """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QComboBox.sizeHint() -> QSize """
        pass

    def validator(self):  # real signature unknown; restored from __doc__
        """ QComboBox.validator() -> QValidator """
        return QValidator

    def view(self):  # real signature unknown; restored from __doc__
        """ QComboBox.view() -> QAbstractItemView """
        return QAbstractItemView

    # real signature unknown; restored from __doc__
    def wheelEvent(self, QWheelEvent):
        """ QComboBox.wheelEvent(QWheelEvent) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass

    AdjustToContents = 0
    AdjustToContentsOnFirstShow = 1
    AdjustToMinimumContentsLength = 2
    AdjustToMinimumContentsLengthWithIcon = 3
    InsertAfterCurrent = 4
    InsertAlphabetically = 6
    InsertAtBottom = 3
    InsertAtCurrent = 2
    InsertAtTop = 1
    InsertBeforeCurrent = 5
    NoInsert = 0


class QPushButton(QAbstractButton):

    """
    QPushButton(QWidget parent=None)
    QPushButton(QString, QWidget parent=None)
    QPushButton(QIcon, QString, QWidget parent=None)
    """

    def autoDefault(self):  # real signature unknown; restored from __doc__
        """ QPushButton.autoDefault() -> bool """
        return False

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QPushButton.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QPushButton.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QPushButton.focusOutEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionButton):
        """ QPushButton.initStyleOption(QStyleOptionButton) """
        pass

    def isDefault(self):  # real signature unknown; restored from __doc__
        """ QPushButton.isDefault() -> bool """
        return False

    def isFlat(self):  # real signature unknown; restored from __doc__
        """ QPushButton.isFlat() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QPushButton.keyPressEvent(QKeyEvent) """
        pass

    def menu(self):  # real signature unknown; restored from __doc__
        """ QPushButton.menu() -> QMenu """
        return QMenu

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QPushButton.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QPushButton.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setAutoDefault(self, bool):
        """ QPushButton.setAutoDefault(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setDefault(self, bool):
        """ QPushButton.setDefault(bool) """
        pass

    def setFlat(self, bool):  # real signature unknown; restored from __doc__
        """ QPushButton.setFlat(bool) """
        pass

    def setMenu(self, QMenu):  # real signature unknown; restored from __doc__
        """ QPushButton.setMenu(QMenu) """
        pass

    def showMenu(self):  # real signature unknown; restored from __doc__
        """ QPushButton.showMenu() """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QPushButton.sizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QCommandLinkButton(QPushButton):

    """
    QCommandLinkButton(QWidget parent=None)
    QCommandLinkButton(QString, QWidget parent=None)
    QCommandLinkButton(QString, QString, QWidget parent=None)
    """

    def description(self):  # real signature unknown; restored from __doc__
        """ QCommandLinkButton.description() -> QString """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QCommandLinkButton.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def heightForWidth(self, p_int):
        """ QCommandLinkButton.heightForWidth(int) -> int """
        return 0

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QCommandLinkButton.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QCommandLinkButton.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setDescription(self, QString):
        """ QCommandLinkButton.setDescription(QString) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QCommandLinkButton.sizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QStyle(__PyQt4_QtCore.QObject):

    """ QStyle() """
    # real signature unknown; restored from __doc__

    def alignedRect(self, Qt_LayoutDirection, Qt_Alignment, QSize, QRect):
        """ QStyle.alignedRect(Qt.LayoutDirection, Qt.Alignment, QSize, QRect) -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def combinedLayoutSpacing(self, QSizePolicy_ControlTypes, QSizePolicy_ControlTypes_1, Qt_Orientation, QStyleOption_option=None, QWidget_widget=None):
        """ QStyle.combinedLayoutSpacing(QSizePolicy.ControlTypes, QSizePolicy.ControlTypes, Qt.Orientation, QStyleOption option=None, QWidget widget=None) -> int """
        return 0

    def ComplexControl(self, *args, **kwargs):  # real signature unknown
        pass

    def ContentsType(self, *args, **kwargs):  # real signature unknown
        pass

    def ControlElement(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def drawComplexControl(self, QStyle_ComplexControl, QStyleOptionComplex, QPainter, QWidget_widget=None):
        """ QStyle.drawComplexControl(QStyle.ComplexControl, QStyleOptionComplex, QPainter, QWidget widget=None) """
        pass

    # real signature unknown; restored from __doc__
    def drawControl(self, QStyle_ControlElement, QStyleOption, QPainter, QWidget_widget=None):
        """ QStyle.drawControl(QStyle.ControlElement, QStyleOption, QPainter, QWidget widget=None) """
        pass

    # real signature unknown; restored from __doc__
    def drawItemPixmap(self, QPainter, QRect, p_int, QPixmap):
        """ QStyle.drawItemPixmap(QPainter, QRect, int, QPixmap) """
        pass

    # real signature unknown; restored from __doc__
    def drawItemText(self, QPainter, QRect, p_int, QPalette, bool, QString, QPalette_ColorRole_textRole=None):
        """ QStyle.drawItemText(QPainter, QRect, int, QPalette, bool, QString, QPalette.ColorRole textRole=QPalette.NoRole) """
        pass

    # real signature unknown; restored from __doc__
    def drawPrimitive(self, QStyle_PrimitiveElement, QStyleOption, QPainter, QWidget_widget=None):
        """ QStyle.drawPrimitive(QStyle.PrimitiveElement, QStyleOption, QPainter, QWidget widget=None) """
        pass

    # real signature unknown; restored from __doc__
    def generatedIconPixmap(self, QIcon_Mode, QPixmap, QStyleOption):
        """ QStyle.generatedIconPixmap(QIcon.Mode, QPixmap, QStyleOption) -> QPixmap """
        return QPixmap

    # real signature unknown; restored from __doc__
    def hitTestComplexControl(self, QStyle_ComplexControl, QStyleOptionComplex, QPoint, QWidget_widget=None):
        """ QStyle.hitTestComplexControl(QStyle.ComplexControl, QStyleOptionComplex, QPoint, QWidget widget=None) -> QStyle.SubControl """
        pass

    # real signature unknown; restored from __doc__
    def itemPixmapRect(self, QRect, p_int, QPixmap):
        """ QStyle.itemPixmapRect(QRect, int, QPixmap) -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def itemTextRect(self, QFontMetrics, QRect, p_int, bool, QString):
        """ QStyle.itemTextRect(QFontMetrics, QRect, int, bool, QString) -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def layoutSpacing(self, QSizePolicy_ControlType, QSizePolicy_ControlType_1, Qt_Orientation, QStyleOption_option=None, QWidget_widget=None):
        """ QStyle.layoutSpacing(QSizePolicy.ControlType, QSizePolicy.ControlType, Qt.Orientation, QStyleOption option=None, QWidget widget=None) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def layoutSpacingImplementation(self, QSizePolicy_ControlType, QSizePolicy_ControlType_1, Qt_Orientation, QStyleOption_option=None, QWidget_widget=None):
        """ QStyle.layoutSpacingImplementation(QSizePolicy.ControlType, QSizePolicy.ControlType, Qt.Orientation, QStyleOption option=None, QWidget widget=None) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def pixelMetric(self, QStyle_PixelMetric, QStyleOption_option=None, QWidget_widget=None):
        """ QStyle.pixelMetric(QStyle.PixelMetric, QStyleOption option=None, QWidget widget=None) -> int """
        return 0

    def PixelMetric(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def polish(self, *__args):
        """
        QStyle.polish(QWidget)
        QStyle.polish(QApplication)
        QStyle.polish(QPalette) -> QPalette
        """
        return QPalette

    def PrimitiveElement(self, *args, **kwargs):  # real signature unknown
        pass

    def proxy(self):  # real signature unknown; restored from __doc__
        """ QStyle.proxy() -> QStyle """
        return QStyle

    # real signature unknown
    def RequestSoftwareInputPanel(self, *args, **kwargs):
        pass

    # real signature unknown; restored from __doc__
    def sizeFromContents(self, QStyle_ContentsType, QStyleOption, QSize, QWidget_widget=None):
        """ QStyle.sizeFromContents(QStyle.ContentsType, QStyleOption, QSize, QWidget widget=None) -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def sliderPositionFromValue(self, p_int, p_int_1, p_int_2, p_int_3, bool_upsideDown=False):
        """ QStyle.sliderPositionFromValue(int, int, int, int, bool upsideDown=False) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def sliderValueFromPosition(self, p_int, p_int_1, p_int_2, p_int_3, bool_upsideDown=False):
        """ QStyle.sliderValueFromPosition(int, int, int, int, bool upsideDown=False) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def standardIcon(self, QStyle_StandardPixmap, QStyleOption_option=None, QWidget_widget=None):
        """ QStyle.standardIcon(QStyle.StandardPixmap, QStyleOption option=None, QWidget widget=None) -> QIcon """
        return QIcon

    # real signature unknown; restored from __doc__
    def standardIconImplementation(self, QStyle_StandardPixmap, QStyleOption_option=None, QWidget_widget=None):
        """ QStyle.standardIconImplementation(QStyle.StandardPixmap, QStyleOption option=None, QWidget widget=None) -> QIcon """
        return QIcon

    def standardPalette(self):  # real signature unknown; restored from __doc__
        """ QStyle.standardPalette() -> QPalette """
        return QPalette

    # real signature unknown; restored from __doc__
    def standardPixmap(self, QStyle_StandardPixmap, QStyleOption_option=None, QWidget_widget=None):
        """ QStyle.standardPixmap(QStyle.StandardPixmap, QStyleOption option=None, QWidget widget=None) -> QPixmap """
        return QPixmap

    def StandardPixmap(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def State(self, *__args):
        """
        QStyle.State(QStyle.State)
        QStyle.State(int)
        QStyle.State()
        """
        pass

    def StateFlag(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def styleHint(self, QStyle_StyleHint, QStyleOption_option=None, QWidget_widget=None, QStyleHintReturn_returnData=None):
        """ QStyle.styleHint(QStyle.StyleHint, QStyleOption option=None, QWidget widget=None, QStyleHintReturn returnData=None) -> int """
        return 0

    def StyleHint(self, *args, **kwargs):  # real signature unknown
        pass

    def SubControl(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def subControlRect(self, QStyle_ComplexControl, QStyleOptionComplex, QStyle_SubControl, QWidget_widget=None):
        """ QStyle.subControlRect(QStyle.ComplexControl, QStyleOptionComplex, QStyle.SubControl, QWidget widget=None) -> QRect """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def SubControls(self, *__args):
        """
        QStyle.SubControls(QStyle.SubControls)
        QStyle.SubControls(int)
        QStyle.SubControls()
        """
        pass

    def SubElement(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def subElementRect(self, QStyle_SubElement, QStyleOption, QWidget_widget=None):
        """ QStyle.subElementRect(QStyle.SubElement, QStyleOption, QWidget widget=None) -> QRect """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def unpolish(self, *__args):
        """
        QStyle.unpolish(QWidget)
        QStyle.unpolish(QApplication)
        """
        pass

    # real signature unknown; restored from __doc__
    def visualAlignment(self, Qt_LayoutDirection, Qt_Alignment):
        """ QStyle.visualAlignment(Qt.LayoutDirection, Qt.Alignment) -> Qt.Alignment """
        pass

    # real signature unknown; restored from __doc__
    def visualPos(self, Qt_LayoutDirection, QRect, QPoint):
        """ QStyle.visualPos(Qt.LayoutDirection, QRect, QPoint) -> QPoint """
        pass

    # real signature unknown; restored from __doc__
    def visualRect(self, Qt_LayoutDirection, QRect, QRect_1):
        """ QStyle.visualRect(Qt.LayoutDirection, QRect, QRect) -> QRect """
        pass

    def __init__(self):  # real signature unknown; restored from __doc__
        pass

    CC_ComboBox = 1
    CC_CustomBase = -268435456
    CC_Dial = 7
    CC_GroupBox = 8
    CC_MdiControls = 9
    CC_Q3ListView = 6
    CC_ScrollBar = 2
    CC_Slider = 3
    CC_SpinBox = 0
    CC_TitleBar = 5
    CC_ToolButton = 4
    CE_CheckBox = 3
    CE_CheckBoxLabel = 4
    CE_ColumnViewGrip = 45
    CE_ComboBoxLabel = 40
    CE_CustomBase = -268435456
    CE_DockWidgetTitle = 31
    CE_FocusFrame = 39
    CE_Header = 23
    CE_HeaderEmptyArea = 44
    CE_HeaderLabel = 25
    CE_HeaderSection = 24
    CE_ItemViewItem = 46
    CE_MenuBarEmptyArea = 21
    CE_MenuBarItem = 20
    CE_MenuEmptyArea = 19
    CE_MenuHMargin = 17
    CE_MenuItem = 14
    CE_MenuScroller = 15
    CE_MenuTearoff = 18
    CE_MenuVMargin = 16
    CE_ProgressBar = 10
    CE_ProgressBarContents = 12
    CE_ProgressBarGroove = 11
    CE_ProgressBarLabel = 13
    CE_PushButton = 0
    CE_PushButtonBevel = 1
    CE_PushButtonLabel = 2
    CE_Q3DockWindowEmptyArea = 26
    CE_RadioButton = 5
    CE_RadioButtonLabel = 6
    CE_RubberBand = 30
    CE_ScrollBarAddLine = 32
    CE_ScrollBarAddPage = 34
    CE_ScrollBarFirst = 37
    CE_ScrollBarLast = 38
    CE_ScrollBarSlider = 36
    CE_ScrollBarSubLine = 33
    CE_ScrollBarSubPage = 35
    CE_ShapedFrame = 47
    CE_SizeGrip = 28
    CE_Splitter = 29
    CE_TabBarTab = 7
    CE_TabBarTabLabel = 9
    CE_TabBarTabShape = 8
    CE_ToolBar = 41
    CE_ToolBoxTab = 27
    CE_ToolBoxTabLabel = 43
    CE_ToolBoxTabShape = 42
    CE_ToolButtonLabel = 22
    CT_CheckBox = 1
    CT_ComboBox = 4
    CT_CustomBase = -268435456
    CT_DialogButtons = 20
    CT_GroupBox = 22
    CT_HeaderSection = 21
    CT_ItemViewItem = 24
    CT_LineEdit = 16
    CT_MdiControls = 23
    CT_Menu = 11
    CT_MenuBar = 10
    CT_MenuBarItem = 9
    CT_MenuItem = 8
    CT_ProgressBar = 7
    CT_PushButton = 0
    CT_Q3DockWindow = 6
    CT_Q3Header = 15
    CT_RadioButton = 2
    CT_ScrollBar = 14
    CT_SizeGrip = 18
    CT_Slider = 13
    CT_SpinBox = 17
    CT_Splitter = 5
    CT_TabBarTab = 12
    CT_TabWidget = 19
    CT_ToolButton = 3
    PE_CustomBase = 251658240
    PE_Frame = 5
    PE_FrameButtonBevel = 15
    PE_FrameButtonTool = 16
    PE_FrameDefaultButton = 6
    PE_FrameDockWidget = 7
    PE_FrameFocusRect = 8
    PE_FrameGroupBox = 9
    PE_FrameLineEdit = 10
    PE_FrameMenu = 11
    PE_FrameStatusBar = 12
    PE_FrameStatusBarItem = 12
    PE_FrameTabBarBase = 17
    PE_FrameTabWidget = 13
    PE_FrameWindow = 14
    PE_IndicatorArrowDown = 24
    PE_IndicatorArrowLeft = 25
    PE_IndicatorArrowRight = 26
    PE_IndicatorArrowUp = 27
    PE_IndicatorBranch = 28
    PE_IndicatorButtonDropDown = 29
    PE_IndicatorCheckBox = 31
    PE_IndicatorColumnViewArrow = 47
    PE_IndicatorDockWidgetResizeHandle = 32
    PE_IndicatorHeaderArrow = 33
    PE_IndicatorItemViewItemCheck = 30
    PE_IndicatorItemViewItemDrop = 48
    PE_IndicatorMenuCheckMark = 34
    PE_IndicatorProgressChunk = 35
    PE_IndicatorRadioButton = 36
    PE_IndicatorSpinDown = 37
    PE_IndicatorSpinMinus = 38
    PE_IndicatorSpinPlus = 39
    PE_IndicatorSpinUp = 40
    PE_IndicatorTabClose = 52
    PE_IndicatorTabTear = 44
    PE_IndicatorToolBarHandle = 41
    PE_IndicatorToolBarSeparator = 42
    PE_IndicatorViewItemCheck = 30
    PE_PanelButtonBevel = 19
    PE_PanelButtonCommand = 18
    PE_PanelButtonTool = 20
    PE_PanelItemViewItem = 49
    PE_PanelItemViewRow = 50
    PE_PanelLineEdit = 23
    PE_PanelMenu = 53
    PE_PanelMenuBar = 21
    PE_PanelScrollAreaCorner = 45
    PE_PanelStatusBar = 51
    PE_PanelTipLabel = 43
    PE_PanelToolBar = 22
    PE_Q3CheckListController = 0
    PE_Q3CheckListExclusiveIndicator = 1
    PE_Q3CheckListIndicator = 2
    PE_Q3DockWindowSeparator = 3
    PE_Q3Separator = 4
    PE_Widget = 46
    PM_ButtonDefaultIndicator = 1
    PM_ButtonIconSize = 77
    PM_ButtonMargin = 0
    PM_ButtonShiftHorizontal = 3
    PM_ButtonShiftVertical = 4
    PM_CheckBoxLabelSpacing = 72
    PM_CheckListButtonSize = 41
    PM_CheckListControllerSize = 42
    PM_ComboBoxFrameWidth = 7
    PM_CustomBase = -268435456
    PM_DefaultChildMargin = 62
    PM_DefaultFrameWidth = 5
    PM_DefaultLayoutSpacing = 63
    PM_DefaultTopLevelMargin = 61
    PM_DialogButtonsButtonHeight = 45
    PM_DialogButtonsButtonWidth = 44
    PM_DialogButtonsSeparator = 43
    PM_DockWidgetFrameWidth = 18
    PM_DockWidgetHandleExtent = 17
    PM_DockWidgetSeparatorExtent = 16
    PM_DockWidgetTitleBarButtonMargin = 78
    PM_DockWidgetTitleMargin = 75
    PM_ExclusiveIndicatorHeight = 40
    PM_ExclusiveIndicatorWidth = 39
    PM_FocusFrameHMargin = 70
    PM_FocusFrameVMargin = 69
    PM_HeaderGripMargin = 50
    PM_HeaderMargin = 48
    PM_HeaderMarkSize = 49
    PM_IconViewIconSize = 66
    PM_IndicatorHeight = 38
    PM_IndicatorWidth = 37
    PM_LargeIconSize = 68
    PM_LayoutBottomMargin = 83
    PM_LayoutHorizontalSpacing = 84
    PM_LayoutLeftMargin = 80
    PM_LayoutRightMargin = 82
    PM_LayoutTopMargin = 81
    PM_LayoutVerticalSpacing = 85
    PM_ListViewIconSize = 65
    PM_MaximumDragDistance = 8
    PM_MDIFrameWidth = 46
    PM_MDIMinimizedWidth = 47
    PM_MdiSubWindowFrameWidth = 46
    PM_MdiSubWindowMinimizedWidth = 47
    PM_MenuBarHMargin = 36
    PM_MenuBarItemSpacing = 34
    PM_MenuBarPanelWidth = 33
    PM_MenuBarVMargin = 35
    PM_MenuButtonIndicator = 2
    PM_MenuDesktopFrameWidth = 32
    PM_MenuHMargin = 28
    PM_MenuPanelWidth = 30
    PM_MenuScrollerHeight = 27
    PM_MenuTearoffHeight = 31
    PM_MenuVMargin = 29
    PM_MessageBoxIconSize = 76
    PM_ProgressBarChunkWidth = 24
    PM_RadioButtonLabelSpacing = 79
    PM_ScrollBarExtent = 9
    PM_ScrollBarSliderMin = 10
    PM_ScrollView_ScrollBarSpacing = 90
    PM_SizeGripSize = 74
    PM_SliderControlThickness = 12
    PM_SliderLength = 13
    PM_SliderSpaceAvailable = 15
    PM_SliderThickness = 11
    PM_SliderTickmarkOffset = 14
    PM_SmallIconSize = 67
    PM_SpinBoxFrameWidth = 6
    PM_SpinBoxSliderHeight = 60
    PM_SplitterWidth = 25
    PM_SubMenuOverlap = 91
    PM_TabBarBaseHeight = 22
    PM_TabBarBaseOverlap = 23
    PM_TabBarIconSize = 73
    PM_TabBarScrollButtonWidth = 53
    PM_TabBarTabHSpace = 20
    PM_TabBarTabOverlap = 19
    PM_TabBarTabShiftHorizontal = 51
    PM_TabBarTabShiftVertical = 52
    PM_TabBarTabVSpace = 21
    PM_TabBar_ScrollButtonOverlap = 86
    PM_TabCloseIndicatorHeight = 89
    PM_TabCloseIndicatorWidth = 88
    PM_TextCursorWidth = 87
    PM_TitleBarHeight = 26
    PM_ToolBarExtensionExtent = 59
    PM_ToolBarFrameWidth = 54
    PM_ToolBarHandleExtent = 55
    PM_ToolBarIconSize = 64
    PM_ToolBarItemMargin = 57
    PM_ToolBarItemSpacing = 56
    PM_ToolBarSeparatorExtent = 58
    PM_ToolTipLabelFrameWidth = 71
    RSIP_OnMouseClick = 1
    RSIP_OnMouseClickAndAlreadyFocused = 0
    SC_All = -1
    SC_ComboBoxArrow = 4
    SC_ComboBoxEditField = 2
    SC_ComboBoxFrame = 1
    SC_ComboBoxListBoxPopup = 8
    SC_CustomBase = -268435456
    SC_DialGroove = 1
    SC_DialHandle = 2
    SC_DialTickmarks = 4
    SC_GroupBoxCheckBox = 1
    SC_GroupBoxContents = 4
    SC_GroupBoxFrame = 8
    SC_GroupBoxLabel = 2
    SC_MdiCloseButton = 4
    SC_MdiMinButton = 1
    SC_MdiNormalButton = 2
    SC_None = 0
    SC_Q3ListView = 1
    SC_Q3ListViewBranch = 2
    SC_Q3ListViewExpand = 4
    SC_ScrollBarAddLine = 1
    SC_ScrollBarAddPage = 4
    SC_ScrollBarFirst = 16
    SC_ScrollBarGroove = 128
    SC_ScrollBarLast = 32
    SC_ScrollBarSlider = 64
    SC_ScrollBarSubLine = 2
    SC_ScrollBarSubPage = 8
    SC_SliderGroove = 1
    SC_SliderHandle = 2
    SC_SliderTickmarks = 4
    SC_SpinBoxDown = 2
    SC_SpinBoxEditField = 8
    SC_SpinBoxFrame = 4
    SC_SpinBoxUp = 1
    SC_TitleBarCloseButton = 8
    SC_TitleBarContextHelpButton = 128
    SC_TitleBarLabel = 256
    SC_TitleBarMaxButton = 4
    SC_TitleBarMinButton = 2
    SC_TitleBarNormalButton = 16
    SC_TitleBarShadeButton = 32
    SC_TitleBarSysMenu = 1
    SC_TitleBarUnshadeButton = 64
    SC_ToolButton = 1
    SC_ToolButtonMenu = 2
    SE_CheckBoxClickRect = 5
    SE_CheckBoxContents = 3
    SE_CheckBoxFocusRect = 4
    SE_CheckBoxIndicator = 2
    SE_CheckBoxLayoutItem = 42
    SE_ComboBoxFocusRect = 10
    SE_ComboBoxLayoutItem = 43
    SE_CustomBase = -268435456
    SE_DateTimeEditLayoutItem = 44
    SE_DialogButtonAbort = 21
    SE_DialogButtonAccept = 16
    SE_DialogButtonAll = 20
    SE_DialogButtonApply = 18
    SE_DialogButtonBoxLayoutItem = 45
    SE_DialogButtonCustom = 24
    SE_DialogButtonHelp = 19
    SE_DialogButtonIgnore = 22
    SE_DialogButtonReject = 17
    SE_DialogButtonRetry = 23
    SE_DockWidgetCloseButton = 38
    SE_DockWidgetFloatButton = 39
    SE_DockWidgetIcon = 41
    SE_DockWidgetTitleBarText = 40
    SE_FrameContents = 37
    SE_FrameLayoutItem = 53
    SE_GroupBoxLayoutItem = 54
    SE_HeaderArrow = 27
    SE_HeaderLabel = 26
    SE_ItemViewItemCheckIndicator = 33
    SE_ItemViewItemDecoration = 56
    SE_ItemViewItemFocusRect = 58
    SE_ItemViewItemText = 57
    SE_LabelLayoutItem = 46
    SE_LineEditContents = 36
    SE_ProgressBarContents = 14
    SE_ProgressBarGroove = 13
    SE_ProgressBarLabel = 15
    SE_ProgressBarLayoutItem = 47
    SE_PushButtonContents = 0
    SE_PushButtonFocusRect = 1
    SE_PushButtonLayoutItem = 48
    SE_Q3DockWindowHandleRect = 12
    SE_RadioButtonClickRect = 9
    SE_RadioButtonContents = 7
    SE_RadioButtonFocusRect = 8
    SE_RadioButtonIndicator = 6
    SE_RadioButtonLayoutItem = 49
    SE_ShapedFrameContents = 62
    SE_SliderFocusRect = 11
    SE_SliderLayoutItem = 50
    SE_SpinBoxLayoutItem = 51
    SE_TabBarTabLeftButton = 59
    SE_TabBarTabRightButton = 60
    SE_TabBarTabText = 61
    SE_TabBarTearIndicator = 34
    SE_TabWidgetLayoutItem = 55
    SE_TabWidgetLeftCorner = 31
    SE_TabWidgetRightCorner = 32
    SE_TabWidgetTabBar = 28
    SE_TabWidgetTabContents = 30
    SE_TabWidgetTabPane = 29
    SE_ToolBarHandle = 63
    SE_ToolBoxTabContents = 25
    SE_ToolButtonLayoutItem = 52
    SE_TreeViewDisclosureItem = 35
    SE_ViewItemCheckIndicator = 33
    SH_BlinkCursorWhenTextSelected = 28
    SH_Button_FocusPolicy = 49
    SH_ComboBox_LayoutDirection = 59
    SH_ComboBox_ListMouseTracking = 19
    SH_ComboBox_Popup = 25
    SH_ComboBox_PopupFrameStyle = 70
    SH_CustomBase = -268435456
    SH_DialogButtonBox_ButtonsHaveIcons = 72
    SH_DialogButtonLayout = 69
    SH_DialogButtons_DefaultButton = 36
    SH_Dial_BackgroundRole = 58
    SH_DitherDisabledText = 1
    SH_DockWidget_ButtonsHaveFrame = 95
    SH_DrawMenuBarSeparator = 47
    SH_EtchDisabledText = 0
    SH_FocusFrame_AboveWidget = 78
    SH_FocusFrame_Mask = 54
    SH_FontDialog_SelectAssociatedText = 13
    SH_FormLayoutFieldGrowthPolicy = 90
    SH_FormLayoutFormAlignment = 91
    SH_FormLayoutLabelAlignment = 92
    SH_FormLayoutWrapPolicy = 87
    SH_GroupBox_TextLabelColor = 32
    SH_GroupBox_TextLabelVerticalAlignment = 31
    SH_Header_ArrowAlignment = 6
    SH_ItemView_ActivateItemOnSingleClick = 62
    SH_ItemView_ArrowKeysNavigateIntoChildren = 81
    SH_ItemView_ChangeHighlightOnFocus = 22
    SH_ItemView_DrawDelegateFrame = 93
    SH_ItemView_EllipsisLocation = 60
    SH_ItemView_MovementWithoutUpdatingSelection = 76
    SH_ItemView_PaintAlternatingRowColorsForEmptyArea = 86
    SH_ItemView_ShowDecorationSelected = 61
    SH_LineEdit_PasswordCharacter = 35
    SH_MainWindow_SpaceBelowMenuBar = 12
    SH_MenuBar_AltKeyNavigation = 18
    SH_MenuBar_DismissOnSecondClick = 50
    SH_MenuBar_MouseTracking = 21
    SH_Menu_AllowActiveAndDisabled = 14
    SH_Menu_FadeOutOnHide = 84
    SH_Menu_FillScreenWithScroll = 45
    SH_Menu_FlashTriggeredItem = 83
    SH_Menu_KeyboardSearch = 67
    SH_Menu_Mask = 82
    SH_Menu_MouseTracking = 20
    SH_Menu_Scrollable = 30
    SH_Menu_SelectionWrap = 75
    SH_Menu_SloppySubMenus = 33
    SH_Menu_SpaceActivatesItem = 15
    SH_Menu_SubMenuPopupDelay = 16
    SH_MessageBox_CenterButtons = 74
    SH_MessageBox_TextInteractionFlags = 71
    SH_MessageBox_UseBorderForButtonSpacing = 51
    SH_PrintDialog_RightAlignButtons = 11
    SH_ProgressDialog_CenterCancelButton = 9
    SH_ProgressDialog_TextLabelAlignment = 10
    SH_Q3ListViewExpand_SelectMouseType = 40
    SH_RequestSoftwareInputPanel = 97
    SH_RichText_FullWidthSelection = 29
    SH_RubberBand_Mask = 55
    SH_ScrollBar_ContextMenu = 63
    SH_ScrollBar_LeftClickAbsolutePosition = 39
    SH_ScrollBar_MiddleClickAbsolutePosition = 2
    SH_ScrollBar_RollBetweenButtons = 64
    SH_ScrollBar_ScrollWhenPointerLeavesControl = 3
    SH_ScrollBar_StopMouseOverSlider = 27
    SH_ScrollView_FrameOnlyAroundContents = 17
    SH_Slider_AbsoluteSetButtons = 65
    SH_Slider_PageSetButtons = 66
    SH_Slider_SloppyKeyEvents = 8
    SH_Slider_SnapToValue = 7
    SH_Slider_StopMouseOverSlider = 27
    SH_SpellCheckUnderlineStyle = 73
    SH_SpinBox_AnimateButton = 42
    SH_SpinBox_ClickAutoRepeatRate = 44
    SH_SpinBox_ClickAutoRepeatThreshold = 85
    SH_SpinBox_KeyPressAutoRepeatRate = 43
    SH_SpinControls_DisableOnBounds = 57
    SH_TabBar_Alignment = 5
    SH_TabBar_CloseButtonPosition = 94
    SH_TabBar_ElideMode = 68
    SH_TabBar_PreferNoArrows = 38
    SH_TabBar_SelectMouseType = 4
    SH_Table_GridLineColor = 34
    SH_TabWidget_DefaultTabPosition = 88
    SH_TextControl_FocusIndicatorTextCharFormat = 79
    SH_TitleBar_AutoRaise = 52
    SH_TitleBar_ModifyNotification = 48
    SH_TitleBar_NoBorder = 26
    SH_ToolBar_Movable = 89
    SH_ToolBox_SelectedPageTitleBold = 37
    SH_ToolButtonStyle = 96
    SH_ToolButton_PopupDelay = 53
    SH_ToolTipLabel_Opacity = 46
    SH_ToolTip_Mask = 77
    SH_UnderlineShortcut = 41
    SH_Widget_ShareActivation = 23
    SH_WindowFrame_Mask = 56
    SH_WizardStyle = 80
    SH_Workspace_FillSpaceOnMaximize = 24
    SP_ArrowBack = 53
    SP_ArrowDown = 50
    SP_ArrowForward = 54
    SP_ArrowLeft = 51
    SP_ArrowRight = 52
    SP_ArrowUp = 49
    SP_BrowserReload = 58
    SP_BrowserStop = 59
    SP_CommandLink = 56
    SP_ComputerIcon = 15
    SP_CustomBase = -268435456
    SP_DesktopIcon = 13
    SP_DialogApplyButton = 44
    SP_DialogCancelButton = 39
    SP_DialogCloseButton = 43
    SP_DialogDiscardButton = 46
    SP_DialogHelpButton = 40
    SP_DialogNoButton = 48
    SP_DialogOkButton = 38
    SP_DialogOpenButton = 41
    SP_DialogResetButton = 45
    SP_DialogSaveButton = 42
    SP_DialogYesButton = 47
    SP_DirClosedIcon = 22
    SP_DirHomeIcon = 55
    SP_DirIcon = 37
    SP_DirLinkIcon = 23
    SP_DirOpenIcon = 21
    SP_DockWidgetCloseButton = 8
    SP_DriveCDIcon = 18
    SP_DriveDVDIcon = 19
    SP_DriveFDIcon = 16
    SP_DriveHDIcon = 17
    SP_DriveNetIcon = 20
    SP_FileDialogBack = 36
    SP_FileDialogContentsView = 34
    SP_FileDialogDetailedView = 32
    SP_FileDialogEnd = 29
    SP_FileDialogInfoView = 33
    SP_FileDialogListView = 35
    SP_FileDialogNewFolder = 31
    SP_FileDialogStart = 28
    SP_FileDialogToParent = 30
    SP_FileIcon = 24
    SP_FileLinkIcon = 25
    SP_MediaPause = 62
    SP_MediaPlay = 60
    SP_MediaSeekBackward = 66
    SP_MediaSeekForward = 65
    SP_MediaSkipBackward = 64
    SP_MediaSkipForward = 63
    SP_MediaStop = 61
    SP_MediaVolume = 67
    SP_MediaVolumeMuted = 68
    SP_MessageBoxCritical = 11
    SP_MessageBoxInformation = 9
    SP_MessageBoxQuestion = 12
    SP_MessageBoxWarning = 10
    SP_TitleBarCloseButton = 3
    SP_TitleBarContextHelpButton = 7
    SP_TitleBarMaxButton = 2
    SP_TitleBarMenuButton = 0
    SP_TitleBarMinButton = 1
    SP_TitleBarNormalButton = 4
    SP_TitleBarShadeButton = 5
    SP_TitleBarUnshadeButton = 6
    SP_ToolBarHorizontalExtensionButton = 26
    SP_ToolBarVerticalExtensionButton = 27
    SP_TrashIcon = 14
    SP_VistaShield = 57
    State_Active = 65536
    State_AutoRaise = 4096
    State_Bottom = 1024
    State_Children = 524288
    State_DownArrow = 64
    State_Editing = 4194304
    State_Enabled = 1
    State_FocusAtBorder = 2048
    State_HasFocus = 256
    State_Horizontal = 128
    State_Item = 1048576
    State_KeyboardFocusChange = 8388608
    State_Mini = 134217728
    State_MouseOver = 8192
    State_NoChange = 16
    State_None = 0
    State_Off = 8
    State_On = 32
    State_Open = 262144
    State_Raised = 2
    State_ReadOnly = 33554432
    State_Selected = 32768
    State_Sibling = 2097152
    State_Small = 67108864
    State_Sunken = 4
    State_Top = 512
    State_UpArrow = 16384
    State_Window = 131072


class QCommonStyle(QStyle):

    """ QCommonStyle() """
    # real signature unknown; restored from __doc__

    def drawComplexControl(self, QStyle_ComplexControl, QStyleOptionComplex, QPainter, QWidget_widget=None):
        """ QCommonStyle.drawComplexControl(QStyle.ComplexControl, QStyleOptionComplex, QPainter, QWidget widget=None) """
        pass

    # real signature unknown; restored from __doc__
    def drawControl(self, QStyle_ControlElement, QStyleOption, QPainter, QWidget_widget=None):
        """ QCommonStyle.drawControl(QStyle.ControlElement, QStyleOption, QPainter, QWidget widget=None) """
        pass

    # real signature unknown; restored from __doc__
    def drawPrimitive(self, QStyle_PrimitiveElement, QStyleOption, QPainter, QWidget_widget=None):
        """ QCommonStyle.drawPrimitive(QStyle.PrimitiveElement, QStyleOption, QPainter, QWidget widget=None) """
        pass

    # real signature unknown; restored from __doc__
    def generatedIconPixmap(self, QIcon_Mode, QPixmap, QStyleOption):
        """ QCommonStyle.generatedIconPixmap(QIcon.Mode, QPixmap, QStyleOption) -> QPixmap """
        return QPixmap

    # real signature unknown; restored from __doc__
    def hitTestComplexControl(self, QStyle_ComplexControl, QStyleOptionComplex, QPoint, QWidget_widget=None):
        """ QCommonStyle.hitTestComplexControl(QStyle.ComplexControl, QStyleOptionComplex, QPoint, QWidget widget=None) -> QStyle.SubControl """
        pass

    # real signature unknown; restored from __doc__
    def pixelMetric(self, QStyle_PixelMetric, QStyleOption_option=None, QWidget_widget=None):
        """ QCommonStyle.pixelMetric(QStyle.PixelMetric, QStyleOption option=None, QWidget widget=None) -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def polish(self, *__args):
        """
        QCommonStyle.polish(QWidget)
        QCommonStyle.polish(QApplication)
        QCommonStyle.polish(QPalette) -> QPalette
        """
        return QPalette

    # real signature unknown; restored from __doc__
    def sizeFromContents(self, QStyle_ContentsType, QStyleOption, QSize, QWidget_widget=None):
        """ QCommonStyle.sizeFromContents(QStyle.ContentsType, QStyleOption, QSize, QWidget widget=None) -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def standardIconImplementation(self, QStyle_StandardPixmap, QStyleOption_option=None, QWidget_widget=None):
        """ QCommonStyle.standardIconImplementation(QStyle.StandardPixmap, QStyleOption option=None, QWidget widget=None) -> QIcon """
        return QIcon

    # real signature unknown; restored from __doc__
    def standardPixmap(self, QStyle_StandardPixmap, QStyleOption_option=None, QWidget_widget=None):
        """ QCommonStyle.standardPixmap(QStyle.StandardPixmap, QStyleOption option=None, QWidget widget=None) -> QPixmap """
        return QPixmap

    # real signature unknown; restored from __doc__
    def styleHint(self, QStyle_StyleHint, QStyleOption_option=None, QWidget_widget=None, QStyleHintReturn_returnData=None):
        """ QCommonStyle.styleHint(QStyle.StyleHint, QStyleOption option=None, QWidget widget=None, QStyleHintReturn returnData=None) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def subControlRect(self, QStyle_ComplexControl, QStyleOptionComplex, QStyle_SubControl, QWidget_widget=None):
        """ QCommonStyle.subControlRect(QStyle.ComplexControl, QStyleOptionComplex, QStyle.SubControl, QWidget widget=None) -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def subElementRect(self, QStyle_SubElement, QStyleOption, QWidget_widget=None):
        """ QCommonStyle.subElementRect(QStyle.SubElement, QStyleOption, QWidget widget=None) -> QRect """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def unpolish(self, *__args):
        """
        QCommonStyle.unpolish(QWidget)
        QCommonStyle.unpolish(QApplication)
        """
        pass

    def __init__(self):  # real signature unknown; restored from __doc__
        pass


class QCompleter(__PyQt4_QtCore.QObject):

    """
    QCompleter(QObject parent=None)
    QCompleter(QAbstractItemModel, QObject parent=None)
    QCompleter(QStringList, QObject parent=None)
    """

    def activated(self, *args, **kwargs):  # real signature unknown
        """
        QCompleter.activated[QString] [signal]
        QCompleter.activated[QModelIndex] [signal]
        """
        pass

    def caseSensitivity(self):  # real signature unknown; restored from __doc__
        """ QCompleter.caseSensitivity() -> Qt.CaseSensitivity """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def complete(self, QRect_rect=None, *args, **kwargs):
        """ QCompleter.complete(QRect rect=QRect()) """
        pass

    # real signature unknown; restored from __doc__
    def completionColumn(self):
        """ QCompleter.completionColumn() -> int """
        return 0

    def completionCount(self):  # real signature unknown; restored from __doc__
        """ QCompleter.completionCount() -> int """
        return 0

    def completionMode(self):  # real signature unknown; restored from __doc__
        """ QCompleter.completionMode() -> QCompleter.CompletionMode """
        pass

    def CompletionMode(self, *args, **kwargs):  # real signature unknown
        pass

    def completionModel(self):  # real signature unknown; restored from __doc__
        """ QCompleter.completionModel() -> QAbstractItemModel """
        pass

    # real signature unknown; restored from __doc__
    def completionPrefix(self):
        """ QCompleter.completionPrefix() -> QString """
        pass

    def completionRole(self):  # real signature unknown; restored from __doc__
        """ QCompleter.completionRole() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def currentCompletion(self):
        """ QCompleter.currentCompletion() -> QString """
        pass

    def currentIndex(self):  # real signature unknown; restored from __doc__
        """ QCompleter.currentIndex() -> QModelIndex """
        pass

    def currentRow(self):  # real signature unknown; restored from __doc__
        """ QCompleter.currentRow() -> int """
        return 0

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QCompleter.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QCompleter.eventFilter(QObject, QEvent) -> bool """
        return False

    def highlighted(self, *args, **kwargs):  # real signature unknown
        """
        QCompleter.highlighted[QString] [signal]
        QCompleter.highlighted[QModelIndex] [signal]
        """
        pass

    def maxVisibleItems(self):  # real signature unknown; restored from __doc__
        """ QCompleter.maxVisibleItems() -> int """
        return 0

    def model(self):  # real signature unknown; restored from __doc__
        """ QCompleter.model() -> QAbstractItemModel """
        pass

    def ModelSorting(self, *args, **kwargs):  # real signature unknown
        pass

    def modelSorting(self):  # real signature unknown; restored from __doc__
        """ QCompleter.modelSorting() -> QCompleter.ModelSorting """
        pass

    # real signature unknown; restored from __doc__
    def pathFromIndex(self, QModelIndex):
        """ QCompleter.pathFromIndex(QModelIndex) -> QString """
        pass

    def popup(self):  # real signature unknown; restored from __doc__
        """ QCompleter.popup() -> QAbstractItemView """
        return QAbstractItemView

    # real signature unknown; restored from __doc__
    def setCaseSensitivity(self, Qt_CaseSensitivity):
        """ QCompleter.setCaseSensitivity(Qt.CaseSensitivity) """
        pass

    # real signature unknown; restored from __doc__
    def setCompletionColumn(self, p_int):
        """ QCompleter.setCompletionColumn(int) """
        pass

    # real signature unknown; restored from __doc__
    def setCompletionMode(self, QCompleter_CompletionMode):
        """ QCompleter.setCompletionMode(QCompleter.CompletionMode) """
        pass

    # real signature unknown; restored from __doc__
    def setCompletionPrefix(self, QString):
        """ QCompleter.setCompletionPrefix(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setCompletionRole(self, p_int):
        """ QCompleter.setCompletionRole(int) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentRow(self, p_int):
        """ QCompleter.setCurrentRow(int) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setMaxVisibleItems(self, p_int):
        """ QCompleter.setMaxVisibleItems(int) """
        pass

    # real signature unknown; restored from __doc__
    def setModel(self, QAbstractItemModel):
        """ QCompleter.setModel(QAbstractItemModel) """
        pass

    # real signature unknown; restored from __doc__
    def setModelSorting(self, QCompleter_ModelSorting):
        """ QCompleter.setModelSorting(QCompleter.ModelSorting) """
        pass

    # real signature unknown; restored from __doc__
    def setPopup(self, QAbstractItemView):
        """ QCompleter.setPopup(QAbstractItemView) """
        pass

    # real signature unknown; restored from __doc__
    def setWidget(self, QWidget):
        """ QCompleter.setWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setWrapAround(self, bool):
        """ QCompleter.setWrapAround(bool) """
        pass

    # real signature unknown; restored from __doc__
    def splitPath(self, QString):
        """ QCompleter.splitPath(QString) -> QStringList """
        pass

    def widget(self):  # real signature unknown; restored from __doc__
        """ QCompleter.widget() -> QWidget """
        return QWidget

    def wrapAround(self):  # real signature unknown; restored from __doc__
        """ QCompleter.wrapAround() -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    CaseInsensitivelySortedModel = 2
    CaseSensitivelySortedModel = 1
    InlineCompletion = 2
    PopupCompletion = 0
    UnfilteredPopupCompletion = 1
    UnsortedModel = 0


class QGradient():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QGradient()
    QGradient(QGradient)
    """

    def CoordinateMode(self, *args, **kwargs):  # real signature unknown
        pass

    def coordinateMode(self):  # real signature unknown; restored from __doc__
        """ QGradient.coordinateMode() -> QGradient.CoordinateMode """
        pass

    # real signature unknown; restored from __doc__
    def setColorAt(self, p_float, QColor):
        """ QGradient.setColorAt(float, QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setCoordinateMode(self, QGradient_CoordinateMode):
        """ QGradient.setCoordinateMode(QGradient.CoordinateMode) """
        pass

    # real signature unknown; restored from __doc__
    def setSpread(self, QGradient_Spread):
        """ QGradient.setSpread(QGradient.Spread) """
        pass

    # real signature unknown; restored from __doc__
    def setStops(self, list_of_tuple_of_float_QColor):
        """ QGradient.setStops(list-of-tuple-of-float-QColor) """
        pass

    def Spread(self, *args, **kwargs):  # real signature unknown
        pass

    def spread(self):  # real signature unknown; restored from __doc__
        """ QGradient.spread() -> QGradient.Spread """
        pass

    def stops(self):  # real signature unknown; restored from __doc__
        """ QGradient.stops() -> list-of-tuple-of-float-QColor """
        pass

    def type(self):  # real signature unknown; restored from __doc__
        """ QGradient.type() -> QGradient.Type """
        pass

    def Type(self, *args, **kwargs):  # real signature unknown
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QGradient=None):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default

    ConicalGradient = 2
    LinearGradient = 0
    LogicalMode = 0
    NoGradient = 3
    ObjectBoundingMode = 2
    PadSpread = 0
    RadialGradient = 1
    ReflectSpread = 1
    RepeatSpread = 2
    StretchToDeviceMode = 1


class QConicalGradient(QGradient):

    """
    QConicalGradient()
    QConicalGradient(QPointF, float)
    QConicalGradient(float, float, float)
    QConicalGradient(QConicalGradient)
    """

    def angle(self):  # real signature unknown; restored from __doc__
        """ QConicalGradient.angle() -> float """
        return 0.0

    def center(self):  # real signature unknown; restored from __doc__
        """ QConicalGradient.center() -> QPointF """
        pass

    # real signature unknown; restored from __doc__
    def setAngle(self, p_float):
        """ QConicalGradient.setAngle(float) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setCenter(self, *__args):
        """
        QConicalGradient.setCenter(QPointF)
        QConicalGradient.setCenter(float, float)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QInputEvent(__PyQt4_QtCore.QEvent):
    # no doc

    def modifiers(self):  # real signature unknown; restored from __doc__
        """ QInputEvent.modifiers() -> Qt.KeyboardModifiers """
        pass

    def __init__(self, *args, **kwargs):  # real signature unknown
        pass


class QContextMenuEvent(QInputEvent):

    """
    QContextMenuEvent(QContextMenuEvent.Reason, QPoint, QPoint, Qt.KeyboardModifiers)
    QContextMenuEvent(QContextMenuEvent.Reason, QPoint, QPoint)
    QContextMenuEvent(QContextMenuEvent.Reason, QPoint)
    QContextMenuEvent(QContextMenuEvent)
    """

    def globalPos(self):  # real signature unknown; restored from __doc__
        """ QContextMenuEvent.globalPos() -> QPoint """
        pass

    def globalX(self):  # real signature unknown; restored from __doc__
        """ QContextMenuEvent.globalX() -> int """
        return 0

    def globalY(self):  # real signature unknown; restored from __doc__
        """ QContextMenuEvent.globalY() -> int """
        return 0

    def pos(self):  # real signature unknown; restored from __doc__
        """ QContextMenuEvent.pos() -> QPoint """
        pass

    def Reason(self, *args, **kwargs):  # real signature unknown
        pass

    def reason(self):  # real signature unknown; restored from __doc__
        """ QContextMenuEvent.reason() -> QContextMenuEvent.Reason """
        pass

    def x(self):  # real signature unknown; restored from __doc__
        """ QContextMenuEvent.x() -> int """
        return 0

    def y(self):  # real signature unknown; restored from __doc__
        """ QContextMenuEvent.y() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    Keyboard = 1
    Mouse = 0
    Other = 2


class QCursor():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QCursor()
    QCursor(Qt.CursorShape)
    QCursor(QBitmap, QBitmap, int hotX=-1, int hotY=-1)
    QCursor(QPixmap, int hotX=-1, int hotY=-1)
    QCursor(QCursor)
    QCursor(QVariant)
    """

    def bitmap(self):  # real signature unknown; restored from __doc__
        """ QCursor.bitmap() -> QBitmap """
        return QBitmap

    def hotSpot(self):  # real signature unknown; restored from __doc__
        """ QCursor.hotSpot() -> QPoint """
        pass

    def mask(self):  # real signature unknown; restored from __doc__
        """ QCursor.mask() -> QBitmap """
        return QBitmap

    def pixmap(self):  # real signature unknown; restored from __doc__
        """ QCursor.pixmap() -> QPixmap """
        return QPixmap

    def pos(self):  # real signature unknown; restored from __doc__
        """ QCursor.pos() -> QPoint """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setPos(self, *__args):
        """
        QCursor.setPos(int, int)
        QCursor.setPos(QPoint)
        """
        pass

    # real signature unknown; restored from __doc__
    def setShape(self, Qt_CursorShape):
        """ QCursor.setShape(Qt.CursorShape) """
        pass

    def shape(self):  # real signature unknown; restored from __doc__
        """ QCursor.shape() -> Qt.CursorShape """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    __weakref__ = property(lambda self: object())  # default


class QDataWidgetMapper(__PyQt4_QtCore.QObject):

    """ QDataWidgetMapper(QObject parent=None) """
    # real signature unknown; restored from __doc__ with multiple overloads

    def addMapping(self, QWidget, p_int, QByteArray=None):
        """
        QDataWidgetMapper.addMapping(QWidget, int)
        QDataWidgetMapper.addMapping(QWidget, int, QByteArray)
        """
        pass

    def clearMapping(self):  # real signature unknown; restored from __doc__
        """ QDataWidgetMapper.clearMapping() """
        pass

    def currentIndex(self):  # real signature unknown; restored from __doc__
        """ QDataWidgetMapper.currentIndex() -> int """
        return 0

    def currentIndexChanged(self, *args, **kwargs):  # real signature unknown
        """ QDataWidgetMapper.currentIndexChanged[int] [signal] """
        pass

    def itemDelegate(self):  # real signature unknown; restored from __doc__
        """ QDataWidgetMapper.itemDelegate() -> QAbstractItemDelegate """
        return QAbstractItemDelegate

    # real signature unknown; restored from __doc__
    def mappedPropertyName(self, QWidget):
        """ QDataWidgetMapper.mappedPropertyName(QWidget) -> QByteArray """
        pass

    # real signature unknown; restored from __doc__
    def mappedSection(self, QWidget):
        """ QDataWidgetMapper.mappedSection(QWidget) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def mappedWidgetAt(self, p_int):
        """ QDataWidgetMapper.mappedWidgetAt(int) -> QWidget """
        return QWidget

    def model(self):  # real signature unknown; restored from __doc__
        """ QDataWidgetMapper.model() -> QAbstractItemModel """
        pass

    def orientation(self):  # real signature unknown; restored from __doc__
        """ QDataWidgetMapper.orientation() -> Qt.Orientation """
        pass

    # real signature unknown; restored from __doc__
    def removeMapping(self, QWidget):
        """ QDataWidgetMapper.removeMapping(QWidget) """
        pass

    def revert(self):  # real signature unknown; restored from __doc__
        """ QDataWidgetMapper.revert() """
        pass

    def rootIndex(self):  # real signature unknown; restored from __doc__
        """ QDataWidgetMapper.rootIndex() -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentIndex(self, p_int):
        """ QDataWidgetMapper.setCurrentIndex(int) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentModelIndex(self, QModelIndex):
        """ QDataWidgetMapper.setCurrentModelIndex(QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def setItemDelegate(self, QAbstractItemDelegate):
        """ QDataWidgetMapper.setItemDelegate(QAbstractItemDelegate) """
        pass

    # real signature unknown; restored from __doc__
    def setModel(self, QAbstractItemModel):
        """ QDataWidgetMapper.setModel(QAbstractItemModel) """
        pass

    # real signature unknown; restored from __doc__
    def setOrientation(self, Qt_Orientation):
        """ QDataWidgetMapper.setOrientation(Qt.Orientation) """
        pass

    # real signature unknown; restored from __doc__
    def setRootIndex(self, QModelIndex):
        """ QDataWidgetMapper.setRootIndex(QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def setSubmitPolicy(self, QDataWidgetMapper_SubmitPolicy):
        """ QDataWidgetMapper.setSubmitPolicy(QDataWidgetMapper.SubmitPolicy) """
        pass

    def submit(self):  # real signature unknown; restored from __doc__
        """ QDataWidgetMapper.submit() -> bool """
        return False

    def submitPolicy(self):  # real signature unknown; restored from __doc__
        """ QDataWidgetMapper.submitPolicy() -> QDataWidgetMapper.SubmitPolicy """
        pass

    def SubmitPolicy(self, *args, **kwargs):  # real signature unknown
        pass

    def toFirst(self):  # real signature unknown; restored from __doc__
        """ QDataWidgetMapper.toFirst() """
        pass

    def toLast(self):  # real signature unknown; restored from __doc__
        """ QDataWidgetMapper.toLast() """
        pass

    def toNext(self):  # real signature unknown; restored from __doc__
        """ QDataWidgetMapper.toNext() """
        pass

    def toPrevious(self):  # real signature unknown; restored from __doc__
        """ QDataWidgetMapper.toPrevious() """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass

    AutoSubmit = 0
    ManualSubmit = 1


class QDateTimeEdit(QAbstractSpinBox):

    """
    QDateTimeEdit(QWidget parent=None)
    QDateTimeEdit(QDateTime, QWidget parent=None)
    QDateTimeEdit(QDate, QWidget parent=None)
    QDateTimeEdit(QTime, QWidget parent=None)
    """

    def calendarPopup(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.calendarPopup() -> bool """
        return False

    def calendarWidget(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.calendarWidget() -> QCalendarWidget """
        return QCalendarWidget

    def clear(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.clear() """
        pass

    # real signature unknown; restored from __doc__
    def clearMaximumDate(self):
        """ QDateTimeEdit.clearMaximumDate() """
        pass

    # real signature unknown; restored from __doc__
    def clearMaximumDateTime(self):
        """ QDateTimeEdit.clearMaximumDateTime() """
        pass

    # real signature unknown; restored from __doc__
    def clearMaximumTime(self):
        """ QDateTimeEdit.clearMaximumTime() """
        pass

    # real signature unknown; restored from __doc__
    def clearMinimumDate(self):
        """ QDateTimeEdit.clearMinimumDate() """
        pass

    # real signature unknown; restored from __doc__
    def clearMinimumDateTime(self):
        """ QDateTimeEdit.clearMinimumDateTime() """
        pass

    # real signature unknown; restored from __doc__
    def clearMinimumTime(self):
        """ QDateTimeEdit.clearMinimumTime() """
        pass

    def currentSection(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.currentSection() -> QDateTimeEdit.Section """
        pass

    # real signature unknown; restored from __doc__
    def currentSectionIndex(self):
        """ QDateTimeEdit.currentSectionIndex() -> int """
        return 0

    def date(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.date() -> QDate """
        pass

    def dateChanged(self, *args, **kwargs):  # real signature unknown
        """ QDateTimeEdit.dateChanged[QDate] [signal] """
        pass

    def dateTime(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.dateTime() -> QDateTime """
        pass

    def dateTimeChanged(self, *args, **kwargs):  # real signature unknown
        """ QDateTimeEdit.dateTimeChanged[QDateTime] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def dateTimeFromText(self, QString):
        """ QDateTimeEdit.dateTimeFromText(QString) -> QDateTime """
        pass

    # real signature unknown; restored from __doc__
    def displayedSections(self):
        """ QDateTimeEdit.displayedSections() -> QDateTimeEdit.Sections """
        pass

    def displayFormat(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.displayFormat() -> QString """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.event(QEvent) -> bool """
        return False

    def fixup(self, QString):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.fixup(QString) """
        pass

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QDateTimeEdit.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusNextPrevChild(self, bool):
        """ QDateTimeEdit.focusNextPrevChild(bool) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionSpinBox):
        """ QDateTimeEdit.initStyleOption(QStyleOptionSpinBox) """
        pass

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QDateTimeEdit.keyPressEvent(QKeyEvent) """
        pass

    def maximumDate(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.maximumDate() -> QDate """
        pass

    def maximumDateTime(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.maximumDateTime() -> QDateTime """
        pass

    def maximumTime(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.maximumTime() -> QTime """
        pass

    def minimumDate(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.minimumDate() -> QDate """
        pass

    def minimumDateTime(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.minimumDateTime() -> QDateTime """
        pass

    def minimumTime(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.minimumTime() -> QTime """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QDateTimeEdit.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QDateTimeEdit.paintEvent(QPaintEvent) """
        pass

    def Section(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def sectionAt(self, p_int):
        """ QDateTimeEdit.sectionAt(int) -> QDateTimeEdit.Section """
        pass

    def sectionCount(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.sectionCount() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def Sections(self, *__args):
        """
        QDateTimeEdit.Sections(QDateTimeEdit.Sections)
        QDateTimeEdit.Sections(int)
        QDateTimeEdit.Sections()
        """
        pass

    # real signature unknown; restored from __doc__
    def sectionText(self, QDateTimeEdit_Section):
        """ QDateTimeEdit.sectionText(QDateTimeEdit.Section) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def setCalendarPopup(self, bool):
        """ QDateTimeEdit.setCalendarPopup(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setCalendarWidget(self, QCalendarWidget):
        """ QDateTimeEdit.setCalendarWidget(QCalendarWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentSection(self, QDateTimeEdit_Section):
        """ QDateTimeEdit.setCurrentSection(QDateTimeEdit.Section) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentSectionIndex(self, p_int):
        """ QDateTimeEdit.setCurrentSectionIndex(int) """
        pass

    def setDate(self, QDate):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.setDate(QDate) """
        pass

    # real signature unknown; restored from __doc__
    def setDateRange(self, QDate, QDate_1):
        """ QDateTimeEdit.setDateRange(QDate, QDate) """
        pass

    # real signature unknown; restored from __doc__
    def setDateTime(self, QDateTime):
        """ QDateTimeEdit.setDateTime(QDateTime) """
        pass

    # real signature unknown; restored from __doc__
    def setDateTimeRange(self, QDateTime, QDateTime_1):
        """ QDateTimeEdit.setDateTimeRange(QDateTime, QDateTime) """
        pass

    # real signature unknown; restored from __doc__
    def setDisplayFormat(self, QString):
        """ QDateTimeEdit.setDisplayFormat(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setMaximumDate(self, QDate):
        """ QDateTimeEdit.setMaximumDate(QDate) """
        pass

    # real signature unknown; restored from __doc__
    def setMaximumDateTime(self, QDateTime):
        """ QDateTimeEdit.setMaximumDateTime(QDateTime) """
        pass

    # real signature unknown; restored from __doc__
    def setMaximumTime(self, QTime):
        """ QDateTimeEdit.setMaximumTime(QTime) """
        pass

    # real signature unknown; restored from __doc__
    def setMinimumDate(self, QDate):
        """ QDateTimeEdit.setMinimumDate(QDate) """
        pass

    # real signature unknown; restored from __doc__
    def setMinimumDateTime(self, QDateTime):
        """ QDateTimeEdit.setMinimumDateTime(QDateTime) """
        pass

    # real signature unknown; restored from __doc__
    def setMinimumTime(self, QTime):
        """ QDateTimeEdit.setMinimumTime(QTime) """
        pass

    # real signature unknown; restored from __doc__
    def setSelectedSection(self, QDateTimeEdit_Section):
        """ QDateTimeEdit.setSelectedSection(QDateTimeEdit.Section) """
        pass

    def setTime(self, QTime):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.setTime(QTime) """
        pass

    # real signature unknown; restored from __doc__
    def setTimeRange(self, QTime, QTime_1):
        """ QDateTimeEdit.setTimeRange(QTime, QTime) """
        pass

    # real signature unknown; restored from __doc__
    def setTimeSpec(self, Qt_TimeSpec):
        """ QDateTimeEdit.setTimeSpec(Qt.TimeSpec) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.sizeHint() -> QSize """
        pass

    def stepBy(self, p_int):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.stepBy(int) """
        pass

    def stepEnabled(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.stepEnabled() -> QAbstractSpinBox.StepEnabled """
        pass

    # real signature unknown; restored from __doc__
    def textFromDateTime(self, QDateTime):
        """ QDateTimeEdit.textFromDateTime(QDateTime) -> QString """
        pass

    def time(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.time() -> QTime """
        pass

    def timeChanged(self, *args, **kwargs):  # real signature unknown
        """ QDateTimeEdit.timeChanged[QTime] [signal] """
        pass

    def timeSpec(self):  # real signature unknown; restored from __doc__
        """ QDateTimeEdit.timeSpec() -> Qt.TimeSpec """
        pass

    # real signature unknown; restored from __doc__
    def validate(self, QString, p_int):
        """ QDateTimeEdit.validate(QString, int) -> (QValidator.State, int) """
        pass

    # real signature unknown; restored from __doc__
    def wheelEvent(self, QWheelEvent):
        """ QDateTimeEdit.wheelEvent(QWheelEvent) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    AmPmSection = 1
    DateSections_Mask = 1792
    DaySection = 256
    HourSection = 16
    MinuteSection = 8
    MonthSection = 512
    MSecSection = 2
    NoSection = 0
    SecondSection = 4
    TimeSections_Mask = 31
    YearSection = 1024


class QDateEdit(QDateTimeEdit):

    """
    QDateEdit(QWidget parent=None)
    QDateEdit(QDate, QWidget parent=None)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def __init__(self, *__args):
        pass


class QDesktopServices():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QDesktopServices()
    QDesktopServices(QDesktopServices)
    """
    # real signature unknown; restored from __doc__

    def displayName(self, QDesktopServices_StandardLocation):
        """ QDesktopServices.displayName(QDesktopServices.StandardLocation) -> QString """
        pass

    def openUrl(self, QUrl):  # real signature unknown; restored from __doc__
        """ QDesktopServices.openUrl(QUrl) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def setUrlHandler(self, QString, *__args):
        """
        QDesktopServices.setUrlHandler(QString, QObject, str)
        QDesktopServices.setUrlHandler(QString, callable)
        """
        pass

    def StandardLocation(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def storageLocation(self, QDesktopServices_StandardLocation):
        """ QDesktopServices.storageLocation(QDesktopServices.StandardLocation) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def unsetUrlHandler(self, QString):
        """ QDesktopServices.unsetUrlHandler(QString) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QDesktopServices=None):
        pass

    __weakref__ = property(lambda self: object())  # default

    ApplicationsLocation = 3
    CacheLocation = 10
    DataLocation = 9
    DesktopLocation = 0
    DocumentsLocation = 1
    FontsLocation = 2
    HomeLocation = 8
    MoviesLocation = 5
    MusicLocation = 4
    PicturesLocation = 6
    TempLocation = 7


class QDesktopWidget(QWidget):

    """ QDesktopWidget() """
    # real signature unknown; restored from __doc__ with multiple overloads

    def availableGeometry(self, *__args):
        """
        QDesktopWidget.availableGeometry(int screen=-1) -> QRect
        QDesktopWidget.availableGeometry(QWidget) -> QRect
        QDesktopWidget.availableGeometry(QPoint) -> QRect
        """
        pass

    # real signature unknown; restored from __doc__
    def isVirtualDesktop(self):
        """ QDesktopWidget.isVirtualDesktop() -> bool """
        return False

    def numScreens(self):  # real signature unknown; restored from __doc__
        """ QDesktopWidget.numScreens() -> int """
        return 0

    def primaryScreen(self):  # real signature unknown; restored from __doc__
        """ QDesktopWidget.primaryScreen() -> int """
        return 0

    def resized(self, *args, **kwargs):  # real signature unknown
        """ QDesktopWidget.resized[int] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QDesktopWidget.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def screen(self, int_screen=-1):
        """ QDesktopWidget.screen(int screen=-1) -> QWidget """
        return QWidget

    def screenCount(self):  # real signature unknown; restored from __doc__
        """ QDesktopWidget.screenCount() -> int """
        return 0

    def screenCountChanged(self, *args, **kwargs):  # real signature unknown
        """ QDesktopWidget.screenCountChanged[int] [signal] """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def screenGeometry(self, *__args):
        """
        QDesktopWidget.screenGeometry(int screen=-1) -> QRect
        QDesktopWidget.screenGeometry(QWidget) -> QRect
        QDesktopWidget.screenGeometry(QPoint) -> QRect
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def screenNumber(self, *__args):
        """
        QDesktopWidget.screenNumber(QWidget widget=None) -> int
        QDesktopWidget.screenNumber(QPoint) -> int
        """
        return 0

    def workAreaResized(self, *args, **kwargs):  # real signature unknown
        """ QDesktopWidget.workAreaResized[int] [signal] """
        pass

    def __init__(self):  # real signature unknown; restored from __doc__
        pass


class QDial(QAbstractSlider):

    """ QDial(QWidget parent=None) """

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QDial.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionSlider):
        """ QDial.initStyleOption(QStyleOptionSlider) """
        pass

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QDial.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QDial.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QDial.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QDial.mouseReleaseEvent(QMouseEvent) """
        pass

    def notchesVisible(self):  # real signature unknown; restored from __doc__
        """ QDial.notchesVisible() -> bool """
        return False

    def notchSize(self):  # real signature unknown; restored from __doc__
        """ QDial.notchSize() -> int """
        return 0

    def notchTarget(self):  # real signature unknown; restored from __doc__
        """ QDial.notchTarget() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QDial.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QDial.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setNotchesVisible(self, bool):
        """ QDial.setNotchesVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setNotchTarget(self, p_float):
        """ QDial.setNotchTarget(float) """
        pass

    # real signature unknown; restored from __doc__
    def setWrapping(self, bool):
        """ QDial.setWrapping(bool) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QDial.sizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def sliderChange(self, QAbstractSlider_SliderChange):
        """ QDial.sliderChange(QAbstractSlider.SliderChange) """
        pass

    def wrapping(self):  # real signature unknown; restored from __doc__
        """ QDial.wrapping() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass


class QDialogButtonBox(QWidget):

    """
    QDialogButtonBox(QWidget parent=None)
    QDialogButtonBox(Qt.Orientation, QWidget parent=None)
    QDialogButtonBox(QDialogButtonBox.StandardButtons, Qt.Orientation orientation=Qt.Horizontal, QWidget parent=None)
    """

    def accepted(self, *args, **kwargs):  # real signature unknown
        """ QDialogButtonBox.accepted[] [signal] """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def addButton(self, *__args):
        """
        QDialogButtonBox.addButton(QAbstractButton, QDialogButtonBox.ButtonRole)
        QDialogButtonBox.addButton(QString, QDialogButtonBox.ButtonRole) -> QPushButton
        QDialogButtonBox.addButton(QDialogButtonBox.StandardButton) -> QPushButton
        """
        return QPushButton

    # real signature unknown; restored from __doc__
    def button(self, QDialogButtonBox_StandardButton):
        """ QDialogButtonBox.button(QDialogButtonBox.StandardButton) -> QPushButton """
        return QPushButton

    def ButtonLayout(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def buttonRole(self, QAbstractButton):
        """ QDialogButtonBox.buttonRole(QAbstractButton) -> QDialogButtonBox.ButtonRole """
        pass

    def ButtonRole(self, *args, **kwargs):  # real signature unknown
        pass

    def buttons(self):  # real signature unknown; restored from __doc__
        """ QDialogButtonBox.buttons() -> list-of-QAbstractButton """
        pass

    def centerButtons(self):  # real signature unknown; restored from __doc__
        """ QDialogButtonBox.centerButtons() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QDialogButtonBox.changeEvent(QEvent) """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QDialogButtonBox.clear() """
        pass

    def clicked(self, *args, **kwargs):  # real signature unknown
        """ QDialogButtonBox.clicked[QAbstractButton] [signal] """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QDialogButtonBox.event(QEvent) -> bool """
        return False

    def helpRequested(self, *args, **kwargs):  # real signature unknown
        """ QDialogButtonBox.helpRequested[] [signal] """
        pass

    def orientation(self):  # real signature unknown; restored from __doc__
        """ QDialogButtonBox.orientation() -> Qt.Orientation """
        pass

    def rejected(self, *args, **kwargs):  # real signature unknown
        """ QDialogButtonBox.rejected[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def removeButton(self, QAbstractButton):
        """ QDialogButtonBox.removeButton(QAbstractButton) """
        pass

    # real signature unknown; restored from __doc__
    def setCenterButtons(self, bool):
        """ QDialogButtonBox.setCenterButtons(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setOrientation(self, Qt_Orientation):
        """ QDialogButtonBox.setOrientation(Qt.Orientation) """
        pass

    # real signature unknown; restored from __doc__
    def setStandardButtons(self, QDialogButtonBox_StandardButtons):
        """ QDialogButtonBox.setStandardButtons(QDialogButtonBox.StandardButtons) """
        pass

    def StandardButton(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def standardButton(self, QAbstractButton):
        """ QDialogButtonBox.standardButton(QAbstractButton) -> QDialogButtonBox.StandardButton """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def StandardButtons(self, *__args):
        """
        QDialogButtonBox.StandardButtons(QDialogButtonBox.StandardButtons)
        QDialogButtonBox.StandardButtons(int)
        QDialogButtonBox.StandardButtons()
        """
        pass

    def standardButtons(self):  # real signature unknown; restored from __doc__
        """ QDialogButtonBox.standardButtons() -> QDialogButtonBox.StandardButtons """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    Abort = 262144
    AcceptRole = 0
    ActionRole = 3
    Apply = 33554432
    ApplyRole = 8
    Cancel = 4194304
    Close = 2097152
    DestructiveRole = 2
    Discard = 8388608
    GnomeLayout = 3
    Help = 16777216
    HelpRole = 4
    Ignore = 1048576
    InvalidRole = -1
    KdeLayout = 2
    MacLayout = 1
    No = 65536
    NoButton = 0
    NoRole = 6
    NoToAll = 131072
    Ok = 1024
    Open = 8192
    RejectRole = 1
    Reset = 67108864
    ResetRole = 7
    RestoreDefaults = 134217728
    Retry = 524288
    Save = 2048
    SaveAll = 4096
    WinLayout = 0
    Yes = 16384
    YesRole = 5
    YesToAll = 32768


class QDirModel(__PyQt4_QtCore.QAbstractItemModel):

    """
    QDirModel(QStringList, QDir.Filters, QDir.SortFlags, QObject parent=None)
    QDirModel(QObject parent=None)
    """
    # real signature unknown; NOTE: unreliably restored from __doc__

    def columnCount(self, QModelIndex_parent=None, *args, **kwargs):
        """ QDirModel.columnCount(QModelIndex parent=QModelIndex()) -> int """
        pass

    # real signature unknown; restored from __doc__
    def data(self, QModelIndex, int_role=None):
        """ QDirModel.data(QModelIndex, int role=Qt.DisplayRole) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def dropMimeData(self, QMimeData, Qt_DropAction, p_int, p_int_1, QModelIndex):
        """ QDirModel.dropMimeData(QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def fileIcon(self, QModelIndex):
        """ QDirModel.fileIcon(QModelIndex) -> QIcon """
        return QIcon

    # real signature unknown; restored from __doc__
    def fileInfo(self, QModelIndex):
        """ QDirModel.fileInfo(QModelIndex) -> QFileInfo """
        pass

    # real signature unknown; restored from __doc__
    def fileName(self, QModelIndex):
        """ QDirModel.fileName(QModelIndex) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def filePath(self, QModelIndex):
        """ QDirModel.filePath(QModelIndex) -> QString """
        pass

    def filter(self):  # real signature unknown; restored from __doc__
        """ QDirModel.filter() -> QDir.Filters """
        pass

    # real signature unknown; restored from __doc__
    def flags(self, QModelIndex):
        """ QDirModel.flags(QModelIndex) -> Qt.ItemFlags """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def hasChildren(self, QModelIndex_parent=None, *args, **kwargs):
        """ QDirModel.hasChildren(QModelIndex parent=QModelIndex()) -> bool """
        pass

    # real signature unknown; restored from __doc__
    def headerData(self, p_int, Qt_Orientation, int_role=None):
        """ QDirModel.headerData(int, Qt.Orientation, int role=Qt.DisplayRole) -> QVariant """
        pass

    def iconProvider(self):  # real signature unknown; restored from __doc__
        """ QDirModel.iconProvider() -> QFileIconProvider """
        return QFileIconProvider

    # real signature unknown; restored from __doc__ with multiple overloads
    def index(self, *__args):
        """
        QDirModel.index(int, int, QModelIndex parent=QModelIndex()) -> QModelIndex
        QDirModel.index(QString, int column=0) -> QModelIndex
        """
        pass

    # real signature unknown; restored from __doc__
    def isDir(self, QModelIndex):
        """ QDirModel.isDir(QModelIndex) -> bool """
        return False

    def isReadOnly(self):  # real signature unknown; restored from __doc__
        """ QDirModel.isReadOnly() -> bool """
        return False

    def lazyChildCount(self):  # real signature unknown; restored from __doc__
        """ QDirModel.lazyChildCount() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def mimeData(self, list_of_QModelIndex):
        """ QDirModel.mimeData(list-of-QModelIndex) -> QMimeData """
        pass

    def mimeTypes(self):  # real signature unknown; restored from __doc__
        """ QDirModel.mimeTypes() -> QStringList """
        pass

    # real signature unknown; restored from __doc__
    def mkdir(self, QModelIndex, QString):
        """ QDirModel.mkdir(QModelIndex, QString) -> QModelIndex """
        pass

    def nameFilters(self):  # real signature unknown; restored from __doc__
        """ QDirModel.nameFilters() -> QStringList """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def parent(self, QModelIndex=None):
        """
        QDirModel.parent(QModelIndex) -> QModelIndex
        QDirModel.parent() -> QObject
        """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def refresh(self, QModelIndex_parent=None, *args, **kwargs):
        """ QDirModel.refresh(QModelIndex parent=QModelIndex()) """
        pass

    # real signature unknown; restored from __doc__
    def remove(self, QModelIndex):
        """ QDirModel.remove(QModelIndex) -> bool """
        return False

    def resolveSymlinks(self):  # real signature unknown; restored from __doc__
        """ QDirModel.resolveSymlinks() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def rmdir(self, QModelIndex):
        """ QDirModel.rmdir(QModelIndex) -> bool """
        return False

    def Roles(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def rowCount(self, QModelIndex_parent=None, *args, **kwargs):
        """ QDirModel.rowCount(QModelIndex parent=QModelIndex()) -> int """
        pass

    # real signature unknown; restored from __doc__
    def setData(self, QModelIndex, QVariant, int_role=None):
        """ QDirModel.setData(QModelIndex, QVariant, int role=Qt.EditRole) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setFilter(self, QDir_Filters):
        """ QDirModel.setFilter(QDir.Filters) """
        pass

    # real signature unknown; restored from __doc__
    def setIconProvider(self, QFileIconProvider):
        """ QDirModel.setIconProvider(QFileIconProvider) """
        pass

    # real signature unknown; restored from __doc__
    def setLazyChildCount(self, bool):
        """ QDirModel.setLazyChildCount(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setNameFilters(self, QStringList):
        """ QDirModel.setNameFilters(QStringList) """
        pass

    # real signature unknown; restored from __doc__
    def setReadOnly(self, bool):
        """ QDirModel.setReadOnly(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setResolveSymlinks(self, bool):
        """ QDirModel.setResolveSymlinks(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSorting(self, QDir_SortFlags):
        """ QDirModel.setSorting(QDir.SortFlags) """
        pass

    # real signature unknown; restored from __doc__
    def sort(self, p_int, Qt_SortOrder_order=None):
        """ QDirModel.sort(int, Qt.SortOrder order=Qt.AscendingOrder) """
        pass

    def sorting(self):  # real signature unknown; restored from __doc__
        """ QDirModel.sorting() -> QDir.SortFlags """
        pass

    # real signature unknown; restored from __doc__
    def supportedDropActions(self):
        """ QDirModel.supportedDropActions() -> Qt.DropActions """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    FileIconRole = 1
    FileNameRole = 34
    FilePathRole = 33


class QDockWidget(QWidget):

    """
    QDockWidget(QString, QWidget parent=None, Qt.WindowFlags flags=0)
    QDockWidget(QWidget parent=None, Qt.WindowFlags flags=0)
    """

    def allowedAreas(self):  # real signature unknown; restored from __doc__
        """ QDockWidget.allowedAreas() -> Qt.DockWidgetAreas """
        pass

    def allowedAreasChanged(self, *args, **kwargs):  # real signature unknown
        """ QDockWidget.allowedAreasChanged[Qt.DockWidgetAreas] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QDockWidget.changeEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def closeEvent(self, QCloseEvent):
        """ QDockWidget.closeEvent(QCloseEvent) """
        pass

    def dockLocationChanged(self, *args, **kwargs):  # real signature unknown
        """ QDockWidget.dockLocationChanged[Qt.DockWidgetArea] [signal] """
        pass

    def DockWidgetFeature(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def DockWidgetFeatures(self, *__args):
        """
        QDockWidget.DockWidgetFeatures(QDockWidget.DockWidgetFeatures)
        QDockWidget.DockWidgetFeatures(int)
        QDockWidget.DockWidgetFeatures()
        """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QDockWidget.event(QEvent) -> bool """
        return False

    def features(self):  # real signature unknown; restored from __doc__
        """ QDockWidget.features() -> QDockWidget.DockWidgetFeatures """
        pass

    def featuresChanged(self, *args, **kwargs):  # real signature unknown
        """ QDockWidget.featuresChanged[QDockWidget.DockWidgetFeatures] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionDockWidget):
        """ QDockWidget.initStyleOption(QStyleOptionDockWidget) """
        pass

    # real signature unknown; restored from __doc__
    def isAreaAllowed(self, Qt_DockWidgetArea):
        """ QDockWidget.isAreaAllowed(Qt.DockWidgetArea) -> bool """
        return False

    def isFloating(self):  # real signature unknown; restored from __doc__
        """ QDockWidget.isFloating() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QDockWidget.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setAllowedAreas(self, Qt_DockWidgetAreas):
        """ QDockWidget.setAllowedAreas(Qt.DockWidgetAreas) """
        pass

    # real signature unknown; restored from __doc__
    def setFeatures(self, QDockWidget_DockWidgetFeatures):
        """ QDockWidget.setFeatures(QDockWidget.DockWidgetFeatures) """
        pass

    # real signature unknown; restored from __doc__
    def setFloating(self, bool):
        """ QDockWidget.setFloating(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setTitleBarWidget(self, QWidget):
        """ QDockWidget.setTitleBarWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setWidget(self, QWidget):
        """ QDockWidget.setWidget(QWidget) """
        pass

    def titleBarWidget(self):  # real signature unknown; restored from __doc__
        """ QDockWidget.titleBarWidget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def toggleViewAction(self):
        """ QDockWidget.toggleViewAction() -> QAction """
        return QAction

    def topLevelChanged(self, *args, **kwargs):  # real signature unknown
        """ QDockWidget.topLevelChanged[bool] [signal] """
        pass

    def visibilityChanged(self, *args, **kwargs):  # real signature unknown
        """ QDockWidget.visibilityChanged[bool] [signal] """
        pass

    def widget(self):  # real signature unknown; restored from __doc__
        """ QDockWidget.widget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    AllDockWidgetFeatures = 7
    DockWidgetClosable = 1
    DockWidgetFloatable = 4
    DockWidgetMovable = 2
    DockWidgetVerticalTitleBar = 8
    NoDockWidgetFeatures = 0


class QDoubleSpinBox(QAbstractSpinBox):

    """ QDoubleSpinBox(QWidget parent=None) """

    def cleanText(self):  # real signature unknown; restored from __doc__
        """ QDoubleSpinBox.cleanText() -> QString """
        pass

    def decimals(self):  # real signature unknown; restored from __doc__
        """ QDoubleSpinBox.decimals() -> int """
        return 0

    def fixup(self, QString):  # real signature unknown; restored from __doc__
        """ QDoubleSpinBox.fixup(QString) """
        pass

    def maximum(self):  # real signature unknown; restored from __doc__
        """ QDoubleSpinBox.maximum() -> float """
        return 0.0

    def minimum(self):  # real signature unknown; restored from __doc__
        """ QDoubleSpinBox.minimum() -> float """
        return 0.0

    def prefix(self):  # real signature unknown; restored from __doc__
        """ QDoubleSpinBox.prefix() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def setDecimals(self, p_int):
        """ QDoubleSpinBox.setDecimals(int) """
        pass

    # real signature unknown; restored from __doc__
    def setMaximum(self, p_float):
        """ QDoubleSpinBox.setMaximum(float) """
        pass

    # real signature unknown; restored from __doc__
    def setMinimum(self, p_float):
        """ QDoubleSpinBox.setMinimum(float) """
        pass

    # real signature unknown; restored from __doc__
    def setPrefix(self, QString):
        """ QDoubleSpinBox.setPrefix(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setRange(self, p_float, p_float_1):
        """ QDoubleSpinBox.setRange(float, float) """
        pass

    # real signature unknown; restored from __doc__
    def setSingleStep(self, p_float):
        """ QDoubleSpinBox.setSingleStep(float) """
        pass

    # real signature unknown; restored from __doc__
    def setSuffix(self, QString):
        """ QDoubleSpinBox.setSuffix(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setValue(self, p_float):
        """ QDoubleSpinBox.setValue(float) """
        pass

    def singleStep(self):  # real signature unknown; restored from __doc__
        """ QDoubleSpinBox.singleStep() -> float """
        return 0.0

    def suffix(self):  # real signature unknown; restored from __doc__
        """ QDoubleSpinBox.suffix() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def textFromValue(self, p_float):
        """ QDoubleSpinBox.textFromValue(float) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def validate(self, QString, p_int):
        """ QDoubleSpinBox.validate(QString, int) -> (QValidator.State, int) """
        pass

    def value(self):  # real signature unknown; restored from __doc__
        """ QDoubleSpinBox.value() -> float """
        return 0.0

    def valueChanged(self, *args, **kwargs):  # real signature unknown
        """
        QDoubleSpinBox.valueChanged[float] [signal]
        QDoubleSpinBox.valueChanged[QString] [signal]
        """
        pass

    # real signature unknown; restored from __doc__
    def valueFromText(self, QString):
        """ QDoubleSpinBox.valueFromText(QString) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass


class QValidator(__PyQt4_QtCore.QObject):

    """ QValidator(QObject parent=None) """

    def fixup(self, QString):  # real signature unknown; restored from __doc__
        """ QValidator.fixup(QString) """
        pass

    def locale(self):  # real signature unknown; restored from __doc__
        """ QValidator.locale() -> QLocale """
        pass

    # real signature unknown; restored from __doc__
    def setLocale(self, QLocale):
        """ QValidator.setLocale(QLocale) """
        pass

    def State(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def validate(self, QString, p_int):
        """ QValidator.validate(QString, int) -> (QValidator.State, int) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass

    Acceptable = 2
    Intermediate = 1
    Invalid = 0


class QDoubleValidator(QValidator):

    """
    QDoubleValidator(QObject parent=None)
    QDoubleValidator(float, float, int, QObject)
    """

    def bottom(self):  # real signature unknown; restored from __doc__
        """ QDoubleValidator.bottom() -> float """
        return 0.0

    def decimals(self):  # real signature unknown; restored from __doc__
        """ QDoubleValidator.decimals() -> int """
        return 0

    def Notation(self, *args, **kwargs):  # real signature unknown
        pass

    def notation(self):  # real signature unknown; restored from __doc__
        """ QDoubleValidator.notation() -> QDoubleValidator.Notation """
        pass

    # real signature unknown; restored from __doc__
    def setBottom(self, p_float):
        """ QDoubleValidator.setBottom(float) """
        pass

    # real signature unknown; restored from __doc__
    def setDecimals(self, p_int):
        """ QDoubleValidator.setDecimals(int) """
        pass

    # real signature unknown; restored from __doc__
    def setNotation(self, QDoubleValidator_Notation):
        """ QDoubleValidator.setNotation(QDoubleValidator.Notation) """
        pass

    # real signature unknown; restored from __doc__
    def setRange(self, p_float, p_float_1, int_decimals=0):
        """ QDoubleValidator.setRange(float, float, int decimals=0) """
        pass

    def setTop(self, p_float):  # real signature unknown; restored from __doc__
        """ QDoubleValidator.setTop(float) """
        pass

    def top(self):  # real signature unknown; restored from __doc__
        """ QDoubleValidator.top() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def validate(self, QString, p_int):
        """ QDoubleValidator.validate(QString, int) -> (QValidator.State, int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    ScientificNotation = 1
    StandardNotation = 0


class QDrag(__PyQt4_QtCore.QObject):

    """ QDrag(QWidget) """

    def actionChanged(self, *args, **kwargs):  # real signature unknown
        """ QDrag.actionChanged[Qt.DropAction] [signal] """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def exec_(self, *__args):
        """
        QDrag.exec_(Qt.DropActions supportedActions=Qt.MoveAction) -> Qt.DropAction
        QDrag.exec_(Qt.DropActions, Qt.DropAction) -> Qt.DropAction
        """
        pass

    def hotSpot(self):  # real signature unknown; restored from __doc__
        """ QDrag.hotSpot() -> QPoint """
        pass

    def mimeData(self):  # real signature unknown; restored from __doc__
        """ QDrag.mimeData() -> QMimeData """
        pass

    def pixmap(self):  # real signature unknown; restored from __doc__
        """ QDrag.pixmap() -> QPixmap """
        return QPixmap

    # real signature unknown; restored from __doc__
    def setDragCursor(self, QPixmap, Qt_DropAction):
        """ QDrag.setDragCursor(QPixmap, Qt.DropAction) """
        pass

    # real signature unknown; restored from __doc__
    def setHotSpot(self, QPoint):
        """ QDrag.setHotSpot(QPoint) """
        pass

    # real signature unknown; restored from __doc__
    def setMimeData(self, QMimeData):
        """ QDrag.setMimeData(QMimeData) """
        pass

    # real signature unknown; restored from __doc__
    def setPixmap(self, QPixmap):
        """ QDrag.setPixmap(QPixmap) """
        pass

    def source(self):  # real signature unknown; restored from __doc__
        """ QDrag.source() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def start(self, Qt_DropActions_supportedActions=None):
        """ QDrag.start(Qt.DropActions supportedActions=Qt.CopyAction) -> Qt.DropAction """
        pass

    def target(self):  # real signature unknown; restored from __doc__
        """ QDrag.target() -> QWidget """
        return QWidget

    def targetChanged(self, *args, **kwargs):  # real signature unknown
        """ QDrag.targetChanged[QWidget] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget):
        pass


class QMimeSource():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QMimeSource()
    QMimeSource(QMimeSource)
    """
    # real signature unknown; restored from __doc__

    def encodedData(self, p_str):
        """ QMimeSource.encodedData(str) -> QByteArray """
        pass

    def format(self, int_i=0):  # real signature unknown; restored from __doc__
        """ QMimeSource.format(int i=0) -> str """
        return ""

    def provides(self, p_str):  # real signature unknown; restored from __doc__
        """ QMimeSource.provides(str) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QMimeSource=None):
        pass

    __weakref__ = property(lambda self: object())  # default


class QDropEvent(__PyQt4_QtCore.QEvent, QMimeSource):

    """
    QDropEvent(QPoint, Qt.DropActions, QMimeData, Qt.MouseButtons, Qt.KeyboardModifiers, QEvent.Type type=QEvent.Drop)
    QDropEvent(QDropEvent)
    """
    # real signature unknown; restored from __doc__

    def acceptProposedAction(self):
        """ QDropEvent.acceptProposedAction() """
        pass

    def dropAction(self):  # real signature unknown; restored from __doc__
        """ QDropEvent.dropAction() -> Qt.DropAction """
        pass

    # real signature unknown; restored from __doc__
    def encodedData(self, p_str):
        """ QDropEvent.encodedData(str) -> QByteArray """
        pass

    def format(self, int_n=0):  # real signature unknown; restored from __doc__
        """ QDropEvent.format(int n=0) -> str """
        return ""

    # real signature unknown; restored from __doc__
    def keyboardModifiers(self):
        """ QDropEvent.keyboardModifiers() -> Qt.KeyboardModifiers """
        pass

    def mimeData(self):  # real signature unknown; restored from __doc__
        """ QDropEvent.mimeData() -> QMimeData """
        pass

    def mouseButtons(self):  # real signature unknown; restored from __doc__
        """ QDropEvent.mouseButtons() -> Qt.MouseButtons """
        pass

    def pos(self):  # real signature unknown; restored from __doc__
        """ QDropEvent.pos() -> QPoint """
        pass

    def possibleActions(self):  # real signature unknown; restored from __doc__
        """ QDropEvent.possibleActions() -> Qt.DropActions """
        pass

    def proposedAction(self):  # real signature unknown; restored from __doc__
        """ QDropEvent.proposedAction() -> Qt.DropAction """
        pass

    def provides(self, p_str):  # real signature unknown; restored from __doc__
        """ QDropEvent.provides(str) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setDropAction(self, Qt_DropAction):
        """ QDropEvent.setDropAction(Qt.DropAction) """
        pass

    def source(self):  # real signature unknown; restored from __doc__
        """ QDropEvent.source() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QDragMoveEvent(QDropEvent):

    """
    QDragMoveEvent(QPoint, Qt.DropActions, QMimeData, Qt.MouseButtons, Qt.KeyboardModifiers, QEvent.Type type=QEvent.DragMove)
    QDragMoveEvent(QDragMoveEvent)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def accept(self, QRect=None):
        """
        QDragMoveEvent.accept()
        QDragMoveEvent.accept(QRect)
        """
        pass

    def answerRect(self):  # real signature unknown; restored from __doc__
        """ QDragMoveEvent.answerRect() -> QRect """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def ignore(self, QRect=None):
        """
        QDragMoveEvent.ignore()
        QDragMoveEvent.ignore(QRect)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QDragEnterEvent(QDragMoveEvent):

    """
    QDragEnterEvent(QPoint, Qt.DropActions, QMimeData, Qt.MouseButtons, Qt.KeyboardModifiers)
    QDragEnterEvent(QDragEnterEvent)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def __init__(self, *__args):
        pass


class QDragLeaveEvent(__PyQt4_QtCore.QEvent):

    """
    QDragLeaveEvent()
    QDragLeaveEvent(QDragLeaveEvent)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def __init__(self, QDragLeaveEvent=None):
        pass


class QErrorMessage(QDialog):

    """ QErrorMessage(QWidget parent=None) """
    # real signature unknown; restored from __doc__

    def changeEvent(self, QEvent):
        """ QErrorMessage.changeEvent(QEvent) """
        pass

    def done(self, p_int):  # real signature unknown; restored from __doc__
        """ QErrorMessage.done(int) """
        pass

    def qtHandler(self):  # real signature unknown; restored from __doc__
        """ QErrorMessage.qtHandler() -> QErrorMessage """
        return QErrorMessage

    # real signature unknown; restored from __doc__ with multiple overloads
    def showMessage(self, QString, QString_1=None):
        """
        QErrorMessage.showMessage(QString)
        QErrorMessage.showMessage(QString, QString)
        """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass


class QFileDialog(QDialog):

    """
    QFileDialog(QWidget, Qt.WindowFlags)
    QFileDialog(QWidget parent=None, QString caption=QString(), QString directory=QString(), QString filter=QString())
    """

    def accept(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.accept() """
        pass

    def acceptMode(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.acceptMode() -> QFileDialog.AcceptMode """
        pass

    def AcceptMode(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QFileDialog.changeEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def confirmOverwrite(self):
        """ QFileDialog.confirmOverwrite() -> bool """
        return False

    def currentChanged(self, *args, **kwargs):  # real signature unknown
        """ QFileDialog.currentChanged[QString] [signal] """
        pass

    def defaultSuffix(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.defaultSuffix() -> QString """
        pass

    def DialogLabel(self, *args, **kwargs):  # real signature unknown
        pass

    def directory(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.directory() -> QDir """
        pass

    def directoryEntered(self, *args, **kwargs):  # real signature unknown
        """ QFileDialog.directoryEntered[QString] [signal] """
        pass

    def done(self, p_int):  # real signature unknown; restored from __doc__
        """ QFileDialog.done(int) """
        pass

    def fileMode(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.fileMode() -> QFileDialog.FileMode """
        pass

    def FileMode(self, *args, **kwargs):  # real signature unknown
        pass

    def fileSelected(self, *args, **kwargs):  # real signature unknown
        """ QFileDialog.fileSelected[QString] [signal] """
        pass

    def filesSelected(self, *args, **kwargs):  # real signature unknown
        """ QFileDialog.filesSelected[QStringList] [signal] """
        pass

    def filter(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.filter() -> QDir.Filters """
        pass

    def filters(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.filters() -> QStringList """
        pass

    def filterSelected(self, *args, **kwargs):  # real signature unknown
        """ QFileDialog.filterSelected[QString] [signal] """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def getExistingDirectory(self, QWidget_parent=None, QString_caption=None, *args, **kwargs):
        """ QFileDialog.getExistingDirectory(QWidget parent=None, QString caption=QString(), QString directory=QString(), QFileDialog.Options options=QFileDialog.ShowDirsOnly) -> QString """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def getOpenFileName(self, QWidget_parent=None, QString_caption=None, *args, **kwargs):
        """ QFileDialog.getOpenFileName(QWidget parent=None, QString caption=QString(), QString directory=QString(), QString filter=QString(), QString selectedFilter=None, QFileDialog.Options options=0) -> QString """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def getOpenFileNameAndFilter(self, QWidget_parent=None, QString_caption=None, *args, **kwargs):
        """ QFileDialog.getOpenFileNameAndFilter(QWidget parent=None, QString caption=QString(), QString directory=QString(), QString filter=QString(), QString initialFilter=QString(), QFileDialog.Options options=0) -> (QString, QString) """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def getOpenFileNames(self, QWidget_parent=None, QString_caption=None, *args, **kwargs):
        """ QFileDialog.getOpenFileNames(QWidget parent=None, QString caption=QString(), QString directory=QString(), QString filter=QString(), QString selectedFilter=None, QFileDialog.Options options=0) -> QStringList """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def getOpenFileNamesAndFilter(self, QWidget_parent=None, QString_caption=None, *args, **kwargs):
        """ QFileDialog.getOpenFileNamesAndFilter(QWidget parent=None, QString caption=QString(), QString directory=QString(), QString filter=QString(), QString initialFilter=QString(), QFileDialog.Options options=0) -> (QString, QString) """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def getSaveFileName(self, QWidget_parent=None, QString_caption=None, *args, **kwargs):
        """ QFileDialog.getSaveFileName(QWidget parent=None, QString caption=QString(), QString directory=QString(), QString filter=QString(), QString selectedFilter=None, QFileDialog.Options options=0) -> QString """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def getSaveFileNameAndFilter(self, QWidget_parent=None, QString_caption=None, *args, **kwargs):
        """ QFileDialog.getSaveFileNameAndFilter(QWidget parent=None, QString caption=QString(), QString directory=QString(), QString filter=QString(), QString initialFilter=QString(), QFileDialog.Options options=0) -> (QString, QString) """
        pass

    def history(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.history() -> QStringList """
        pass

    def iconProvider(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.iconProvider() -> QFileIconProvider """
        return QFileIconProvider

    # real signature unknown; restored from __doc__
    def isNameFilterDetailsVisible(self):
        """ QFileDialog.isNameFilterDetailsVisible() -> bool """
        return False

    def isReadOnly(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.isReadOnly() -> bool """
        return False

    def itemDelegate(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.itemDelegate() -> QAbstractItemDelegate """
        return QAbstractItemDelegate

    # real signature unknown; restored from __doc__
    def labelText(self, QFileDialog_DialogLabel):
        """ QFileDialog.labelText(QFileDialog.DialogLabel) -> QString """
        pass

    def nameFilters(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.nameFilters() -> QStringList """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def open(self, *__args):
        """
        QFileDialog.open()
        QFileDialog.open(QObject, SLOT())
        QFileDialog.open(callable)
        """
        pass

    def Option(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def Options(self, *__args):
        """
        QFileDialog.Options(QFileDialog.Options)
        QFileDialog.Options(int)
        QFileDialog.Options()
        """
        pass

    def options(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.options() -> QFileDialog.Options """
        pass

    def proxyModel(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.proxyModel() -> QAbstractProxyModel """
        return QAbstractProxyModel

    def resolveSymlinks(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.resolveSymlinks() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def restoreState(self, QByteArray):
        """ QFileDialog.restoreState(QByteArray) -> bool """
        return False

    def saveState(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.saveState() -> QByteArray """
        pass

    def selectedFiles(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.selectedFiles() -> QStringList """
        pass

    def selectedFilter(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.selectedFilter() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def selectedNameFilter(self):
        """ QFileDialog.selectedNameFilter() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def selectFile(self, QString):
        """ QFileDialog.selectFile(QString) """
        pass

    # real signature unknown; restored from __doc__
    def selectFilter(self, QString):
        """ QFileDialog.selectFilter(QString) """
        pass

    # real signature unknown; restored from __doc__
    def selectNameFilter(self, QString):
        """ QFileDialog.selectNameFilter(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setAcceptMode(self, QFileDialog_AcceptMode):
        """ QFileDialog.setAcceptMode(QFileDialog.AcceptMode) """
        pass

    # real signature unknown; restored from __doc__
    def setConfirmOverwrite(self, bool):
        """ QFileDialog.setConfirmOverwrite(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setDefaultSuffix(self, QString):
        """ QFileDialog.setDefaultSuffix(QString) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setDirectory(self, *__args):
        """
        QFileDialog.setDirectory(QString)
        QFileDialog.setDirectory(QDir)
        """
        pass

    # real signature unknown; restored from __doc__
    def setFileMode(self, QFileDialog_FileMode):
        """ QFileDialog.setFileMode(QFileDialog.FileMode) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setFilter(self, *__args):
        """
        QFileDialog.setFilter(QString)
        QFileDialog.setFilter(QDir.Filters)
        """
        pass

    # real signature unknown; restored from __doc__
    def setFilters(self, QStringList):
        """ QFileDialog.setFilters(QStringList) """
        pass

    # real signature unknown; restored from __doc__
    def setHistory(self, QStringList):
        """ QFileDialog.setHistory(QStringList) """
        pass

    # real signature unknown; restored from __doc__
    def setIconProvider(self, QFileIconProvider):
        """ QFileDialog.setIconProvider(QFileIconProvider) """
        pass

    # real signature unknown; restored from __doc__
    def setItemDelegate(self, QAbstractItemDelegate):
        """ QFileDialog.setItemDelegate(QAbstractItemDelegate) """
        pass

    # real signature unknown; restored from __doc__
    def setLabelText(self, QFileDialog_DialogLabel, QString):
        """ QFileDialog.setLabelText(QFileDialog.DialogLabel, QString) """
        pass

    # real signature unknown; restored from __doc__
    def setNameFilter(self, QString):
        """ QFileDialog.setNameFilter(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setNameFilterDetailsVisible(self, bool):
        """ QFileDialog.setNameFilterDetailsVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setNameFilters(self, QStringList):
        """ QFileDialog.setNameFilters(QStringList) """
        pass

    # real signature unknown; restored from __doc__
    def setOption(self, QFileDialog_Option, bool_on=True):
        """ QFileDialog.setOption(QFileDialog.Option, bool on=True) """
        pass

    # real signature unknown; restored from __doc__
    def setOptions(self, QFileDialog_Options):
        """ QFileDialog.setOptions(QFileDialog.Options) """
        pass

    # real signature unknown; restored from __doc__
    def setProxyModel(self, QAbstractProxyModel):
        """ QFileDialog.setProxyModel(QAbstractProxyModel) """
        pass

    # real signature unknown; restored from __doc__
    def setReadOnly(self, bool):
        """ QFileDialog.setReadOnly(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setResolveSymlinks(self, bool):
        """ QFileDialog.setResolveSymlinks(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSidebarUrls(self, list_of_QUrl):
        """ QFileDialog.setSidebarUrls(list-of-QUrl) """
        pass

    # real signature unknown; restored from __doc__
    def setViewMode(self, QFileDialog_ViewMode):
        """ QFileDialog.setViewMode(QFileDialog.ViewMode) """
        pass

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QFileDialog.setVisible(bool) """
        pass

    def sidebarUrls(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.sidebarUrls() -> list-of-QUrl """
        pass

    # real signature unknown; restored from __doc__
    def testOption(self, QFileDialog_Option):
        """ QFileDialog.testOption(QFileDialog.Option) -> bool """
        return False

    def ViewMode(self, *args, **kwargs):  # real signature unknown
        pass

    def viewMode(self):  # real signature unknown; restored from __doc__
        """ QFileDialog.viewMode() -> QFileDialog.ViewMode """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    Accept = 3
    AcceptOpen = 0
    AcceptSave = 1
    AnyFile = 0
    Detail = 0
    Directory = 2
    DirectoryOnly = 4
    DontConfirmOverwrite = 4
    DontResolveSymlinks = 2
    DontUseNativeDialog = 16
    DontUseSheet = 8
    ExistingFile = 1
    ExistingFiles = 3
    FileName = 1
    FileType = 2
    HideNameFilterDetails = 64
    List = 1
    LookIn = 0
    ReadOnly = 32
    Reject = 4
    ShowDirsOnly = 1


class QFileIconProvider():  # skipped bases: <type 'sip.simplewrapper'>

    """ QFileIconProvider() """
    # real signature unknown; restored from __doc__ with multiple overloads

    def icon(self, *__args):
        """
        QFileIconProvider.icon(QFileIconProvider.IconType) -> QIcon
        QFileIconProvider.icon(QFileInfo) -> QIcon
        """
        return QIcon

    def IconType(self, *args, **kwargs):  # real signature unknown
        pass

    def type(self, QFileInfo):  # real signature unknown; restored from __doc__
        """ QFileIconProvider.type(QFileInfo) -> QString """
        pass

    def __init__(self):  # real signature unknown; restored from __doc__
        pass

    __weakref__ = property(lambda self: object())  # default

    Computer = 0
    Desktop = 1
    Drive = 4
    File = 6
    Folder = 5
    Network = 3
    Trashcan = 2


class QFileOpenEvent(__PyQt4_QtCore.QEvent):
    # no doc

    def file(self):  # real signature unknown; restored from __doc__
        """ QFileOpenEvent.file() -> QString """
        pass

    def url(self):  # real signature unknown; restored from __doc__
        """ QFileOpenEvent.url() -> QUrl """
        pass

    def __init__(self, *args, **kwargs):  # real signature unknown
        pass


class QFileSystemModel(__PyQt4_QtCore.QAbstractItemModel):

    """ QFileSystemModel(QObject parent=None) """
    # real signature unknown; restored from __doc__

    def canFetchMore(self, QModelIndex):
        """ QFileSystemModel.canFetchMore(QModelIndex) -> bool """
        return False

    # real signature unknown; NOTE: unreliably restored from __doc__
    def columnCount(self, QModelIndex_parent=None, *args, **kwargs):
        """ QFileSystemModel.columnCount(QModelIndex parent=QModelIndex()) -> int """
        pass

    # real signature unknown; restored from __doc__
    def data(self, QModelIndex, int_role=None):
        """ QFileSystemModel.data(QModelIndex, int role=Qt.DisplayRole) -> QVariant """
        pass

    def directoryLoaded(self, *args, **kwargs):  # real signature unknown
        """ QFileSystemModel.directoryLoaded[QString] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def dropMimeData(self, QMimeData, Qt_DropAction, p_int, p_int_1, QModelIndex):
        """ QFileSystemModel.dropMimeData(QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool """
        return False

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QFileSystemModel.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def fetchMore(self, QModelIndex):
        """ QFileSystemModel.fetchMore(QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def fileIcon(self, QModelIndex):
        """ QFileSystemModel.fileIcon(QModelIndex) -> QIcon """
        return QIcon

    # real signature unknown; restored from __doc__
    def fileInfo(self, QModelIndex):
        """ QFileSystemModel.fileInfo(QModelIndex) -> QFileInfo """
        pass

    # real signature unknown; restored from __doc__
    def fileName(self, QModelIndex):
        """ QFileSystemModel.fileName(QModelIndex) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def filePath(self, QModelIndex):
        """ QFileSystemModel.filePath(QModelIndex) -> QString """
        pass

    def fileRenamed(self, *args, **kwargs):  # real signature unknown
        """ QFileSystemModel.fileRenamed[QString, QString, QString] [signal] """
        pass

    def filter(self):  # real signature unknown; restored from __doc__
        """ QFileSystemModel.filter() -> QDir.Filters """
        pass

    # real signature unknown; restored from __doc__
    def flags(self, QModelIndex):
        """ QFileSystemModel.flags(QModelIndex) -> Qt.ItemFlags """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def hasChildren(self, QModelIndex_parent=None, *args, **kwargs):
        """ QFileSystemModel.hasChildren(QModelIndex parent=QModelIndex()) -> bool """
        pass

    # real signature unknown; restored from __doc__
    def headerData(self, p_int, Qt_Orientation, int_role=None):
        """ QFileSystemModel.headerData(int, Qt.Orientation, int role=Qt.DisplayRole) -> QVariant """
        pass

    def iconProvider(self):  # real signature unknown; restored from __doc__
        """ QFileSystemModel.iconProvider() -> QFileIconProvider """
        return QFileIconProvider

    # real signature unknown; restored from __doc__ with multiple overloads
    def index(self, *__args):
        """
        QFileSystemModel.index(int, int, QModelIndex parent=QModelIndex()) -> QModelIndex
        QFileSystemModel.index(QString, int column=0) -> QModelIndex
        """
        pass

    # real signature unknown; restored from __doc__
    def isDir(self, QModelIndex):
        """ QFileSystemModel.isDir(QModelIndex) -> bool """
        return False

    def isReadOnly(self):  # real signature unknown; restored from __doc__
        """ QFileSystemModel.isReadOnly() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def lastModified(self, QModelIndex):
        """ QFileSystemModel.lastModified(QModelIndex) -> QDateTime """
        pass

    # real signature unknown; restored from __doc__
    def mimeData(self, list_of_QModelIndex):
        """ QFileSystemModel.mimeData(list-of-QModelIndex) -> QMimeData """
        pass

    def mimeTypes(self):  # real signature unknown; restored from __doc__
        """ QFileSystemModel.mimeTypes() -> QStringList """
        pass

    # real signature unknown; restored from __doc__
    def mkdir(self, QModelIndex, QString):
        """ QFileSystemModel.mkdir(QModelIndex, QString) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def myComputer(self, int_role=None):
        """ QFileSystemModel.myComputer(int role=Qt.DisplayRole) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def nameFilterDisables(self):
        """ QFileSystemModel.nameFilterDisables() -> bool """
        return False

    def nameFilters(self):  # real signature unknown; restored from __doc__
        """ QFileSystemModel.nameFilters() -> QStringList """
        pass

    # real signature unknown; restored from __doc__
    def parent(self, QModelIndex):
        """ QFileSystemModel.parent(QModelIndex) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def permissions(self, QModelIndex):
        """ QFileSystemModel.permissions(QModelIndex) -> QFile.Permissions """
        pass

    # real signature unknown; restored from __doc__
    def remove(self, QModelIndex):
        """ QFileSystemModel.remove(QModelIndex) -> bool """
        return False

    def resolveSymlinks(self):  # real signature unknown; restored from __doc__
        """ QFileSystemModel.resolveSymlinks() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def rmdir(self, QModelIndex):
        """ QFileSystemModel.rmdir(QModelIndex) -> bool """
        return False

    def Roles(self, *args, **kwargs):  # real signature unknown
        pass

    def rootDirectory(self):  # real signature unknown; restored from __doc__
        """ QFileSystemModel.rootDirectory() -> QDir """
        pass

    def rootPath(self):  # real signature unknown; restored from __doc__
        """ QFileSystemModel.rootPath() -> QString """
        pass

    def rootPathChanged(self, *args, **kwargs):  # real signature unknown
        """ QFileSystemModel.rootPathChanged[QString] [signal] """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def rowCount(self, QModelIndex_parent=None, *args, **kwargs):
        """ QFileSystemModel.rowCount(QModelIndex parent=QModelIndex()) -> int """
        pass

    # real signature unknown; restored from __doc__
    def setData(self, QModelIndex, QVariant, int_role=None):
        """ QFileSystemModel.setData(QModelIndex, QVariant, int role=Qt.EditRole) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setFilter(self, QDir_Filters):
        """ QFileSystemModel.setFilter(QDir.Filters) """
        pass

    # real signature unknown; restored from __doc__
    def setIconProvider(self, QFileIconProvider):
        """ QFileSystemModel.setIconProvider(QFileIconProvider) """
        pass

    # real signature unknown; restored from __doc__
    def setNameFilterDisables(self, bool):
        """ QFileSystemModel.setNameFilterDisables(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setNameFilters(self, QStringList):
        """ QFileSystemModel.setNameFilters(QStringList) """
        pass

    # real signature unknown; restored from __doc__
    def setReadOnly(self, bool):
        """ QFileSystemModel.setReadOnly(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setResolveSymlinks(self, bool):
        """ QFileSystemModel.setResolveSymlinks(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setRootPath(self, QString):
        """ QFileSystemModel.setRootPath(QString) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def size(self, QModelIndex):
        """ QFileSystemModel.size(QModelIndex) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def sort(self, p_int, Qt_SortOrder_order=None):
        """ QFileSystemModel.sort(int, Qt.SortOrder order=Qt.AscendingOrder) """
        pass

    # real signature unknown; restored from __doc__
    def supportedDropActions(self):
        """ QFileSystemModel.supportedDropActions() -> Qt.DropActions """
        pass

    # real signature unknown; restored from __doc__
    def timerEvent(self, QTimerEvent):
        """ QFileSystemModel.timerEvent(QTimerEvent) """
        pass

    # real signature unknown; restored from __doc__
    def type(self, QModelIndex):
        """ QFileSystemModel.type(QModelIndex) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass

    FileIconRole = 1
    FileNameRole = 34
    FilePathRole = 33
    FilePermissions = 35


class QFocusEvent(__PyQt4_QtCore.QEvent):

    """
    QFocusEvent(QEvent.Type, Qt.FocusReason reason=Qt.OtherFocusReason)
    QFocusEvent(QFocusEvent)
    """

    def gotFocus(self):  # real signature unknown; restored from __doc__
        """ QFocusEvent.gotFocus() -> bool """
        return False

    def lostFocus(self):  # real signature unknown; restored from __doc__
        """ QFocusEvent.lostFocus() -> bool """
        return False

    def reason(self):  # real signature unknown; restored from __doc__
        """ QFocusEvent.reason() -> Qt.FocusReason """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QFocusFrame(QWidget):

    """ QFocusFrame(QWidget parent=None) """

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QFocusFrame.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QFocusFrame.eventFilter(QObject, QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOption):
        """ QFocusFrame.initStyleOption(QStyleOption) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QFocusFrame.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setWidget(self, QWidget):
        """ QFocusFrame.setWidget(QWidget) """
        pass

    def widget(self):  # real signature unknown; restored from __doc__
        """ QFocusFrame.widget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass


class QFont():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QFont()
    QFont(QString, int pointSize=-1, int weight=-1, bool italic=False)
    QFont(QFont, QPaintDevice)
    QFont(QFont)
    QFont(QVariant)
    """

    def bold(self):  # real signature unknown; restored from __doc__
        """ QFont.bold() -> bool """
        return False

    def cacheStatistics(self):  # real signature unknown; restored from __doc__
        """ QFont.cacheStatistics() """
        pass

    def capitalization(self):  # real signature unknown; restored from __doc__
        """ QFont.capitalization() -> QFont.Capitalization """
        pass

    def Capitalization(self, *args, **kwargs):  # real signature unknown
        pass

    def cleanup(self):  # real signature unknown; restored from __doc__
        """ QFont.cleanup() """
        pass

    def defaultFamily(self):  # real signature unknown; restored from __doc__
        """ QFont.defaultFamily() -> QString """
        pass

    def exactMatch(self):  # real signature unknown; restored from __doc__
        """ QFont.exactMatch() -> bool """
        return False

    def family(self):  # real signature unknown; restored from __doc__
        """ QFont.family() -> QString """
        pass

    def fixedPitch(self):  # real signature unknown; restored from __doc__
        """ QFont.fixedPitch() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def fromString(self, QString):
        """ QFont.fromString(QString) -> bool """
        return False

    def handle(self):  # real signature unknown; restored from __doc__
        """ QFont.handle() -> int """
        return 0

    def initialize(self):  # real signature unknown; restored from __doc__
        """ QFont.initialize() """
        pass

    # real signature unknown; restored from __doc__
    def insertSubstitution(self, QString, QString_1):
        """ QFont.insertSubstitution(QString, QString) """
        pass

    # real signature unknown; restored from __doc__
    def insertSubstitutions(self, QString, QStringList):
        """ QFont.insertSubstitutions(QString, QStringList) """
        pass

    def isCopyOf(self, QFont):  # real signature unknown; restored from __doc__
        """ QFont.isCopyOf(QFont) -> bool """
        return False

    def italic(self):  # real signature unknown; restored from __doc__
        """ QFont.italic() -> bool """
        return False

    def kerning(self):  # real signature unknown; restored from __doc__
        """ QFont.kerning() -> bool """
        return False

    def key(self):  # real signature unknown; restored from __doc__
        """ QFont.key() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def lastResortFamily(self):
        """ QFont.lastResortFamily() -> QString """
        pass

    def lastResortFont(self):  # real signature unknown; restored from __doc__
        """ QFont.lastResortFont() -> QString """
        pass

    def letterSpacing(self):  # real signature unknown; restored from __doc__
        """ QFont.letterSpacing() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def letterSpacingType(self):
        """ QFont.letterSpacingType() -> QFont.SpacingType """
        pass

    def overline(self):  # real signature unknown; restored from __doc__
        """ QFont.overline() -> bool """
        return False

    def pixelSize(self):  # real signature unknown; restored from __doc__
        """ QFont.pixelSize() -> int """
        return 0

    def pointSize(self):  # real signature unknown; restored from __doc__
        """ QFont.pointSize() -> int """
        return 0

    def pointSizeF(self):  # real signature unknown; restored from __doc__
        """ QFont.pointSizeF() -> float """
        return 0.0

    def rawMode(self):  # real signature unknown; restored from __doc__
        """ QFont.rawMode() -> bool """
        return False

    def rawName(self):  # real signature unknown; restored from __doc__
        """ QFont.rawName() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def removeSubstitution(self, QString):
        """ QFont.removeSubstitution(QString) """
        pass

    def resolve(self, QFont):  # real signature unknown; restored from __doc__
        """ QFont.resolve(QFont) -> QFont """
        return QFont

    def setBold(self, bool):  # real signature unknown; restored from __doc__
        """ QFont.setBold(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setCapitalization(self, QFont_Capitalization):
        """ QFont.setCapitalization(QFont.Capitalization) """
        pass

    # real signature unknown; restored from __doc__
    def setFamily(self, QString):
        """ QFont.setFamily(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setFixedPitch(self, bool):
        """ QFont.setFixedPitch(bool) """
        pass

    def setItalic(self, bool):  # real signature unknown; restored from __doc__
        """ QFont.setItalic(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setKerning(self, bool):
        """ QFont.setKerning(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setLetterSpacing(self, QFont_SpacingType, p_float):
        """ QFont.setLetterSpacing(QFont.SpacingType, float) """
        pass

    # real signature unknown; restored from __doc__
    def setOverline(self, bool):
        """ QFont.setOverline(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setPixelSize(self, p_int):
        """ QFont.setPixelSize(int) """
        pass

    # real signature unknown; restored from __doc__
    def setPointSize(self, p_int):
        """ QFont.setPointSize(int) """
        pass

    # real signature unknown; restored from __doc__
    def setPointSizeF(self, p_float):
        """ QFont.setPointSizeF(float) """
        pass

    # real signature unknown; restored from __doc__
    def setRawMode(self, bool):
        """ QFont.setRawMode(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setRawName(self, QString):
        """ QFont.setRawName(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setStretch(self, p_int):
        """ QFont.setStretch(int) """
        pass

    # real signature unknown; restored from __doc__
    def setStrikeOut(self, bool):
        """ QFont.setStrikeOut(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setStyle(self, QFont_Style):
        """ QFont.setStyle(QFont.Style) """
        pass

    # real signature unknown; restored from __doc__
    def setStyleHint(self, QFont_StyleHint, QFont_StyleStrategy_strategy=None):
        """ QFont.setStyleHint(QFont.StyleHint, QFont.StyleStrategy strategy=QFont.PreferDefault) """
        pass

    # real signature unknown; restored from __doc__
    def setStyleStrategy(self, QFont_StyleStrategy):
        """ QFont.setStyleStrategy(QFont.StyleStrategy) """
        pass

    # real signature unknown; restored from __doc__
    def setUnderline(self, bool):
        """ QFont.setUnderline(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setWeight(self, p_int):
        """ QFont.setWeight(int) """
        pass

    # real signature unknown; restored from __doc__
    def setWordSpacing(self, p_float):
        """ QFont.setWordSpacing(float) """
        pass

    def SpacingType(self, *args, **kwargs):  # real signature unknown
        pass

    def Stretch(self, *args, **kwargs):  # real signature unknown
        pass

    def stretch(self):  # real signature unknown; restored from __doc__
        """ QFont.stretch() -> int """
        return 0

    def strikeOut(self):  # real signature unknown; restored from __doc__
        """ QFont.strikeOut() -> bool """
        return False

    def Style(self, *args, **kwargs):  # real signature unknown
        pass

    def style(self):  # real signature unknown; restored from __doc__
        """ QFont.style() -> QFont.Style """
        pass

    def StyleHint(self, *args, **kwargs):  # real signature unknown
        pass

    def styleHint(self):  # real signature unknown; restored from __doc__
        """ QFont.styleHint() -> QFont.StyleHint """
        pass

    def styleStrategy(self):  # real signature unknown; restored from __doc__
        """ QFont.styleStrategy() -> QFont.StyleStrategy """
        pass

    def StyleStrategy(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def substitute(self, QString):
        """ QFont.substitute(QString) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def substitutes(self, QString):
        """ QFont.substitutes(QString) -> QStringList """
        pass

    def substitutions(self):  # real signature unknown; restored from __doc__
        """ QFont.substitutions() -> QStringList """
        pass

    def toString(self):  # real signature unknown; restored from __doc__
        """ QFont.toString() -> QString """
        pass

    def underline(self):  # real signature unknown; restored from __doc__
        """ QFont.underline() -> bool """
        return False

    def weight(self):  # real signature unknown; restored from __doc__
        """ QFont.weight() -> int """
        return 0

    def Weight(self, *args, **kwargs):  # real signature unknown
        pass

    def wordSpacing(self):  # real signature unknown; restored from __doc__
        """ QFont.wordSpacing() -> float """
        return 0.0

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default

    AbsoluteSpacing = 1
    AllLowercase = 2
    AllUppercase = 1
    AnyStyle = 5
    Black = 87
    Bold = 75
    Capitalize = 4
    Condensed = 75
    Courier = 2
    Cursive = 6
    Decorative = 3
    DemiBold = 63
    Expanded = 125
    ExtraCondensed = 62
    ExtraExpanded = 150
    Fantasy = 8
    ForceIntegerMetrics = 1024
    ForceOutline = 16
    Helvetica = 0
    Light = 25
    MixedCase = 0
    Monospace = 7
    NoAntialias = 256
    NoFontMerging = 32768
    Normal = 50
    OldEnglish = 3
    OpenGLCompatible = 512
    PercentageSpacing = 0
    PreferAntialias = 128
    PreferBitmap = 2
    PreferDefault = 1
    PreferDevice = 4
    PreferMatch = 32
    PreferOutline = 8
    PreferQuality = 64
    SansSerif = 0
    SemiCondensed = 87
    SemiExpanded = 112
    Serif = 1
    SmallCaps = 3
    StyleItalic = 1
    StyleNormal = 0
    StyleOblique = 2
    System = 4
    Times = 1
    TypeWriter = 2
    UltraCondensed = 50
    UltraExpanded = 200
    Unstretched = 100


class QFontComboBox(QComboBox):

    """ QFontComboBox(QWidget parent=None) """

    def currentFont(self):  # real signature unknown; restored from __doc__
        """ QFontComboBox.currentFont() -> QFont """
        return QFont

    def currentFontChanged(self, *args, **kwargs):  # real signature unknown
        """ QFontComboBox.currentFontChanged[QFont] [signal] """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QFontComboBox.event(QEvent) -> bool """
        return False

    def FontFilter(self, *args, **kwargs):  # real signature unknown
        pass

    def fontFilters(self):  # real signature unknown; restored from __doc__
        """ QFontComboBox.fontFilters() -> QFontComboBox.FontFilters """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def FontFilters(self, *__args):
        """
        QFontComboBox.FontFilters(QFontComboBox.FontFilters)
        QFontComboBox.FontFilters(int)
        QFontComboBox.FontFilters()
        """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentFont(self, QFont):
        """ QFontComboBox.setCurrentFont(QFont) """
        pass

    # real signature unknown; restored from __doc__
    def setFontFilters(self, QFontComboBox_FontFilters):
        """ QFontComboBox.setFontFilters(QFontComboBox.FontFilters) """
        pass

    # real signature unknown; restored from __doc__
    def setWritingSystem(self, QFontDatabase_WritingSystem):
        """ QFontComboBox.setWritingSystem(QFontDatabase.WritingSystem) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QFontComboBox.sizeHint() -> QSize """
        pass

    def writingSystem(self):  # real signature unknown; restored from __doc__
        """ QFontComboBox.writingSystem() -> QFontDatabase.WritingSystem """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    AllFonts = 0
    MonospacedFonts = 4
    NonScalableFonts = 2
    ProportionalFonts = 8
    ScalableFonts = 1


class QFontDatabase():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QFontDatabase()
    QFontDatabase(QFontDatabase)
    """
    # real signature unknown; restored from __doc__

    def addApplicationFont(self, QString):
        """ QFontDatabase.addApplicationFont(QString) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def addApplicationFontFromData(self, QByteArray):
        """ QFontDatabase.addApplicationFontFromData(QByteArray) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def applicationFontFamilies(self, p_int):
        """ QFontDatabase.applicationFontFamilies(int) -> QStringList """
        pass

    # real signature unknown; restored from __doc__
    def bold(self, QString, QString_1):
        """ QFontDatabase.bold(QString, QString) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def families(self, QFontDatabase_WritingSystem_writingSystem=None):
        """ QFontDatabase.families(QFontDatabase.WritingSystem writingSystem=QFontDatabase.Any) -> QStringList """
        pass

    # real signature unknown; restored from __doc__
    def font(self, QString, QString_1, p_int):
        """ QFontDatabase.font(QString, QString, int) -> QFont """
        return QFont

    # real signature unknown; NOTE: unreliably restored from __doc__
    def isBitmapScalable(self, QString, QString_style=None, *args, **kwargs):
        """ QFontDatabase.isBitmapScalable(QString, QString style=QString()) -> bool """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def isFixedPitch(self, QString, QString_style=None, *args, **kwargs):
        """ QFontDatabase.isFixedPitch(QString, QString style=QString()) -> bool """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def isScalable(self, QString, QString_style=None, *args, **kwargs):
        """ QFontDatabase.isScalable(QString, QString style=QString()) -> bool """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def isSmoothlyScalable(self, QString, QString_style=None, *args, **kwargs):
        """ QFontDatabase.isSmoothlyScalable(QString, QString style=QString()) -> bool """
        pass

    # real signature unknown; restored from __doc__
    def italic(self, QString, QString_1):
        """ QFontDatabase.italic(QString, QString) -> bool """
        return False

    # real signature unknown; NOTE: unreliably restored from __doc__
    def pointSizes(self, QString, QString_style=None, *args, **kwargs):
        """ QFontDatabase.pointSizes(QString, QString style=QString()) -> list-of-int """
        pass

    # real signature unknown; restored from __doc__
    def removeAllApplicationFonts(self):
        """ QFontDatabase.removeAllApplicationFonts() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def removeApplicationFont(self, p_int):
        """ QFontDatabase.removeApplicationFont(int) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def smoothSizes(self, QString, QString_1):
        """ QFontDatabase.smoothSizes(QString, QString) -> list-of-int """
        pass

    def standardSizes(self):  # real signature unknown; restored from __doc__
        """ QFontDatabase.standardSizes() -> list-of-int """
        pass

    def styles(self, QString):  # real signature unknown; restored from __doc__
        """ QFontDatabase.styles(QString) -> QStringList """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def styleString(self, *__args):
        """
        QFontDatabase.styleString(QFont) -> QString
        QFontDatabase.styleString(QFontInfo) -> QString
        """
        pass

    # real signature unknown; restored from __doc__
    def supportsThreadedFontRendering(self):
        """ QFontDatabase.supportsThreadedFontRendering() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def weight(self, QString, QString_1):
        """ QFontDatabase.weight(QString, QString) -> int """
        return 0

    def WritingSystem(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def writingSystemName(self, QFontDatabase_WritingSystem):
        """ QFontDatabase.writingSystemName(QFontDatabase.WritingSystem) -> QString """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def writingSystems(self, QString=None):
        """
        QFontDatabase.writingSystems() -> list-of-QFontDatabase.WritingSystem
        QFontDatabase.writingSystems(QString) -> list-of-QFontDatabase.WritingSystem
        """
        pass

    # real signature unknown; restored from __doc__
    def writingSystemSample(self, QFontDatabase_WritingSystem):
        """ QFontDatabase.writingSystemSample(QFontDatabase.WritingSystem) -> QString """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QFontDatabase=None):
        pass

    __weakref__ = property(lambda self: object())  # default

    Any = 0
    Arabic = 6
    Armenian = 4
    Bengali = 10
    Cyrillic = 3
    Devanagari = 9
    Georgian = 23
    Greek = 2
    Gujarati = 12
    Gurmukhi = 11
    Hebrew = 5
    Japanese = 27
    Kannada = 16
    Khmer = 24
    Korean = 28
    Lao = 20
    Latin = 1
    Malayalam = 17
    Myanmar = 22
    Nko = 33
    Ogham = 31
    Oriya = 13
    Other = 30
    Runic = 32
    SimplifiedChinese = 25
    Sinhala = 18
    Symbol = 30
    Syriac = 7
    Tamil = 14
    Telugu = 15
    Thaana = 8
    Thai = 19
    Tibetan = 21
    TraditionalChinese = 26
    Vietnamese = 29


class QFontDialog(QDialog):

    """
    QFontDialog(QWidget parent=None)
    QFontDialog(QFont, QWidget parent=None)
    """
    # real signature unknown; restored from __doc__

    def changeEvent(self, QEvent):
        """ QFontDialog.changeEvent(QEvent) """
        pass

    def currentFont(self):  # real signature unknown; restored from __doc__
        """ QFontDialog.currentFont() -> QFont """
        return QFont

    def currentFontChanged(self, *args, **kwargs):  # real signature unknown
        """ QFontDialog.currentFontChanged[QFont] [signal] """
        pass

    def done(self, p_int):  # real signature unknown; restored from __doc__
        """ QFontDialog.done(int) """
        pass

    def FontDialogOption(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def FontDialogOptions(self, *__args):
        """
        QFontDialog.FontDialogOptions(QFontDialog.FontDialogOptions)
        QFontDialog.FontDialogOptions(int)
        QFontDialog.FontDialogOptions()
        """
        pass

    def fontSelected(self, *args, **kwargs):  # real signature unknown
        """ QFontDialog.fontSelected[QFont] [signal] """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def getFont(self, *__args):
        """
        QFontDialog.getFont(QFont, QWidget, QString, QFontDialog.FontDialogOptions) -> (QFont, bool)
        QFontDialog.getFont(QFont, QWidget, QString) -> (QFont, bool)
        QFontDialog.getFont(QFont, QWidget parent=None) -> (QFont, bool)
        QFontDialog.getFont(QWidget parent=None) -> (QFont, bool)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def open(self, *__args):
        """
        QFontDialog.open()
        QFontDialog.open(QObject, SLOT())
        QFontDialog.open(callable)
        """
        pass

    def options(self):  # real signature unknown; restored from __doc__
        """ QFontDialog.options() -> QFontDialog.FontDialogOptions """
        pass

    def selectedFont(self):  # real signature unknown; restored from __doc__
        """ QFontDialog.selectedFont() -> QFont """
        return QFont

    # real signature unknown; restored from __doc__
    def setCurrentFont(self, QFont):
        """ QFontDialog.setCurrentFont(QFont) """
        pass

    # real signature unknown; restored from __doc__
    def setOption(self, QFontDialog_FontDialogOption, bool_on=True):
        """ QFontDialog.setOption(QFontDialog.FontDialogOption, bool on=True) """
        pass

    # real signature unknown; restored from __doc__
    def setOptions(self, QFontDialog_FontDialogOptions):
        """ QFontDialog.setOptions(QFontDialog.FontDialogOptions) """
        pass

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QFontDialog.setVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def testOption(self, QFontDialog_FontDialogOption):
        """ QFontDialog.testOption(QFontDialog.FontDialogOption) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    DontUseNativeDialog = 2
    NoButtons = 1


class QFontInfo():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QFontInfo(QFont)
    QFontInfo(QFontInfo)
    """

    def bold(self):  # real signature unknown; restored from __doc__
        """ QFontInfo.bold() -> bool """
        return False

    def exactMatch(self):  # real signature unknown; restored from __doc__
        """ QFontInfo.exactMatch() -> bool """
        return False

    def family(self):  # real signature unknown; restored from __doc__
        """ QFontInfo.family() -> QString """
        pass

    def fixedPitch(self):  # real signature unknown; restored from __doc__
        """ QFontInfo.fixedPitch() -> bool """
        return False

    def italic(self):  # real signature unknown; restored from __doc__
        """ QFontInfo.italic() -> bool """
        return False

    def pixelSize(self):  # real signature unknown; restored from __doc__
        """ QFontInfo.pixelSize() -> int """
        return 0

    def pointSize(self):  # real signature unknown; restored from __doc__
        """ QFontInfo.pointSize() -> int """
        return 0

    def pointSizeF(self):  # real signature unknown; restored from __doc__
        """ QFontInfo.pointSizeF() -> float """
        return 0.0

    def rawMode(self):  # real signature unknown; restored from __doc__
        """ QFontInfo.rawMode() -> bool """
        return False

    def style(self):  # real signature unknown; restored from __doc__
        """ QFontInfo.style() -> QFont.Style """
        pass

    def styleHint(self):  # real signature unknown; restored from __doc__
        """ QFontInfo.styleHint() -> QFont.StyleHint """
        pass

    def weight(self):  # real signature unknown; restored from __doc__
        """ QFontInfo.weight() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    __weakref__ = property(lambda self: object())  # default


class QFontMetrics():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QFontMetrics(QFont)
    QFontMetrics(QFont, QPaintDevice)
    QFontMetrics(QFontMetrics)
    """

    def ascent(self):  # real signature unknown; restored from __doc__
        """ QFontMetrics.ascent() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def averageCharWidth(self):
        """ QFontMetrics.averageCharWidth() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def boundingRect(self, *__args):
        """
        QFontMetrics.boundingRect(QChar) -> QRect
        QFontMetrics.boundingRect(QString) -> QRect
        QFontMetrics.boundingRect(QRect, int, QString, int tabStops=0, list-of-int tabArray=0) -> QRect
        QFontMetrics.boundingRect(int, int, int, int, int, QString, int tabStops=0, list-of-int tabArray=0) -> QRect
        """
        pass

    def boundingRectChar(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def charWidth(self, QString, p_int):
        """ QFontMetrics.charWidth(QString, int) -> int """
        return 0

    def descent(self):  # real signature unknown; restored from __doc__
        """ QFontMetrics.descent() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def elidedText(self, QString, Qt_TextElideMode, p_int, int_flags=0):
        """ QFontMetrics.elidedText(QString, Qt.TextElideMode, int, int flags=0) -> QString """
        pass

    def height(self):  # real signature unknown; restored from __doc__
        """ QFontMetrics.height() -> int """
        return 0

    def inFont(self, QChar):  # real signature unknown; restored from __doc__
        """ QFontMetrics.inFont(QChar) -> bool """
        return False

    def leading(self):  # real signature unknown; restored from __doc__
        """ QFontMetrics.leading() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def leftBearing(self, QChar):
        """ QFontMetrics.leftBearing(QChar) -> int """
        return 0

    def lineSpacing(self):  # real signature unknown; restored from __doc__
        """ QFontMetrics.lineSpacing() -> int """
        return 0

    def lineWidth(self):  # real signature unknown; restored from __doc__
        """ QFontMetrics.lineWidth() -> int """
        return 0

    def maxWidth(self):  # real signature unknown; restored from __doc__
        """ QFontMetrics.maxWidth() -> int """
        return 0

    def minLeftBearing(self):  # real signature unknown; restored from __doc__
        """ QFontMetrics.minLeftBearing() -> int """
        return 0

    def minRightBearing(self):  # real signature unknown; restored from __doc__
        """ QFontMetrics.minRightBearing() -> int """
        return 0

    def overlinePos(self):  # real signature unknown; restored from __doc__
        """ QFontMetrics.overlinePos() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def rightBearing(self, QChar):
        """ QFontMetrics.rightBearing(QChar) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def size(self, p_int, QString, int_tabStops=0, list_of_int_tabArray=0):
        """ QFontMetrics.size(int, QString, int tabStops=0, list-of-int tabArray=0) -> QSize """
        pass

    def strikeOutPos(self):  # real signature unknown; restored from __doc__
        """ QFontMetrics.strikeOutPos() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def tightBoundingRect(self, QString):
        """ QFontMetrics.tightBoundingRect(QString) -> QRect """
        pass

    def underlinePos(self):  # real signature unknown; restored from __doc__
        """ QFontMetrics.underlinePos() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def width(self, *__args):
        """
        QFontMetrics.width(QChar) -> int
        QFontMetrics.width(QString, int length=-1) -> int
        """
        return 0

    def widthChar(self, *args, **kwargs):  # real signature unknown
        pass

    def xHeight(self):  # real signature unknown; restored from __doc__
        """ QFontMetrics.xHeight() -> int """
        return 0

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QFontMetricsF():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QFontMetricsF(QFont)
    QFontMetricsF(QFont, QPaintDevice)
    QFontMetricsF(QFontMetrics)
    QFontMetricsF(QFontMetricsF)
    """

    def ascent(self):  # real signature unknown; restored from __doc__
        """ QFontMetricsF.ascent() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def averageCharWidth(self):
        """ QFontMetricsF.averageCharWidth() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def boundingRect(self, *__args):
        """
        QFontMetricsF.boundingRect(QChar) -> QRectF
        QFontMetricsF.boundingRect(QString) -> QRectF
        QFontMetricsF.boundingRect(QRectF, int, QString, int tabStops=0, list-of-int tabArray=0) -> QRectF
        """
        pass

    def boundingRectChar(self, *args, **kwargs):  # real signature unknown
        pass

    def descent(self):  # real signature unknown; restored from __doc__
        """ QFontMetricsF.descent() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def elidedText(self, QString, Qt_TextElideMode, p_float, int_flags=0):
        """ QFontMetricsF.elidedText(QString, Qt.TextElideMode, float, int flags=0) -> QString """
        pass

    def height(self):  # real signature unknown; restored from __doc__
        """ QFontMetricsF.height() -> float """
        return 0.0

    def inFont(self, QChar):  # real signature unknown; restored from __doc__
        """ QFontMetricsF.inFont(QChar) -> bool """
        return False

    def leading(self):  # real signature unknown; restored from __doc__
        """ QFontMetricsF.leading() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def leftBearing(self, QChar):
        """ QFontMetricsF.leftBearing(QChar) -> float """
        return 0.0

    def lineSpacing(self):  # real signature unknown; restored from __doc__
        """ QFontMetricsF.lineSpacing() -> float """
        return 0.0

    def lineWidth(self):  # real signature unknown; restored from __doc__
        """ QFontMetricsF.lineWidth() -> float """
        return 0.0

    def maxWidth(self):  # real signature unknown; restored from __doc__
        """ QFontMetricsF.maxWidth() -> float """
        return 0.0

    def minLeftBearing(self):  # real signature unknown; restored from __doc__
        """ QFontMetricsF.minLeftBearing() -> float """
        return 0.0

    def minRightBearing(self):  # real signature unknown; restored from __doc__
        """ QFontMetricsF.minRightBearing() -> float """
        return 0.0

    def overlinePos(self):  # real signature unknown; restored from __doc__
        """ QFontMetricsF.overlinePos() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def rightBearing(self, QChar):
        """ QFontMetricsF.rightBearing(QChar) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def size(self, p_int, QString, int_tabStops=0, list_of_int_tabArray=0):
        """ QFontMetricsF.size(int, QString, int tabStops=0, list-of-int tabArray=0) -> QSizeF """
        pass

    def strikeOutPos(self):  # real signature unknown; restored from __doc__
        """ QFontMetricsF.strikeOutPos() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def tightBoundingRect(self, QString):
        """ QFontMetricsF.tightBoundingRect(QString) -> QRectF """
        pass

    def underlinePos(self):  # real signature unknown; restored from __doc__
        """ QFontMetricsF.underlinePos() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def width(self, *__args):
        """
        QFontMetricsF.width(QChar) -> float
        QFontMetricsF.width(QString) -> float
        """
        return 0.0

    def widthChar(self, *args, **kwargs):  # real signature unknown
        pass

    def xHeight(self):  # real signature unknown; restored from __doc__
        """ QFontMetricsF.xHeight() -> float """
        return 0.0

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QFormLayout(QLayout):

    """ QFormLayout(QWidget parent=None) """
    # real signature unknown; restored from __doc__

    def addItem(self, QLayoutItem):
        """ QFormLayout.addItem(QLayoutItem) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def addRow(self, *__args):
        """
        QFormLayout.addRow(QWidget, QWidget)
        QFormLayout.addRow(QWidget, QLayout)
        QFormLayout.addRow(QString, QWidget)
        QFormLayout.addRow(QString, QLayout)
        QFormLayout.addRow(QWidget)
        QFormLayout.addRow(QLayout)
        """
        pass

    def count(self):  # real signature unknown; restored from __doc__
        """ QFormLayout.count() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def expandingDirections(self):
        """ QFormLayout.expandingDirections() -> Qt.Orientations """
        pass

    def FieldGrowthPolicy(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def fieldGrowthPolicy(self):
        """ QFormLayout.fieldGrowthPolicy() -> QFormLayout.FieldGrowthPolicy """
        pass

    def formAlignment(self):  # real signature unknown; restored from __doc__
        """ QFormLayout.formAlignment() -> Qt.Alignment """
        pass

    # real signature unknown; restored from __doc__
    def getItemPosition(self, p_int):
        """ QFormLayout.getItemPosition(int) -> (int, QFormLayout.ItemRole) """
        pass

    # real signature unknown; restored from __doc__
    def getLayoutPosition(self, QLayout):
        """ QFormLayout.getLayoutPosition(QLayout) -> (int, QFormLayout.ItemRole) """
        pass

    # real signature unknown; restored from __doc__
    def getWidgetPosition(self, QWidget):
        """ QFormLayout.getWidgetPosition(QWidget) -> (int, QFormLayout.ItemRole) """
        pass

    # real signature unknown; restored from __doc__
    def hasHeightForWidth(self):
        """ QFormLayout.hasHeightForWidth() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def heightForWidth(self, p_int):
        """ QFormLayout.heightForWidth(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def horizontalSpacing(self):
        """ QFormLayout.horizontalSpacing() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def insertRow(self, p_int, *__args):
        """
        QFormLayout.insertRow(int, QWidget, QWidget)
        QFormLayout.insertRow(int, QWidget, QLayout)
        QFormLayout.insertRow(int, QString, QWidget)
        QFormLayout.insertRow(int, QString, QLayout)
        QFormLayout.insertRow(int, QWidget)
        QFormLayout.insertRow(int, QLayout)
        """
        pass

    def invalidate(self):  # real signature unknown; restored from __doc__
        """ QFormLayout.invalidate() """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def itemAt(self, p_int, QFormLayout_ItemRole=None):
        """
        QFormLayout.itemAt(int, QFormLayout.ItemRole) -> QLayoutItem
        QFormLayout.itemAt(int) -> QLayoutItem
        """
        return QLayoutItem

    def ItemRole(self, *args, **kwargs):  # real signature unknown
        pass

    def labelAlignment(self):  # real signature unknown; restored from __doc__
        """ QFormLayout.labelAlignment() -> Qt.Alignment """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def labelForField(self, *__args):
        """
        QFormLayout.labelForField(QWidget) -> QWidget
        QFormLayout.labelForField(QLayout) -> QWidget
        """
        return QWidget

    def minimumSize(self):  # real signature unknown; restored from __doc__
        """ QFormLayout.minimumSize() -> QSize """
        pass

    def rowCount(self):  # real signature unknown; restored from __doc__
        """ QFormLayout.rowCount() -> int """
        return 0

    def RowWrapPolicy(self, *args, **kwargs):  # real signature unknown
        pass

    def rowWrapPolicy(self):  # real signature unknown; restored from __doc__
        """ QFormLayout.rowWrapPolicy() -> QFormLayout.RowWrapPolicy """
        pass

    # real signature unknown; restored from __doc__
    def setFieldGrowthPolicy(self, QFormLayout_FieldGrowthPolicy):
        """ QFormLayout.setFieldGrowthPolicy(QFormLayout.FieldGrowthPolicy) """
        pass

    # real signature unknown; restored from __doc__
    def setFormAlignment(self, Qt_Alignment):
        """ QFormLayout.setFormAlignment(Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setGeometry(self, QRect):
        """ QFormLayout.setGeometry(QRect) """
        pass

    # real signature unknown; restored from __doc__
    def setHorizontalSpacing(self, p_int):
        """ QFormLayout.setHorizontalSpacing(int) """
        pass

    # real signature unknown; restored from __doc__
    def setItem(self, p_int, QFormLayout_ItemRole, QLayoutItem):
        """ QFormLayout.setItem(int, QFormLayout.ItemRole, QLayoutItem) """
        pass

    # real signature unknown; restored from __doc__
    def setLabelAlignment(self, Qt_Alignment):
        """ QFormLayout.setLabelAlignment(Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setLayout(self, p_int, QFormLayout_ItemRole, QLayout):
        """ QFormLayout.setLayout(int, QFormLayout.ItemRole, QLayout) """
        pass

    # real signature unknown; restored from __doc__
    def setRowWrapPolicy(self, QFormLayout_RowWrapPolicy):
        """ QFormLayout.setRowWrapPolicy(QFormLayout.RowWrapPolicy) """
        pass

    # real signature unknown; restored from __doc__
    def setSpacing(self, p_int):
        """ QFormLayout.setSpacing(int) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalSpacing(self, p_int):
        """ QFormLayout.setVerticalSpacing(int) """
        pass

    # real signature unknown; restored from __doc__
    def setWidget(self, p_int, QFormLayout_ItemRole, QWidget):
        """ QFormLayout.setWidget(int, QFormLayout.ItemRole, QWidget) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QFormLayout.sizeHint() -> QSize """
        pass

    def spacing(self):  # real signature unknown; restored from __doc__
        """ QFormLayout.spacing() -> int """
        return 0

    def takeAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QFormLayout.takeAt(int) -> QLayoutItem """
        return QLayoutItem

    def verticalSpacing(self):  # real signature unknown; restored from __doc__
        """ QFormLayout.verticalSpacing() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    AllNonFixedFieldsGrow = 2
    DontWrapRows = 0
    ExpandingFieldsGrow = 1
    FieldRole = 1
    FieldsStayAtSizeHint = 0
    LabelRole = 0
    SpanningRole = 2
    WrapAllRows = 2
    WrapLongRows = 1


class QGesture(__PyQt4_QtCore.QObject):

    """ QGesture(QObject parent=None) """

    def GestureCancelPolicy(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def gestureCancelPolicy(self):
        """ QGesture.gestureCancelPolicy() -> QGesture.GestureCancelPolicy """
        pass

    def gestureType(self):  # real signature unknown; restored from __doc__
        """ QGesture.gestureType() -> Qt.GestureType """
        pass

    def hasHotSpot(self):  # real signature unknown; restored from __doc__
        """ QGesture.hasHotSpot() -> bool """
        return False

    def hotSpot(self):  # real signature unknown; restored from __doc__
        """ QGesture.hotSpot() -> QPointF """
        pass

    # real signature unknown; restored from __doc__
    def setGestureCancelPolicy(self, QGesture_GestureCancelPolicy):
        """ QGesture.setGestureCancelPolicy(QGesture.GestureCancelPolicy) """
        pass

    # real signature unknown; restored from __doc__
    def setHotSpot(self, QPointF):
        """ QGesture.setHotSpot(QPointF) """
        pass

    def state(self):  # real signature unknown; restored from __doc__
        """ QGesture.state() -> Qt.GestureState """
        pass

    def unsetHotSpot(self):  # real signature unknown; restored from __doc__
        """ QGesture.unsetHotSpot() """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass

    CancelAllInContext = 1
    CancelNone = 0


class QGestureEvent(__PyQt4_QtCore.QEvent):

    """
    QGestureEvent(list-of-QGesture)
    QGestureEvent(QGestureEvent)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def accept(self, *__args):
        """
        QGestureEvent.accept()
        QGestureEvent.accept(QGesture)
        QGestureEvent.accept(Qt.GestureType)
        """
        pass

    def activeGestures(self):  # real signature unknown; restored from __doc__
        """ QGestureEvent.activeGestures() -> list-of-QGesture """
        pass

    # real signature unknown; restored from __doc__
    def canceledGestures(self):
        """ QGestureEvent.canceledGestures() -> list-of-QGesture """
        pass

    # real signature unknown; restored from __doc__
    def gesture(self, Qt_GestureType):
        """ QGestureEvent.gesture(Qt.GestureType) -> QGesture """
        return QGesture

    def gestures(self):  # real signature unknown; restored from __doc__
        """ QGestureEvent.gestures() -> list-of-QGesture """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def ignore(self, *__args):
        """
        QGestureEvent.ignore()
        QGestureEvent.ignore(QGesture)
        QGestureEvent.ignore(Qt.GestureType)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def isAccepted(self, *__args):
        """
        QGestureEvent.isAccepted() -> bool
        QGestureEvent.isAccepted(QGesture) -> bool
        QGestureEvent.isAccepted(Qt.GestureType) -> bool
        """
        return False

    # real signature unknown; restored from __doc__
    def mapToGraphicsScene(self, QPointF):
        """ QGestureEvent.mapToGraphicsScene(QPointF) -> QPointF """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setAccepted(self, *__args):
        """
        QGestureEvent.setAccepted(bool)
        QGestureEvent.setAccepted(QGesture, bool)
        QGestureEvent.setAccepted(Qt.GestureType, bool)
        """
        pass

    def widget(self):  # real signature unknown; restored from __doc__
        """ QGestureEvent.widget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QGestureRecognizer():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QGestureRecognizer()
    QGestureRecognizer(QGestureRecognizer)
    """

    def create(self, QObject):  # real signature unknown; restored from __doc__
        """ QGestureRecognizer.create(QObject) -> QGesture """
        return QGesture

    # real signature unknown; restored from __doc__
    def recognize(self, QGesture, QObject, QEvent):
        """ QGestureRecognizer.recognize(QGesture, QObject, QEvent) -> QGestureRecognizer.Result """
        pass

    # real signature unknown; restored from __doc__
    def registerRecognizer(self, QGestureRecognizer):
        """ QGestureRecognizer.registerRecognizer(QGestureRecognizer) -> Qt.GestureType """
        pass

    def reset(self, QGesture):  # real signature unknown; restored from __doc__
        """ QGestureRecognizer.reset(QGesture) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def Result(self, *__args):
        """
        QGestureRecognizer.Result(QGestureRecognizer.Result)
        QGestureRecognizer.Result(int)
        QGestureRecognizer.Result()
        """
        pass

    def ResultFlag(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def unregisterRecognizer(self, Qt_GestureType):
        """ QGestureRecognizer.unregisterRecognizer(Qt.GestureType) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QGestureRecognizer=None):
        pass

    __weakref__ = property(lambda self: object())  # default

    CancelGesture = 16
    ConsumeEventHint = 256
    FinishGesture = 8
    Ignore = 1
    MayBeGesture = 2
    TriggerGesture = 4


class QGraphicsAnchor(__PyQt4_QtCore.QObject):
    # no doc
    # real signature unknown; restored from __doc__

    def setSizePolicy(self, QSizePolicy_Policy):
        """ QGraphicsAnchor.setSizePolicy(QSizePolicy.Policy) """
        pass

    # real signature unknown; restored from __doc__
    def setSpacing(self, p_float):
        """ QGraphicsAnchor.setSpacing(float) """
        pass

    def sizePolicy(self):  # real signature unknown; restored from __doc__
        """ QGraphicsAnchor.sizePolicy() -> QSizePolicy.Policy """
        pass

    def spacing(self):  # real signature unknown; restored from __doc__
        """ QGraphicsAnchor.spacing() -> float """
        return 0.0

    def unsetSpacing(self):  # real signature unknown; restored from __doc__
        """ QGraphicsAnchor.unsetSpacing() """
        pass

    def __init__(self, *args, **kwargs):  # real signature unknown
        pass


class QGraphicsLayoutItem():  # skipped bases: <type 'sip.wrapper'>

    """ QGraphicsLayoutItem(QGraphicsLayoutItem parent=None, bool isLayout=False) """

    def contentsRect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayoutItem.contentsRect() -> QRectF """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def effectiveSizeHint(self, Qt_SizeHint, QSizeF_constraint=None, *args, **kwargs):
        """ QGraphicsLayoutItem.effectiveSizeHint(Qt.SizeHint, QSizeF constraint=QSizeF()) -> QSizeF """
        pass

    def geometry(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayoutItem.geometry() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def getContentsMargins(self):
        """ QGraphicsLayoutItem.getContentsMargins() -> (float, float, float, float) """
        pass

    def graphicsItem(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayoutItem.graphicsItem() -> QGraphicsItem """
        return QGraphicsItem

    def isLayout(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayoutItem.isLayout() -> bool """
        return False

    def maximumHeight(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayoutItem.maximumHeight() -> float """
        return 0.0

    def maximumSize(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayoutItem.maximumSize() -> QSizeF """
        pass

    def maximumWidth(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayoutItem.maximumWidth() -> float """
        return 0.0

    def minimumHeight(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayoutItem.minimumHeight() -> float """
        return 0.0

    def minimumSize(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayoutItem.minimumSize() -> QSizeF """
        pass

    def minimumWidth(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayoutItem.minimumWidth() -> float """
        return 0.0

    def ownedByLayout(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayoutItem.ownedByLayout() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def parentLayoutItem(self):
        """ QGraphicsLayoutItem.parentLayoutItem() -> QGraphicsLayoutItem """
        return QGraphicsLayoutItem

    def preferredHeight(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayoutItem.preferredHeight() -> float """
        return 0.0

    def preferredSize(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayoutItem.preferredSize() -> QSizeF """
        pass

    def preferredWidth(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayoutItem.preferredWidth() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def setGeometry(self, QRectF):
        """ QGraphicsLayoutItem.setGeometry(QRectF) """
        pass

    # real signature unknown; restored from __doc__
    def setGraphicsItem(self, QGraphicsItem):
        """ QGraphicsLayoutItem.setGraphicsItem(QGraphicsItem) """
        pass

    # real signature unknown; restored from __doc__
    def setMaximumHeight(self, p_float):
        """ QGraphicsLayoutItem.setMaximumHeight(float) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setMaximumSize(self, *__args):
        """
        QGraphicsLayoutItem.setMaximumSize(QSizeF)
        QGraphicsLayoutItem.setMaximumSize(float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def setMaximumWidth(self, p_float):
        """ QGraphicsLayoutItem.setMaximumWidth(float) """
        pass

    # real signature unknown; restored from __doc__
    def setMinimumHeight(self, p_float):
        """ QGraphicsLayoutItem.setMinimumHeight(float) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setMinimumSize(self, *__args):
        """
        QGraphicsLayoutItem.setMinimumSize(QSizeF)
        QGraphicsLayoutItem.setMinimumSize(float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def setMinimumWidth(self, p_float):
        """ QGraphicsLayoutItem.setMinimumWidth(float) """
        pass

    # real signature unknown; restored from __doc__
    def setOwnedByLayout(self, bool):
        """ QGraphicsLayoutItem.setOwnedByLayout(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setParentLayoutItem(self, QGraphicsLayoutItem):
        """ QGraphicsLayoutItem.setParentLayoutItem(QGraphicsLayoutItem) """
        pass

    # real signature unknown; restored from __doc__
    def setPreferredHeight(self, p_float):
        """ QGraphicsLayoutItem.setPreferredHeight(float) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setPreferredSize(self, *__args):
        """
        QGraphicsLayoutItem.setPreferredSize(QSizeF)
        QGraphicsLayoutItem.setPreferredSize(float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def setPreferredWidth(self, p_float):
        """ QGraphicsLayoutItem.setPreferredWidth(float) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setSizePolicy(self, *__args):
        """
        QGraphicsLayoutItem.setSizePolicy(QSizePolicy)
        QGraphicsLayoutItem.setSizePolicy(QSizePolicy.Policy, QSizePolicy.Policy, QSizePolicy.ControlType controlType=QSizePolicy.DefaultType)
        """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def sizeHint(self, Qt_SizeHint, QSizeF_constraint=None, *args, **kwargs):
        """ QGraphicsLayoutItem.sizeHint(Qt.SizeHint, QSizeF constraint=QSizeF()) -> QSizeF """
        pass

    def sizePolicy(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayoutItem.sizePolicy() -> QSizePolicy """
        return QSizePolicy

    def updateGeometry(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayoutItem.updateGeometry() """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QGraphicsLayoutItem_parent=None, bool_isLayout=False):
        pass

    __weakref__ = property(lambda self: object())  # default


class QGraphicsLayout(QGraphicsLayoutItem):

    """ QGraphicsLayout(QGraphicsLayoutItem parent=None) """

    def activate(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayout.activate() """
        pass

    # real signature unknown; restored from __doc__
    def addChildLayoutItem(self, QGraphicsLayoutItem):
        """ QGraphicsLayout.addChildLayoutItem(QGraphicsLayoutItem) """
        pass

    def count(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayout.count() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def getContentsMargins(self):
        """ QGraphicsLayout.getContentsMargins() -> (float, float, float, float) """
        pass

    def invalidate(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayout.invalidate() """
        pass

    def isActivated(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayout.isActivated() -> bool """
        return False

    def itemAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QGraphicsLayout.itemAt(int) -> QGraphicsLayoutItem """
        return QGraphicsLayoutItem

    def removeAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QGraphicsLayout.removeAt(int) """
        pass

    # real signature unknown; restored from __doc__
    def setContentsMargins(self, p_float, p_float_1, p_float_2, p_float_3):
        """ QGraphicsLayout.setContentsMargins(float, float, float, float) """
        pass

    def updateGeometry(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLayout.updateGeometry() """
        pass

    # real signature unknown; restored from __doc__
    def widgetEvent(self, QEvent):
        """ QGraphicsLayout.widgetEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QGraphicsLayoutItem_parent=None):
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass


class QGraphicsAnchorLayout(QGraphicsLayout):

    """ QGraphicsAnchorLayout(QGraphicsLayoutItem parent=None) """
    # real signature unknown; restored from __doc__

    def addAnchor(self, QGraphicsLayoutItem, Qt_AnchorPoint, QGraphicsLayoutItem_1, Qt_AnchorPoint_1):
        """ QGraphicsAnchorLayout.addAnchor(QGraphicsLayoutItem, Qt.AnchorPoint, QGraphicsLayoutItem, Qt.AnchorPoint) -> QGraphicsAnchor """
        return QGraphicsAnchor

    # real signature unknown; NOTE: unreliably restored from __doc__
    def addAnchors(self, QGraphicsLayoutItem, QGraphicsLayoutItem_1, Qt_Orientations_orientations=None, *args, **kwargs):
        """ QGraphicsAnchorLayout.addAnchors(QGraphicsLayoutItem, QGraphicsLayoutItem, Qt.Orientations orientations=Qt.Horizontal|Qt.Vertical) """
        pass

    # real signature unknown; restored from __doc__
    def addCornerAnchors(self, QGraphicsLayoutItem, Qt_Corner, QGraphicsLayoutItem_1, Qt_Corner_1):
        """ QGraphicsAnchorLayout.addCornerAnchors(QGraphicsLayoutItem, Qt.Corner, QGraphicsLayoutItem, Qt.Corner) """
        pass

    # real signature unknown; restored from __doc__
    def anchor(self, QGraphicsLayoutItem, Qt_AnchorPoint, QGraphicsLayoutItem_1, Qt_AnchorPoint_1):
        """ QGraphicsAnchorLayout.anchor(QGraphicsLayoutItem, Qt.AnchorPoint, QGraphicsLayoutItem, Qt.AnchorPoint) -> QGraphicsAnchor """
        return QGraphicsAnchor

    def count(self):  # real signature unknown; restored from __doc__
        """ QGraphicsAnchorLayout.count() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def horizontalSpacing(self):
        """ QGraphicsAnchorLayout.horizontalSpacing() -> float """
        return 0.0

    def invalidate(self):  # real signature unknown; restored from __doc__
        """ QGraphicsAnchorLayout.invalidate() """
        pass

    def itemAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QGraphicsAnchorLayout.itemAt(int) -> QGraphicsLayoutItem """
        return QGraphicsLayoutItem

    def removeAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QGraphicsAnchorLayout.removeAt(int) """
        pass

    # real signature unknown; restored from __doc__
    def setGeometry(self, QRectF):
        """ QGraphicsAnchorLayout.setGeometry(QRectF) """
        pass

    # real signature unknown; restored from __doc__
    def setHorizontalSpacing(self, p_float):
        """ QGraphicsAnchorLayout.setHorizontalSpacing(float) """
        pass

    # real signature unknown; restored from __doc__
    def setSpacing(self, p_float):
        """ QGraphicsAnchorLayout.setSpacing(float) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalSpacing(self, p_float):
        """ QGraphicsAnchorLayout.setVerticalSpacing(float) """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def sizeHint(self, Qt_SizeHint, QSizeF_constraint=None, *args, **kwargs):
        """ QGraphicsAnchorLayout.sizeHint(Qt.SizeHint, QSizeF constraint=QSizeF()) -> QSizeF """
        pass

    def verticalSpacing(self):  # real signature unknown; restored from __doc__
        """ QGraphicsAnchorLayout.verticalSpacing() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def __init__(self, QGraphicsLayoutItem_parent=None):
        pass


class QGraphicsEffect(__PyQt4_QtCore.QObject):

    """ QGraphicsEffect(QObject parent=None) """

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsEffect.boundingRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def boundingRectFor(self, QRectF):
        """ QGraphicsEffect.boundingRectFor(QRectF) -> QRectF """
        pass

    def ChangeFlag(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def ChangeFlags(self, *__args):
        """
        QGraphicsEffect.ChangeFlags(QGraphicsEffect.ChangeFlags)
        QGraphicsEffect.ChangeFlags(int)
        QGraphicsEffect.ChangeFlags()
        """
        pass

    def draw(self, QPainter):  # real signature unknown; restored from __doc__
        """ QGraphicsEffect.draw(QPainter) """
        pass

    # real signature unknown; restored from __doc__
    def drawSource(self, QPainter):
        """ QGraphicsEffect.drawSource(QPainter) """
        pass

    def enabledChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsEffect.enabledChanged[bool] [signal] """
        pass

    def isEnabled(self):  # real signature unknown; restored from __doc__
        """ QGraphicsEffect.isEnabled() -> bool """
        return False

    def PixmapPadMode(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def setEnabled(self, bool):
        """ QGraphicsEffect.setEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def sourceBoundingRect(self, Qt_CoordinateSystem_system=None):
        """ QGraphicsEffect.sourceBoundingRect(Qt.CoordinateSystem system=Qt.LogicalCoordinates) -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def sourceChanged(self, QGraphicsEffect_ChangeFlags):
        """ QGraphicsEffect.sourceChanged(QGraphicsEffect.ChangeFlags) """
        pass

    def sourceIsPixmap(self):  # real signature unknown; restored from __doc__
        """ QGraphicsEffect.sourceIsPixmap() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def sourcePixmap(self, Qt_CoordinateSystem_system=None, QGraphicsEffect_PixmapPadMode_mode=None):
        """ QGraphicsEffect.sourcePixmap(Qt.CoordinateSystem system=Qt.LogicalCoordinates, QGraphicsEffect.PixmapPadMode mode=QGraphicsEffect.PadToEffectiveBoundingRect) -> (QPixmap, QPoint) """
        pass

    def update(self):  # real signature unknown; restored from __doc__
        """ QGraphicsEffect.update() """
        pass

    # real signature unknown; restored from __doc__
    def updateBoundingRect(self):
        """ QGraphicsEffect.updateBoundingRect() """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass

    NoPad = 0
    PadToEffectiveBoundingRect = 2
    PadToTransparentBorder = 1
    SourceAttached = 1
    SourceBoundingRectChanged = 4
    SourceDetached = 2
    SourceInvalidated = 8


class QGraphicsBlurEffect(QGraphicsEffect):

    """ QGraphicsBlurEffect(QObject parent=None) """

    def BlurHint(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def BlurHints(self, *__args):
        """
        QGraphicsBlurEffect.BlurHints(QGraphicsBlurEffect.BlurHints)
        QGraphicsBlurEffect.BlurHints(int)
        QGraphicsBlurEffect.BlurHints()
        """
        pass

    def blurHints(self):  # real signature unknown; restored from __doc__
        """ QGraphicsBlurEffect.blurHints() -> QGraphicsBlurEffect.BlurHints """
        pass

    def blurHintsChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsBlurEffect.blurHintsChanged[QGraphicsBlurEffect.BlurHints] [signal] """
        pass

    def blurRadius(self):  # real signature unknown; restored from __doc__
        """ QGraphicsBlurEffect.blurRadius() -> float """
        return 0.0

    def blurRadiusChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsBlurEffect.blurRadiusChanged[float] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def boundingRectFor(self, QRectF):
        """ QGraphicsBlurEffect.boundingRectFor(QRectF) -> QRectF """
        pass

    def draw(self, QPainter):  # real signature unknown; restored from __doc__
        """ QGraphicsBlurEffect.draw(QPainter) """
        pass

    # real signature unknown; restored from __doc__
    def setBlurHints(self, QGraphicsBlurEffect_BlurHints):
        """ QGraphicsBlurEffect.setBlurHints(QGraphicsBlurEffect.BlurHints) """
        pass

    # real signature unknown; restored from __doc__
    def setBlurRadius(self, p_float):
        """ QGraphicsBlurEffect.setBlurRadius(float) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass

    AnimationHint = 2
    PerformanceHint = 0
    QualityHint = 1


class QGraphicsColorizeEffect(QGraphicsEffect):

    """ QGraphicsColorizeEffect(QObject parent=None) """

    def color(self):  # real signature unknown; restored from __doc__
        """ QGraphicsColorizeEffect.color() -> QColor """
        return QColor

    def colorChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsColorizeEffect.colorChanged[QColor] [signal] """
        pass

    def draw(self, QPainter):  # real signature unknown; restored from __doc__
        """ QGraphicsColorizeEffect.draw(QPainter) """
        pass

    # real signature unknown; restored from __doc__
    def setColor(self, QColor):
        """ QGraphicsColorizeEffect.setColor(QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setStrength(self, p_float):
        """ QGraphicsColorizeEffect.setStrength(float) """
        pass

    def strength(self):  # real signature unknown; restored from __doc__
        """ QGraphicsColorizeEffect.strength() -> float """
        return 0.0

    def strengthChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsColorizeEffect.strengthChanged[float] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QGraphicsDropShadowEffect(QGraphicsEffect):

    """ QGraphicsDropShadowEffect(QObject parent=None) """

    def blurRadius(self):  # real signature unknown; restored from __doc__
        """ QGraphicsDropShadowEffect.blurRadius() -> float """
        return 0.0

    def blurRadiusChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsDropShadowEffect.blurRadiusChanged[float] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def boundingRectFor(self, QRectF):
        """ QGraphicsDropShadowEffect.boundingRectFor(QRectF) -> QRectF """
        pass

    def color(self):  # real signature unknown; restored from __doc__
        """ QGraphicsDropShadowEffect.color() -> QColor """
        return QColor

    def colorChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsDropShadowEffect.colorChanged[QColor] [signal] """
        pass

    def draw(self, QPainter):  # real signature unknown; restored from __doc__
        """ QGraphicsDropShadowEffect.draw(QPainter) """
        pass

    def offset(self):  # real signature unknown; restored from __doc__
        """ QGraphicsDropShadowEffect.offset() -> QPointF """
        pass

    def offsetChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsDropShadowEffect.offsetChanged[QPointF] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def setBlurRadius(self, p_float):
        """ QGraphicsDropShadowEffect.setBlurRadius(float) """
        pass

    # real signature unknown; restored from __doc__
    def setColor(self, QColor):
        """ QGraphicsDropShadowEffect.setColor(QColor) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setOffset(self, *__args):
        """
        QGraphicsDropShadowEffect.setOffset(QPointF)
        QGraphicsDropShadowEffect.setOffset(float, float)
        QGraphicsDropShadowEffect.setOffset(float)
        """
        pass

    # real signature unknown; restored from __doc__
    def setXOffset(self, p_float):
        """ QGraphicsDropShadowEffect.setXOffset(float) """
        pass

    # real signature unknown; restored from __doc__
    def setYOffset(self, p_float):
        """ QGraphicsDropShadowEffect.setYOffset(float) """
        pass

    def xOffset(self):  # real signature unknown; restored from __doc__
        """ QGraphicsDropShadowEffect.xOffset() -> float """
        return 0.0

    def yOffset(self):  # real signature unknown; restored from __doc__
        """ QGraphicsDropShadowEffect.yOffset() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QGraphicsEllipseItem(QAbstractGraphicsShapeItem):

    """
    QGraphicsEllipseItem(QGraphicsItem parent=None, QGraphicsScene scene=None)
    QGraphicsEllipseItem(QRectF, QGraphicsItem parent=None, QGraphicsScene scene=None)
    QGraphicsEllipseItem(float, float, float, float, QGraphicsItem parent=None, QGraphicsScene scene=None)
    """

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsEllipseItem.boundingRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def contains(self, QPointF):
        """ QGraphicsEllipseItem.contains(QPointF) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isObscuredBy(self, QGraphicsItem):
        """ QGraphicsEllipseItem.isObscuredBy(QGraphicsItem) -> bool """
        return False

    def opaqueArea(self):  # real signature unknown; restored from __doc__
        """ QGraphicsEllipseItem.opaqueArea() -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def paint(self, QPainter, QStyleOptionGraphicsItem, QWidget_widget=None):
        """ QGraphicsEllipseItem.paint(QPainter, QStyleOptionGraphicsItem, QWidget widget=None) """
        pass

    def rect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsEllipseItem.rect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setRect(self, *__args):
        """
        QGraphicsEllipseItem.setRect(QRectF)
        QGraphicsEllipseItem.setRect(float, float, float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def setSpanAngle(self, p_int):
        """ QGraphicsEllipseItem.setSpanAngle(int) """
        pass

    # real signature unknown; restored from __doc__
    def setStartAngle(self, p_int):
        """ QGraphicsEllipseItem.setStartAngle(int) """
        pass

    def shape(self):  # real signature unknown; restored from __doc__
        """ QGraphicsEllipseItem.shape() -> QPainterPath """
        return QPainterPath

    def spanAngle(self):  # real signature unknown; restored from __doc__
        """ QGraphicsEllipseItem.spanAngle() -> int """
        return 0

    def startAngle(self):  # real signature unknown; restored from __doc__
        """ QGraphicsEllipseItem.startAngle() -> int """
        return 0

    def type(self):  # real signature unknown; restored from __doc__
        """ QGraphicsEllipseItem.type() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QGraphicsGridLayout(QGraphicsLayout):

    """ QGraphicsGridLayout(QGraphicsLayoutItem parent=None) """
    # real signature unknown; restored from __doc__ with multiple overloads

    def addItem(self, QGraphicsLayoutItem, p_int, p_int_1, *__args):
        """
        QGraphicsGridLayout.addItem(QGraphicsLayoutItem, int, int, int, int, Qt.Alignment alignment=0)
        QGraphicsGridLayout.addItem(QGraphicsLayoutItem, int, int, Qt.Alignment alignment=0)
        """
        pass

    # real signature unknown; restored from __doc__
    def alignment(self, QGraphicsLayoutItem):
        """ QGraphicsGridLayout.alignment(QGraphicsLayoutItem) -> Qt.Alignment """
        pass

    # real signature unknown; restored from __doc__
    def columnAlignment(self, p_int):
        """ QGraphicsGridLayout.columnAlignment(int) -> Qt.Alignment """
        pass

    def columnCount(self):  # real signature unknown; restored from __doc__
        """ QGraphicsGridLayout.columnCount() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def columnMaximumWidth(self, p_int):
        """ QGraphicsGridLayout.columnMaximumWidth(int) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def columnMinimumWidth(self, p_int):
        """ QGraphicsGridLayout.columnMinimumWidth(int) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def columnPreferredWidth(self, p_int):
        """ QGraphicsGridLayout.columnPreferredWidth(int) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def columnSpacing(self, p_int):
        """ QGraphicsGridLayout.columnSpacing(int) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def columnStretchFactor(self, p_int):
        """ QGraphicsGridLayout.columnStretchFactor(int) -> int """
        return 0

    def count(self):  # real signature unknown; restored from __doc__
        """ QGraphicsGridLayout.count() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def horizontalSpacing(self):
        """ QGraphicsGridLayout.horizontalSpacing() -> float """
        return 0.0

    def invalidate(self):  # real signature unknown; restored from __doc__
        """ QGraphicsGridLayout.invalidate() """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def itemAt(self, p_int, p_int_1=None):
        """
        QGraphicsGridLayout.itemAt(int, int) -> QGraphicsLayoutItem
        QGraphicsGridLayout.itemAt(int) -> QGraphicsLayoutItem
        """
        return QGraphicsLayoutItem

    def removeAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QGraphicsGridLayout.removeAt(int) """
        pass

    # real signature unknown; restored from __doc__
    def rowAlignment(self, p_int):
        """ QGraphicsGridLayout.rowAlignment(int) -> Qt.Alignment """
        pass

    def rowCount(self):  # real signature unknown; restored from __doc__
        """ QGraphicsGridLayout.rowCount() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def rowMaximumHeight(self, p_int):
        """ QGraphicsGridLayout.rowMaximumHeight(int) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def rowMinimumHeight(self, p_int):
        """ QGraphicsGridLayout.rowMinimumHeight(int) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def rowPreferredHeight(self, p_int):
        """ QGraphicsGridLayout.rowPreferredHeight(int) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def rowSpacing(self, p_int):
        """ QGraphicsGridLayout.rowSpacing(int) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def rowStretchFactor(self, p_int):
        """ QGraphicsGridLayout.rowStretchFactor(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setAlignment(self, QGraphicsLayoutItem, Qt_Alignment):
        """ QGraphicsGridLayout.setAlignment(QGraphicsLayoutItem, Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setColumnAlignment(self, p_int, Qt_Alignment):
        """ QGraphicsGridLayout.setColumnAlignment(int, Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setColumnFixedWidth(self, p_int, p_float):
        """ QGraphicsGridLayout.setColumnFixedWidth(int, float) """
        pass

    # real signature unknown; restored from __doc__
    def setColumnMaximumWidth(self, p_int, p_float):
        """ QGraphicsGridLayout.setColumnMaximumWidth(int, float) """
        pass

    # real signature unknown; restored from __doc__
    def setColumnMinimumWidth(self, p_int, p_float):
        """ QGraphicsGridLayout.setColumnMinimumWidth(int, float) """
        pass

    # real signature unknown; restored from __doc__
    def setColumnPreferredWidth(self, p_int, p_float):
        """ QGraphicsGridLayout.setColumnPreferredWidth(int, float) """
        pass

    # real signature unknown; restored from __doc__
    def setColumnSpacing(self, p_int, p_float):
        """ QGraphicsGridLayout.setColumnSpacing(int, float) """
        pass

    # real signature unknown; restored from __doc__
    def setColumnStretchFactor(self, p_int, p_int_1):
        """ QGraphicsGridLayout.setColumnStretchFactor(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setGeometry(self, QRectF):
        """ QGraphicsGridLayout.setGeometry(QRectF) """
        pass

    # real signature unknown; restored from __doc__
    def setHorizontalSpacing(self, p_float):
        """ QGraphicsGridLayout.setHorizontalSpacing(float) """
        pass

    # real signature unknown; restored from __doc__
    def setRowAlignment(self, p_int, Qt_Alignment):
        """ QGraphicsGridLayout.setRowAlignment(int, Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setRowFixedHeight(self, p_int, p_float):
        """ QGraphicsGridLayout.setRowFixedHeight(int, float) """
        pass

    # real signature unknown; restored from __doc__
    def setRowMaximumHeight(self, p_int, p_float):
        """ QGraphicsGridLayout.setRowMaximumHeight(int, float) """
        pass

    # real signature unknown; restored from __doc__
    def setRowMinimumHeight(self, p_int, p_float):
        """ QGraphicsGridLayout.setRowMinimumHeight(int, float) """
        pass

    # real signature unknown; restored from __doc__
    def setRowPreferredHeight(self, p_int, p_float):
        """ QGraphicsGridLayout.setRowPreferredHeight(int, float) """
        pass

    # real signature unknown; restored from __doc__
    def setRowSpacing(self, p_int, p_float):
        """ QGraphicsGridLayout.setRowSpacing(int, float) """
        pass

    # real signature unknown; restored from __doc__
    def setRowStretchFactor(self, p_int, p_int_1):
        """ QGraphicsGridLayout.setRowStretchFactor(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setSpacing(self, p_float):
        """ QGraphicsGridLayout.setSpacing(float) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalSpacing(self, p_float):
        """ QGraphicsGridLayout.setVerticalSpacing(float) """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def sizeHint(self, Qt_SizeHint, QSizeF_constraint=None, *args, **kwargs):
        """ QGraphicsGridLayout.sizeHint(Qt.SizeHint, QSizeF constraint=QSizeF()) -> QSizeF """
        pass

    def verticalSpacing(self):  # real signature unknown; restored from __doc__
        """ QGraphicsGridLayout.verticalSpacing() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def __init__(self, QGraphicsLayoutItem_parent=None):
        pass


class QGraphicsItemAnimation(__PyQt4_QtCore.QObject):

    """ QGraphicsItemAnimation(QObject parent=None) """
    # real signature unknown; restored from __doc__

    def afterAnimationStep(self, p_float):
        """ QGraphicsItemAnimation.afterAnimationStep(float) """
        pass

    # real signature unknown; restored from __doc__
    def beforeAnimationStep(self, p_float):
        """ QGraphicsItemAnimation.beforeAnimationStep(float) """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItemAnimation.clear() """
        pass

    # real signature unknown; restored from __doc__
    def horizontalScaleAt(self, p_float):
        """ QGraphicsItemAnimation.horizontalScaleAt(float) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def horizontalShearAt(self, p_float):
        """ QGraphicsItemAnimation.horizontalShearAt(float) -> float """
        return 0.0

    def item(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItemAnimation.item() -> QGraphicsItem """
        return QGraphicsItem

    # real signature unknown; restored from __doc__
    def matrixAt(self, p_float):
        """ QGraphicsItemAnimation.matrixAt(float) -> QMatrix """
        return QMatrix

    def posAt(self, p_float):  # real signature unknown; restored from __doc__
        """ QGraphicsItemAnimation.posAt(float) -> QPointF """
        pass

    def posList(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItemAnimation.posList() -> list-of-tuple-of-float-QPointF """
        pass

    def reset(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItemAnimation.reset() """
        pass

    # real signature unknown; restored from __doc__
    def rotationAt(self, p_float):
        """ QGraphicsItemAnimation.rotationAt(float) -> float """
        return 0.0

    def rotationList(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItemAnimation.rotationList() -> list-of-tuple-of-float-float """
        pass

    def scaleList(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItemAnimation.scaleList() -> list-of-tuple-of-float-QPointF """
        pass

    # real signature unknown; restored from __doc__
    def setItem(self, QGraphicsItem):
        """ QGraphicsItemAnimation.setItem(QGraphicsItem) """
        pass

    # real signature unknown; restored from __doc__
    def setPosAt(self, p_float, QPointF):
        """ QGraphicsItemAnimation.setPosAt(float, QPointF) """
        pass

    # real signature unknown; restored from __doc__
    def setRotationAt(self, p_float, p_float_1):
        """ QGraphicsItemAnimation.setRotationAt(float, float) """
        pass

    # real signature unknown; restored from __doc__
    def setScaleAt(self, p_float, p_float_1, p_float_2):
        """ QGraphicsItemAnimation.setScaleAt(float, float, float) """
        pass

    # real signature unknown; restored from __doc__
    def setShearAt(self, p_float, p_float_1, p_float_2):
        """ QGraphicsItemAnimation.setShearAt(float, float, float) """
        pass

    # real signature unknown; restored from __doc__
    def setStep(self, p_float):
        """ QGraphicsItemAnimation.setStep(float) """
        pass

    # real signature unknown; restored from __doc__
    def setTimeLine(self, QTimeLine):
        """ QGraphicsItemAnimation.setTimeLine(QTimeLine) """
        pass

    # real signature unknown; restored from __doc__
    def setTranslationAt(self, p_float, p_float_1, p_float_2):
        """ QGraphicsItemAnimation.setTranslationAt(float, float, float) """
        pass

    def shearList(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItemAnimation.shearList() -> list-of-tuple-of-float-QPointF """
        pass

    def timeLine(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItemAnimation.timeLine() -> QTimeLine """
        pass

    def translationList(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItemAnimation.translationList() -> list-of-tuple-of-float-QPointF """
        pass

    # real signature unknown; restored from __doc__
    def verticalScaleAt(self, p_float):
        """ QGraphicsItemAnimation.verticalScaleAt(float) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def verticalShearAt(self, p_float):
        """ QGraphicsItemAnimation.verticalShearAt(float) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def xTranslationAt(self, p_float):
        """ QGraphicsItemAnimation.xTranslationAt(float) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def yTranslationAt(self, p_float):
        """ QGraphicsItemAnimation.yTranslationAt(float) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QGraphicsItemGroup(QGraphicsItem):

    """ QGraphicsItemGroup(QGraphicsItem parent=None, QGraphicsScene scene=None) """
    # real signature unknown; restored from __doc__

    def addToGroup(self, QGraphicsItem):
        """ QGraphicsItemGroup.addToGroup(QGraphicsItem) """
        pass

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItemGroup.boundingRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def isObscuredBy(self, QGraphicsItem):
        """ QGraphicsItemGroup.isObscuredBy(QGraphicsItem) -> bool """
        return False

    def opaqueArea(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItemGroup.opaqueArea() -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def paint(self, QPainter, QStyleOptionGraphicsItem, QWidget_widget=None):
        """ QGraphicsItemGroup.paint(QPainter, QStyleOptionGraphicsItem, QWidget widget=None) """
        pass

    # real signature unknown; restored from __doc__
    def removeFromGroup(self, QGraphicsItem):
        """ QGraphicsItemGroup.removeFromGroup(QGraphicsItem) """
        pass

    def type(self):  # real signature unknown; restored from __doc__
        """ QGraphicsItemGroup.type() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def __init__(self, QGraphicsItem_parent=None, QGraphicsScene_scene=None):
        pass


class QGraphicsLinearLayout(QGraphicsLayout):

    """
    QGraphicsLinearLayout(QGraphicsLayoutItem parent=None)
    QGraphicsLinearLayout(Qt.Orientation, QGraphicsLayoutItem parent=None)
    """
    # real signature unknown; restored from __doc__

    def addItem(self, QGraphicsLayoutItem):
        """ QGraphicsLinearLayout.addItem(QGraphicsLayoutItem) """
        pass

    # real signature unknown; restored from __doc__
    def addStretch(self, int_stretch=1):
        """ QGraphicsLinearLayout.addStretch(int stretch=1) """
        pass

    # real signature unknown; restored from __doc__
    def alignment(self, QGraphicsLayoutItem):
        """ QGraphicsLinearLayout.alignment(QGraphicsLayoutItem) -> Qt.Alignment """
        pass

    def count(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLinearLayout.count() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def insertItem(self, p_int, QGraphicsLayoutItem):
        """ QGraphicsLinearLayout.insertItem(int, QGraphicsLayoutItem) """
        pass

    # real signature unknown; restored from __doc__
    def insertStretch(self, p_int, int_stretch=1):
        """ QGraphicsLinearLayout.insertStretch(int, int stretch=1) """
        pass

    def invalidate(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLinearLayout.invalidate() """
        pass

    def itemAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QGraphicsLinearLayout.itemAt(int) -> QGraphicsLayoutItem """
        return QGraphicsLayoutItem

    # real signature unknown; restored from __doc__
    def itemSpacing(self, p_int):
        """ QGraphicsLinearLayout.itemSpacing(int) -> float """
        return 0.0

    def orientation(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLinearLayout.orientation() -> Qt.Orientation """
        pass

    def removeAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QGraphicsLinearLayout.removeAt(int) """
        pass

    # real signature unknown; restored from __doc__
    def removeItem(self, QGraphicsLayoutItem):
        """ QGraphicsLinearLayout.removeItem(QGraphicsLayoutItem) """
        pass

    # real signature unknown; restored from __doc__
    def setAlignment(self, QGraphicsLayoutItem, Qt_Alignment):
        """ QGraphicsLinearLayout.setAlignment(QGraphicsLayoutItem, Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setGeometry(self, QRectF):
        """ QGraphicsLinearLayout.setGeometry(QRectF) """
        pass

    # real signature unknown; restored from __doc__
    def setItemSpacing(self, p_int, p_float):
        """ QGraphicsLinearLayout.setItemSpacing(int, float) """
        pass

    # real signature unknown; restored from __doc__
    def setOrientation(self, Qt_Orientation):
        """ QGraphicsLinearLayout.setOrientation(Qt.Orientation) """
        pass

    # real signature unknown; restored from __doc__
    def setSpacing(self, p_float):
        """ QGraphicsLinearLayout.setSpacing(float) """
        pass

    # real signature unknown; restored from __doc__
    def setStretchFactor(self, QGraphicsLayoutItem, p_int):
        """ QGraphicsLinearLayout.setStretchFactor(QGraphicsLayoutItem, int) """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def sizeHint(self, Qt_SizeHint, QSizeF_constraint=None, *args, **kwargs):
        """ QGraphicsLinearLayout.sizeHint(Qt.SizeHint, QSizeF constraint=QSizeF()) -> QSizeF """
        pass

    def spacing(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLinearLayout.spacing() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def stretchFactor(self, QGraphicsLayoutItem):
        """ QGraphicsLinearLayout.stretchFactor(QGraphicsLayoutItem) -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QGraphicsLineItem(QGraphicsItem):

    """
    QGraphicsLineItem(QGraphicsItem parent=None, QGraphicsScene scene=None)
    QGraphicsLineItem(QLineF, QGraphicsItem parent=None, QGraphicsScene scene=None)
    QGraphicsLineItem(float, float, float, float, QGraphicsItem parent=None, QGraphicsScene scene=None)
    """

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLineItem.boundingRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def contains(self, QPointF):
        """ QGraphicsLineItem.contains(QPointF) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isObscuredBy(self, QGraphicsItem):
        """ QGraphicsLineItem.isObscuredBy(QGraphicsItem) -> bool """
        return False

    def line(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLineItem.line() -> QLineF """
        pass

    def opaqueArea(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLineItem.opaqueArea() -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def paint(self, QPainter, QStyleOptionGraphicsItem, QWidget_widget=None):
        """ QGraphicsLineItem.paint(QPainter, QStyleOptionGraphicsItem, QWidget widget=None) """
        pass

    def pen(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLineItem.pen() -> QPen """
        return QPen

    # real signature unknown; restored from __doc__ with multiple overloads
    def setLine(self, *__args):
        """
        QGraphicsLineItem.setLine(QLineF)
        QGraphicsLineItem.setLine(float, float, float, float)
        """
        pass

    def setPen(self, QPen):  # real signature unknown; restored from __doc__
        """ QGraphicsLineItem.setPen(QPen) """
        pass

    def shape(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLineItem.shape() -> QPainterPath """
        return QPainterPath

    def type(self):  # real signature unknown; restored from __doc__
        """ QGraphicsLineItem.type() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QGraphicsObject(__PyQt4_QtCore.QObject, QGraphicsItem):

    """ QGraphicsObject(QGraphicsItem parent=None) """

    def enabledChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsObject.enabledChanged[] [signal] """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def grabGesture(self, Qt_GestureType, Qt_GestureFlags_flags=None, *args, **kwargs):
        """ QGraphicsObject.grabGesture(Qt.GestureType, Qt.GestureFlags flags=Qt.GestureFlags(0)) """
        pass

    def opacityChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsObject.opacityChanged[] [signal] """
        pass

    def parentChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsObject.parentChanged[] [signal] """
        pass

    def rotationChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsObject.rotationChanged[] [signal] """
        pass

    def scaleChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsObject.scaleChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def ungrabGesture(self, Qt_GestureType):
        """ QGraphicsObject.ungrabGesture(Qt.GestureType) """
        pass

    # real signature unknown; restored from __doc__
    def updateMicroFocus(self):
        """ QGraphicsObject.updateMicroFocus() """
        pass

    def visibleChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsObject.visibleChanged[] [signal] """
        pass

    def xChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsObject.xChanged[] [signal] """
        pass

    def yChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsObject.yChanged[] [signal] """
        pass

    def zChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsObject.zChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QGraphicsItem_parent=None):
        pass


class QGraphicsOpacityEffect(QGraphicsEffect):

    """ QGraphicsOpacityEffect(QObject parent=None) """

    def draw(self, QPainter):  # real signature unknown; restored from __doc__
        """ QGraphicsOpacityEffect.draw(QPainter) """
        pass

    def opacity(self):  # real signature unknown; restored from __doc__
        """ QGraphicsOpacityEffect.opacity() -> float """
        return 0.0

    def opacityChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsOpacityEffect.opacityChanged[float] [signal] """
        pass

    def opacityMask(self):  # real signature unknown; restored from __doc__
        """ QGraphicsOpacityEffect.opacityMask() -> QBrush """
        return QBrush

    def opacityMaskChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsOpacityEffect.opacityMaskChanged[QBrush] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def setOpacity(self, p_float):
        """ QGraphicsOpacityEffect.setOpacity(float) """
        pass

    # real signature unknown; restored from __doc__
    def setOpacityMask(self, QBrush):
        """ QGraphicsOpacityEffect.setOpacityMask(QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QGraphicsPathItem(QAbstractGraphicsShapeItem):

    """
    QGraphicsPathItem(QGraphicsItem parent=None, QGraphicsScene scene=None)
    QGraphicsPathItem(QPainterPath, QGraphicsItem parent=None, QGraphicsScene scene=None)
    """

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPathItem.boundingRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def contains(self, QPointF):
        """ QGraphicsPathItem.contains(QPointF) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isObscuredBy(self, QGraphicsItem):
        """ QGraphicsPathItem.isObscuredBy(QGraphicsItem) -> bool """
        return False

    def opaqueArea(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPathItem.opaqueArea() -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def paint(self, QPainter, QStyleOptionGraphicsItem, QWidget_widget=None):
        """ QGraphicsPathItem.paint(QPainter, QStyleOptionGraphicsItem, QWidget widget=None) """
        pass

    def path(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPathItem.path() -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def setPath(self, QPainterPath):
        """ QGraphicsPathItem.setPath(QPainterPath) """
        pass

    def shape(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPathItem.shape() -> QPainterPath """
        return QPainterPath

    def type(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPathItem.type() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QGraphicsPixmapItem(QGraphicsItem):

    """
    QGraphicsPixmapItem(QGraphicsItem parent=None, QGraphicsScene scene=None)
    QGraphicsPixmapItem(QPixmap, QGraphicsItem parent=None, QGraphicsScene scene=None)
    """

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPixmapItem.boundingRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def contains(self, QPointF):
        """ QGraphicsPixmapItem.contains(QPointF) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isObscuredBy(self, QGraphicsItem):
        """ QGraphicsPixmapItem.isObscuredBy(QGraphicsItem) -> bool """
        return False

    def offset(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPixmapItem.offset() -> QPointF """
        pass

    def opaqueArea(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPixmapItem.opaqueArea() -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def paint(self, QPainter, QStyleOptionGraphicsItem, QWidget):
        """ QGraphicsPixmapItem.paint(QPainter, QStyleOptionGraphicsItem, QWidget) """
        pass

    def pixmap(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPixmapItem.pixmap() -> QPixmap """
        return QPixmap

    # real signature unknown; restored from __doc__ with multiple overloads
    def setOffset(self, *__args):
        """
        QGraphicsPixmapItem.setOffset(QPointF)
        QGraphicsPixmapItem.setOffset(float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def setPixmap(self, QPixmap):
        """ QGraphicsPixmapItem.setPixmap(QPixmap) """
        pass

    # real signature unknown; restored from __doc__
    def setShapeMode(self, QGraphicsPixmapItem_ShapeMode):
        """ QGraphicsPixmapItem.setShapeMode(QGraphicsPixmapItem.ShapeMode) """
        pass

    # real signature unknown; restored from __doc__
    def setTransformationMode(self, Qt_TransformationMode):
        """ QGraphicsPixmapItem.setTransformationMode(Qt.TransformationMode) """
        pass

    def shape(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPixmapItem.shape() -> QPainterPath """
        return QPainterPath

    def ShapeMode(self, *args, **kwargs):  # real signature unknown
        pass

    def shapeMode(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPixmapItem.shapeMode() -> QGraphicsPixmapItem.ShapeMode """
        pass

    # real signature unknown; restored from __doc__
    def transformationMode(self):
        """ QGraphicsPixmapItem.transformationMode() -> Qt.TransformationMode """
        pass

    def type(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPixmapItem.type() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    BoundingRectShape = 1
    HeuristicMaskShape = 2
    MaskShape = 0


class QGraphicsPolygonItem(QAbstractGraphicsShapeItem):

    """
    QGraphicsPolygonItem(QGraphicsItem parent=None, QGraphicsScene scene=None)
    QGraphicsPolygonItem(QPolygonF, QGraphicsItem parent=None, QGraphicsScene scene=None)
    """

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPolygonItem.boundingRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def contains(self, QPointF):
        """ QGraphicsPolygonItem.contains(QPointF) -> bool """
        return False

    def fillRule(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPolygonItem.fillRule() -> Qt.FillRule """
        pass

    # real signature unknown; restored from __doc__
    def isObscuredBy(self, QGraphicsItem):
        """ QGraphicsPolygonItem.isObscuredBy(QGraphicsItem) -> bool """
        return False

    def opaqueArea(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPolygonItem.opaqueArea() -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def paint(self, QPainter, QStyleOptionGraphicsItem, QWidget_widget=None):
        """ QGraphicsPolygonItem.paint(QPainter, QStyleOptionGraphicsItem, QWidget widget=None) """
        pass

    def polygon(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPolygonItem.polygon() -> QPolygonF """
        return QPolygonF

    # real signature unknown; restored from __doc__
    def setFillRule(self, Qt_FillRule):
        """ QGraphicsPolygonItem.setFillRule(Qt.FillRule) """
        pass

    # real signature unknown; restored from __doc__
    def setPolygon(self, QPolygonF):
        """ QGraphicsPolygonItem.setPolygon(QPolygonF) """
        pass

    def shape(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPolygonItem.shape() -> QPainterPath """
        return QPainterPath

    def type(self):  # real signature unknown; restored from __doc__
        """ QGraphicsPolygonItem.type() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QGraphicsWidget(QGraphicsObject, QGraphicsLayoutItem):

    """ QGraphicsWidget(QGraphicsItem parent=None, Qt.WindowFlags flags=0) """

    def actions(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.actions() -> list-of-QAction """
        pass

    # real signature unknown; restored from __doc__
    def addAction(self, QAction):
        """ QGraphicsWidget.addAction(QAction) """
        pass

    # real signature unknown; restored from __doc__
    def addActions(self, list_of_QAction):
        """ QGraphicsWidget.addActions(list-of-QAction) """
        pass

    def adjustSize(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.adjustSize() """
        pass

    # real signature unknown; restored from __doc__
    def autoFillBackground(self):
        """ QGraphicsWidget.autoFillBackground() -> bool """
        return False

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.boundingRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QGraphicsWidget.changeEvent(QEvent) """
        pass

    def close(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.close() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def closeEvent(self, QCloseEvent):
        """ QGraphicsWidget.closeEvent(QCloseEvent) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QGraphicsWidget.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusNextPrevChild(self, bool):
        """ QGraphicsWidget.focusNextPrevChild(bool) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QGraphicsWidget.focusOutEvent(QFocusEvent) """
        pass

    def focusPolicy(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.focusPolicy() -> Qt.FocusPolicy """
        pass

    def focusWidget(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.focusWidget() -> QGraphicsWidget """
        return QGraphicsWidget

    def font(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.font() -> QFont """
        return QFont

    def geometryChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsWidget.geometryChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def getContentsMargins(self):
        """ QGraphicsWidget.getContentsMargins() -> (float, float, float, float) """
        pass

    # real signature unknown; restored from __doc__
    def getWindowFrameMargins(self):
        """ QGraphicsWidget.getWindowFrameMargins() -> (float, float, float, float) """
        pass

    # real signature unknown; restored from __doc__
    def grabKeyboardEvent(self, QEvent):
        """ QGraphicsWidget.grabKeyboardEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def grabMouseEvent(self, QEvent):
        """ QGraphicsWidget.grabMouseEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def grabShortcut(self, QKeySequence, Qt_ShortcutContext_context=None):
        """ QGraphicsWidget.grabShortcut(QKeySequence, Qt.ShortcutContext context=Qt.WindowShortcut) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def hideEvent(self, QHideEvent):
        """ QGraphicsWidget.hideEvent(QHideEvent) """
        pass

    # real signature unknown; restored from __doc__
    def hoverLeaveEvent(self, QGraphicsSceneHoverEvent):
        """ QGraphicsWidget.hoverLeaveEvent(QGraphicsSceneHoverEvent) """
        pass

    # real signature unknown; restored from __doc__
    def hoverMoveEvent(self, QGraphicsSceneHoverEvent):
        """ QGraphicsWidget.hoverMoveEvent(QGraphicsSceneHoverEvent) """
        pass

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOption):
        """ QGraphicsWidget.initStyleOption(QStyleOption) """
        pass

    # real signature unknown; restored from __doc__
    def insertAction(self, QAction, QAction_1):
        """ QGraphicsWidget.insertAction(QAction, QAction) """
        pass

    # real signature unknown; restored from __doc__
    def insertActions(self, QAction, list_of_QAction):
        """ QGraphicsWidget.insertActions(QAction, list-of-QAction) """
        pass

    def isActiveWindow(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.isActiveWindow() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def itemChange(self, QGraphicsItem_GraphicsItemChange, QVariant):
        """ QGraphicsWidget.itemChange(QGraphicsItem.GraphicsItemChange, QVariant) -> QVariant """
        pass

    def layout(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.layout() -> QGraphicsLayout """
        return QGraphicsLayout

    def layoutDirection(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.layoutDirection() -> Qt.LayoutDirection """
        pass

    # real signature unknown; restored from __doc__
    def moveEvent(self, QGraphicsSceneMoveEvent):
        """ QGraphicsWidget.moveEvent(QGraphicsSceneMoveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paint(self, QPainter, QStyleOptionGraphicsItem, QWidget_widget=None):
        """ QGraphicsWidget.paint(QPainter, QStyleOptionGraphicsItem, QWidget widget=None) """
        pass

    # real signature unknown; restored from __doc__
    def paintWindowFrame(self, QPainter, QStyleOptionGraphicsItem, QWidget_widget=None):
        """ QGraphicsWidget.paintWindowFrame(QPainter, QStyleOptionGraphicsItem, QWidget widget=None) """
        pass

    def palette(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.palette() -> QPalette """
        return QPalette

    def polishEvent(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.polishEvent() """
        pass

    def rect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.rect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def releaseShortcut(self, p_int):
        """ QGraphicsWidget.releaseShortcut(int) """
        pass

    # real signature unknown; restored from __doc__
    def removeAction(self, QAction):
        """ QGraphicsWidget.removeAction(QAction) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def resize(self, *__args):
        """
        QGraphicsWidget.resize(QSizeF)
        QGraphicsWidget.resize(float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QGraphicsSceneResizeEvent):
        """ QGraphicsWidget.resizeEvent(QGraphicsSceneResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def sceneEvent(self, QEvent):
        """ QGraphicsWidget.sceneEvent(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setAttribute(self, Qt_WidgetAttribute, bool_on=True):
        """ QGraphicsWidget.setAttribute(Qt.WidgetAttribute, bool on=True) """
        pass

    # real signature unknown; restored from __doc__
    def setAutoFillBackground(self, bool):
        """ QGraphicsWidget.setAutoFillBackground(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setContentsMargins(self, p_float, p_float_1, p_float_2, p_float_3):
        """ QGraphicsWidget.setContentsMargins(float, float, float, float) """
        pass

    # real signature unknown; restored from __doc__
    def setFocusPolicy(self, Qt_FocusPolicy):
        """ QGraphicsWidget.setFocusPolicy(Qt.FocusPolicy) """
        pass

    def setFont(self, QFont):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.setFont(QFont) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setGeometry(self, *__args):
        """
        QGraphicsWidget.setGeometry(QRectF)
        QGraphicsWidget.setGeometry(float, float, float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def setLayout(self, QGraphicsLayout):
        """ QGraphicsWidget.setLayout(QGraphicsLayout) """
        pass

    # real signature unknown; restored from __doc__
    def setLayoutDirection(self, Qt_LayoutDirection):
        """ QGraphicsWidget.setLayoutDirection(Qt.LayoutDirection) """
        pass

    # real signature unknown; restored from __doc__
    def setPalette(self, QPalette):
        """ QGraphicsWidget.setPalette(QPalette) """
        pass

    # real signature unknown; restored from __doc__
    def setShortcutAutoRepeat(self, p_int, bool_enabled=True):
        """ QGraphicsWidget.setShortcutAutoRepeat(int, bool enabled=True) """
        pass

    # real signature unknown; restored from __doc__
    def setShortcutEnabled(self, p_int, bool_enabled=True):
        """ QGraphicsWidget.setShortcutEnabled(int, bool enabled=True) """
        pass

    # real signature unknown; restored from __doc__
    def setStyle(self, QStyle):
        """ QGraphicsWidget.setStyle(QStyle) """
        pass

    # real signature unknown; restored from __doc__
    def setTabOrder(self, QGraphicsWidget, QGraphicsWidget_1):
        """ QGraphicsWidget.setTabOrder(QGraphicsWidget, QGraphicsWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setWindowFlags(self, Qt_WindowFlags):
        """ QGraphicsWidget.setWindowFlags(Qt.WindowFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setWindowFrameMargins(self, p_float, p_float_1, p_float_2, p_float_3):
        """ QGraphicsWidget.setWindowFrameMargins(float, float, float, float) """
        pass

    # real signature unknown; restored from __doc__
    def setWindowTitle(self, QString):
        """ QGraphicsWidget.setWindowTitle(QString) """
        pass

    def shape(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.shape() -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QGraphicsWidget.showEvent(QShowEvent) """
        pass

    def size(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.size() -> QSizeF """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def sizeHint(self, Qt_SizeHint, QSizeF_constraint=None, *args, **kwargs):
        """ QGraphicsWidget.sizeHint(Qt.SizeHint, QSizeF constraint=QSizeF()) -> QSizeF """
        pass

    def style(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.style() -> QStyle """
        return QStyle

    # real signature unknown; restored from __doc__
    def testAttribute(self, Qt_WidgetAttribute):
        """ QGraphicsWidget.testAttribute(Qt.WidgetAttribute) -> bool """
        return False

    def type(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.type() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def ungrabKeyboardEvent(self, QEvent):
        """ QGraphicsWidget.ungrabKeyboardEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def ungrabMouseEvent(self, QEvent):
        """ QGraphicsWidget.ungrabMouseEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def unsetLayoutDirection(self):
        """ QGraphicsWidget.unsetLayoutDirection() """
        pass

    # real signature unknown; restored from __doc__
    def unsetWindowFrameMargins(self):
        """ QGraphicsWidget.unsetWindowFrameMargins() """
        pass

    def updateGeometry(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.updateGeometry() """
        pass

    def windowFlags(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.windowFlags() -> Qt.WindowFlags """
        pass

    # real signature unknown; restored from __doc__
    def windowFrameEvent(self, QEvent):
        """ QGraphicsWidget.windowFrameEvent(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def windowFrameGeometry(self):
        """ QGraphicsWidget.windowFrameGeometry() -> QRectF """
        pass

    def windowFrameRect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.windowFrameRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def windowFrameSectionAt(self, QPointF):
        """ QGraphicsWidget.windowFrameSectionAt(QPointF) -> Qt.WindowFrameSection """
        pass

    def windowTitle(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.windowTitle() -> QString """
        pass

    def windowType(self):  # real signature unknown; restored from __doc__
        """ QGraphicsWidget.windowType() -> Qt.WindowType """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QGraphicsItem_parent=None, Qt_WindowFlags_flags=0):
        pass


class QGraphicsProxyWidget(QGraphicsWidget):

    """ QGraphicsProxyWidget(QGraphicsItem parent=None, Qt.WindowFlags flags=0) """
    # real signature unknown; restored from __doc__

    def contextMenuEvent(self, QGraphicsSceneContextMenuEvent):
        """ QGraphicsProxyWidget.contextMenuEvent(QGraphicsSceneContextMenuEvent) """
        pass

    # real signature unknown; restored from __doc__
    def createProxyForChildWidget(self, QWidget):
        """ QGraphicsProxyWidget.createProxyForChildWidget(QWidget) -> QGraphicsProxyWidget """
        return QGraphicsProxyWidget

    # real signature unknown; restored from __doc__
    def dragEnterEvent(self, QGraphicsSceneDragDropEvent):
        """ QGraphicsProxyWidget.dragEnterEvent(QGraphicsSceneDragDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragLeaveEvent(self, QGraphicsSceneDragDropEvent):
        """ QGraphicsProxyWidget.dragLeaveEvent(QGraphicsSceneDragDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragMoveEvent(self, QGraphicsSceneDragDropEvent):
        """ QGraphicsProxyWidget.dragMoveEvent(QGraphicsSceneDragDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dropEvent(self, QGraphicsSceneDragDropEvent):
        """ QGraphicsProxyWidget.dropEvent(QGraphicsSceneDragDropEvent) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QGraphicsProxyWidget.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QGraphicsProxyWidget.eventFilter(QObject, QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QGraphicsProxyWidget.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusNextPrevChild(self, bool):
        """ QGraphicsProxyWidget.focusNextPrevChild(bool) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QGraphicsProxyWidget.focusOutEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def grabMouseEvent(self, QEvent):
        """ QGraphicsProxyWidget.grabMouseEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def hideEvent(self, QHideEvent):
        """ QGraphicsProxyWidget.hideEvent(QHideEvent) """
        pass

    # real signature unknown; restored from __doc__
    def hoverEnterEvent(self, QGraphicsSceneHoverEvent):
        """ QGraphicsProxyWidget.hoverEnterEvent(QGraphicsSceneHoverEvent) """
        pass

    # real signature unknown; restored from __doc__
    def hoverLeaveEvent(self, QGraphicsSceneHoverEvent):
        """ QGraphicsProxyWidget.hoverLeaveEvent(QGraphicsSceneHoverEvent) """
        pass

    # real signature unknown; restored from __doc__
    def hoverMoveEvent(self, QGraphicsSceneHoverEvent):
        """ QGraphicsProxyWidget.hoverMoveEvent(QGraphicsSceneHoverEvent) """
        pass

    # real signature unknown; restored from __doc__
    def itemChange(self, QGraphicsItem_GraphicsItemChange, QVariant):
        """ QGraphicsProxyWidget.itemChange(QGraphicsItem.GraphicsItemChange, QVariant) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QGraphicsProxyWidget.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def keyReleaseEvent(self, QKeyEvent):
        """ QGraphicsProxyWidget.keyReleaseEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseDoubleClickEvent(self, QGraphicsSceneMouseEvent):
        """ QGraphicsProxyWidget.mouseDoubleClickEvent(QGraphicsSceneMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QGraphicsSceneMouseEvent):
        """ QGraphicsProxyWidget.mouseMoveEvent(QGraphicsSceneMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QGraphicsSceneMouseEvent):
        """ QGraphicsProxyWidget.mousePressEvent(QGraphicsSceneMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QGraphicsSceneMouseEvent):
        """ QGraphicsProxyWidget.mouseReleaseEvent(QGraphicsSceneMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def newProxyWidget(self, QWidget):
        """ QGraphicsProxyWidget.newProxyWidget(QWidget) -> QGraphicsProxyWidget """
        return QGraphicsProxyWidget

    # real signature unknown; restored from __doc__
    def paint(self, QPainter, QStyleOptionGraphicsItem, QWidget):
        """ QGraphicsProxyWidget.paint(QPainter, QStyleOptionGraphicsItem, QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QGraphicsSceneResizeEvent):
        """ QGraphicsProxyWidget.resizeEvent(QGraphicsSceneResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setGeometry(self, QRectF):
        """ QGraphicsProxyWidget.setGeometry(QRectF) """
        pass

    # real signature unknown; restored from __doc__
    def setWidget(self, QWidget):
        """ QGraphicsProxyWidget.setWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QGraphicsProxyWidget.showEvent(QShowEvent) """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def sizeHint(self, Qt_SizeHint, QSizeF_constraint=None, *args, **kwargs):
        """ QGraphicsProxyWidget.sizeHint(Qt.SizeHint, QSizeF constraint=QSizeF()) -> QSizeF """
        pass

    # real signature unknown; restored from __doc__
    def subWidgetRect(self, QWidget):
        """ QGraphicsProxyWidget.subWidgetRect(QWidget) -> QRectF """
        pass

    def type(self):  # real signature unknown; restored from __doc__
        """ QGraphicsProxyWidget.type() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def ungrabMouseEvent(self, QEvent):
        """ QGraphicsProxyWidget.ungrabMouseEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def wheelEvent(self, QGraphicsSceneWheelEvent):
        """ QGraphicsProxyWidget.wheelEvent(QGraphicsSceneWheelEvent) """
        pass

    def widget(self):  # real signature unknown; restored from __doc__
        """ QGraphicsProxyWidget.widget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def __init__(self, QGraphicsItem_parent=None, Qt_WindowFlags_flags=0):
        pass


class QGraphicsRectItem(QAbstractGraphicsShapeItem):

    """
    QGraphicsRectItem(QGraphicsItem parent=None, QGraphicsScene scene=None)
    QGraphicsRectItem(QRectF, QGraphicsItem parent=None, QGraphicsScene scene=None)
    QGraphicsRectItem(float, float, float, float, QGraphicsItem parent=None, QGraphicsScene scene=None)
    """

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsRectItem.boundingRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def contains(self, QPointF):
        """ QGraphicsRectItem.contains(QPointF) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isObscuredBy(self, QGraphicsItem):
        """ QGraphicsRectItem.isObscuredBy(QGraphicsItem) -> bool """
        return False

    def opaqueArea(self):  # real signature unknown; restored from __doc__
        """ QGraphicsRectItem.opaqueArea() -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def paint(self, QPainter, QStyleOptionGraphicsItem, QWidget_widget=None):
        """ QGraphicsRectItem.paint(QPainter, QStyleOptionGraphicsItem, QWidget widget=None) """
        pass

    def rect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsRectItem.rect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setRect(self, *__args):
        """
        QGraphicsRectItem.setRect(QRectF)
        QGraphicsRectItem.setRect(float, float, float, float)
        """
        pass

    def shape(self):  # real signature unknown; restored from __doc__
        """ QGraphicsRectItem.shape() -> QPainterPath """
        return QPainterPath

    def type(self):  # real signature unknown; restored from __doc__
        """ QGraphicsRectItem.type() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QGraphicsTransform(__PyQt4_QtCore.QObject):

    """ QGraphicsTransform(QObject parent=None) """
    # real signature unknown; restored from __doc__

    def applyTo(self, QMatrix4x4):
        """ QGraphicsTransform.applyTo(QMatrix4x4) """
        pass

    def update(self):  # real signature unknown; restored from __doc__
        """ QGraphicsTransform.update() """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QGraphicsRotation(QGraphicsTransform):

    """ QGraphicsRotation(QObject parent=None) """

    def angle(self):  # real signature unknown; restored from __doc__
        """ QGraphicsRotation.angle() -> float """
        return 0.0

    def angleChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsRotation.angleChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def applyTo(self, QMatrix4x4):
        """ QGraphicsRotation.applyTo(QMatrix4x4) """
        pass

    def axis(self):  # real signature unknown; restored from __doc__
        """ QGraphicsRotation.axis() -> QVector3D """
        return QVector3D

    def axisChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsRotation.axisChanged[] [signal] """
        pass

    def origin(self):  # real signature unknown; restored from __doc__
        """ QGraphicsRotation.origin() -> QVector3D """
        return QVector3D

    def originChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsRotation.originChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def setAngle(self, p_float):
        """ QGraphicsRotation.setAngle(float) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setAxis(self, *__args):
        """
        QGraphicsRotation.setAxis(QVector3D)
        QGraphicsRotation.setAxis(Qt.Axis)
        """
        pass

    # real signature unknown; restored from __doc__
    def setOrigin(self, QVector3D):
        """ QGraphicsRotation.setOrigin(QVector3D) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QGraphicsScale(QGraphicsTransform):

    """ QGraphicsScale(QObject parent=None) """
    # real signature unknown; restored from __doc__

    def applyTo(self, QMatrix4x4):
        """ QGraphicsScale.applyTo(QMatrix4x4) """
        pass

    def origin(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScale.origin() -> QVector3D """
        return QVector3D

    def originChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsScale.originChanged[] [signal] """
        pass

    def scaleChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsScale.scaleChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def setOrigin(self, QVector3D):
        """ QGraphicsScale.setOrigin(QVector3D) """
        pass

    # real signature unknown; restored from __doc__
    def setXScale(self, p_float):
        """ QGraphicsScale.setXScale(float) """
        pass

    # real signature unknown; restored from __doc__
    def setYScale(self, p_float):
        """ QGraphicsScale.setYScale(float) """
        pass

    # real signature unknown; restored from __doc__
    def setZScale(self, p_float):
        """ QGraphicsScale.setZScale(float) """
        pass

    def xScale(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScale.xScale() -> float """
        return 0.0

    def xScaleChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsScale.xScaleChanged[] [signal] """
        pass

    def yScale(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScale.yScale() -> float """
        return 0.0

    def yScaleChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsScale.yScaleChanged[] [signal] """
        pass

    def zScale(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScale.zScale() -> float """
        return 0.0

    def zScaleChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsScale.zScaleChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QGraphicsScene(__PyQt4_QtCore.QObject):

    """
    QGraphicsScene(QObject parent=None)
    QGraphicsScene(QRectF, QObject parent=None)
    QGraphicsScene(float, float, float, float, QObject parent=None)
    """

    def activePanel(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.activePanel() -> QGraphicsItem """
        return QGraphicsItem

    def activeWindow(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.activeWindow() -> QGraphicsWidget """
        return QGraphicsWidget

    # real signature unknown; restored from __doc__ with multiple overloads
    def addEllipse(self, *__args):
        """
        QGraphicsScene.addEllipse(QRectF, QPen pen=QPen(), QBrush brush=QBrush()) -> QGraphicsEllipseItem
        QGraphicsScene.addEllipse(float, float, float, float, QPen pen=QPen(), QBrush brush=QBrush()) -> QGraphicsEllipseItem
        """
        pass

    # real signature unknown; restored from __doc__
    def addItem(self, QGraphicsItem):
        """ QGraphicsScene.addItem(QGraphicsItem) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def addLine(self, *__args):
        """
        QGraphicsScene.addLine(QLineF, QPen pen=QPen()) -> QGraphicsLineItem
        QGraphicsScene.addLine(float, float, float, float, QPen pen=QPen()) -> QGraphicsLineItem
        """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def addPath(self, QPainterPath, QPen_pen=None, *args, **kwargs):
        """ QGraphicsScene.addPath(QPainterPath, QPen pen=QPen(), QBrush brush=QBrush()) -> QGraphicsPathItem """
        pass

    # real signature unknown; restored from __doc__
    def addPixmap(self, QPixmap):
        """ QGraphicsScene.addPixmap(QPixmap) -> QGraphicsPixmapItem """
        return QGraphicsPixmapItem

    # real signature unknown; NOTE: unreliably restored from __doc__
    def addPolygon(self, QPolygonF, QPen_pen=None, *args, **kwargs):
        """ QGraphicsScene.addPolygon(QPolygonF, QPen pen=QPen(), QBrush brush=QBrush()) -> QGraphicsPolygonItem """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def addRect(self, *__args):
        """
        QGraphicsScene.addRect(QRectF, QPen pen=QPen(), QBrush brush=QBrush()) -> QGraphicsRectItem
        QGraphicsScene.addRect(float, float, float, float, QPen pen=QPen(), QBrush brush=QBrush()) -> QGraphicsRectItem
        """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def addSimpleText(self, QString, QFont_font=None, *args, **kwargs):
        """ QGraphicsScene.addSimpleText(QString, QFont font=QFont()) -> QGraphicsSimpleTextItem """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def addText(self, QString, QFont_font=None, *args, **kwargs):
        """ QGraphicsScene.addText(QString, QFont font=QFont()) -> QGraphicsTextItem """
        pass

    # real signature unknown; restored from __doc__
    def addWidget(self, QWidget, Qt_WindowFlags_flags=0):
        """ QGraphicsScene.addWidget(QWidget, Qt.WindowFlags flags=0) -> QGraphicsProxyWidget """
        return QGraphicsProxyWidget

    def advance(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.advance() """
        pass

    def backgroundBrush(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.backgroundBrush() -> QBrush """
        return QBrush

    def bspTreeDepth(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.bspTreeDepth() -> int """
        return 0

    def changed(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsScene.changed[list-of-QRectF] [signal] """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.clear() """
        pass

    def clearFocus(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.clearFocus() """
        pass

    def clearSelection(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.clearSelection() """
        pass

    # real signature unknown; restored from __doc__
    def collidingItems(self, QGraphicsItem, Qt_ItemSelectionMode_mode=None):
        """ QGraphicsScene.collidingItems(QGraphicsItem, Qt.ItemSelectionMode mode=Qt.IntersectsItemShape) -> list-of-QGraphicsItem """
        pass

    # real signature unknown; restored from __doc__
    def contextMenuEvent(self, QGraphicsSceneContextMenuEvent):
        """ QGraphicsScene.contextMenuEvent(QGraphicsSceneContextMenuEvent) """
        pass

    # real signature unknown; restored from __doc__
    def createItemGroup(self, list_of_QGraphicsItem):
        """ QGraphicsScene.createItemGroup(list-of-QGraphicsItem) -> QGraphicsItemGroup """
        return QGraphicsItemGroup

    # real signature unknown; restored from __doc__
    def destroyItemGroup(self, QGraphicsItemGroup):
        """ QGraphicsScene.destroyItemGroup(QGraphicsItemGroup) """
        pass

    # real signature unknown; restored from __doc__
    def dragEnterEvent(self, QGraphicsSceneDragDropEvent):
        """ QGraphicsScene.dragEnterEvent(QGraphicsSceneDragDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragLeaveEvent(self, QGraphicsSceneDragDropEvent):
        """ QGraphicsScene.dragLeaveEvent(QGraphicsSceneDragDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragMoveEvent(self, QGraphicsSceneDragDropEvent):
        """ QGraphicsScene.dragMoveEvent(QGraphicsSceneDragDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def drawBackground(self, QPainter, QRectF):
        """ QGraphicsScene.drawBackground(QPainter, QRectF) """
        pass

    # real signature unknown; restored from __doc__
    def drawForeground(self, QPainter, QRectF):
        """ QGraphicsScene.drawForeground(QPainter, QRectF) """
        pass

    # real signature unknown; restored from __doc__
    def drawItems(self, QPainter, list_of_QGraphicsItem, list_of_QStyleOptionGraphicsItem, QWidget_widget=None):
        """ QGraphicsScene.drawItems(QPainter, list-of-QGraphicsItem, list-of-QStyleOptionGraphicsItem, QWidget widget=None) """
        pass

    # real signature unknown; restored from __doc__
    def dropEvent(self, QGraphicsSceneDragDropEvent):
        """ QGraphicsScene.dropEvent(QGraphicsSceneDragDropEvent) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QGraphicsScene.eventFilter(QObject, QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QGraphicsScene.focusInEvent(QFocusEvent) """
        pass

    def focusItem(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.focusItem() -> QGraphicsItem """
        return QGraphicsItem

    # real signature unknown; restored from __doc__
    def focusNextPrevChild(self, bool):
        """ QGraphicsScene.focusNextPrevChild(bool) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QGraphicsScene.focusOutEvent(QFocusEvent) """
        pass

    def font(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.font() -> QFont """
        return QFont

    def foregroundBrush(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.foregroundBrush() -> QBrush """
        return QBrush

    def hasFocus(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.hasFocus() -> bool """
        return False

    def height(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.height() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def helpEvent(self, QGraphicsSceneHelpEvent):
        """ QGraphicsScene.helpEvent(QGraphicsSceneHelpEvent) """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodEvent(self, QInputMethodEvent):
        """ QGraphicsScene.inputMethodEvent(QInputMethodEvent) """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodQuery(self, Qt_InputMethodQuery):
        """ QGraphicsScene.inputMethodQuery(Qt.InputMethodQuery) -> QVariant """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def invalidate(self, *__args):
        """
        QGraphicsScene.invalidate(QRectF rect=QRectF(), QGraphicsScene.SceneLayers layers=QGraphicsScene.AllLayers)
        QGraphicsScene.invalidate(float, float, float, float, QGraphicsScene.SceneLayers layers=QGraphicsScene.AllLayers)
        """
        pass

    def isActive(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.isActive() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isSortCacheEnabled(self):
        """ QGraphicsScene.isSortCacheEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def itemAt(self, *__args):
        """
        QGraphicsScene.itemAt(QPointF) -> QGraphicsItem
        QGraphicsScene.itemAt(float, float) -> QGraphicsItem
        QGraphicsScene.itemAt(QPointF, QTransform) -> QGraphicsItem
        QGraphicsScene.itemAt(float, float, QTransform) -> QGraphicsItem
        """
        return QGraphicsItem

    def ItemIndexMethod(self, *args, **kwargs):  # real signature unknown
        pass

    def itemIndexMethod(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.itemIndexMethod() -> QGraphicsScene.ItemIndexMethod """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def items(self, *__args):
        """
        QGraphicsScene.items() -> list-of-QGraphicsItem
        QGraphicsScene.items(QPointF) -> list-of-QGraphicsItem
        QGraphicsScene.items(QRectF, Qt.ItemSelectionMode mode=Qt.IntersectsItemShape) -> list-of-QGraphicsItem
        QGraphicsScene.items(QPolygonF, Qt.ItemSelectionMode mode=Qt.IntersectsItemShape) -> list-of-QGraphicsItem
        QGraphicsScene.items(QPainterPath, Qt.ItemSelectionMode mode=Qt.IntersectsItemShape) -> list-of-QGraphicsItem
        QGraphicsScene.items(float, float, float, float, Qt.ItemSelectionMode mode=Qt.IntersectsItemShape) -> list-of-QGraphicsItem
        QGraphicsScene.items(Qt.SortOrder) -> list-of-QGraphicsItem
        QGraphicsScene.items(QPointF, Qt.ItemSelectionMode, Qt.SortOrder, QTransform deviceTransform=QTransform()) -> list-of-QGraphicsItem
        QGraphicsScene.items(QRectF, Qt.ItemSelectionMode, Qt.SortOrder, QTransform deviceTransform=QTransform()) -> list-of-QGraphicsItem
        QGraphicsScene.items(QPolygonF, Qt.ItemSelectionMode, Qt.SortOrder, QTransform deviceTransform=QTransform()) -> list-of-QGraphicsItem
        QGraphicsScene.items(QPainterPath, Qt.ItemSelectionMode, Qt.SortOrder, QTransform deviceTransform=QTransform()) -> list-of-QGraphicsItem
        QGraphicsScene.items(float, float, float, float, Qt.ItemSelectionMode, Qt.SortOrder, QTransform deviceTransform=QTransform()) -> list-of-QGraphicsItem
        """
        pass

    # real signature unknown; restored from __doc__
    def itemsBoundingRect(self):
        """ QGraphicsScene.itemsBoundingRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QGraphicsScene.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def keyReleaseEvent(self, QKeyEvent):
        """ QGraphicsScene.keyReleaseEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseDoubleClickEvent(self, QGraphicsSceneMouseEvent):
        """ QGraphicsScene.mouseDoubleClickEvent(QGraphicsSceneMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseGrabberItem(self):
        """ QGraphicsScene.mouseGrabberItem() -> QGraphicsItem """
        return QGraphicsItem

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QGraphicsSceneMouseEvent):
        """ QGraphicsScene.mouseMoveEvent(QGraphicsSceneMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QGraphicsSceneMouseEvent):
        """ QGraphicsScene.mousePressEvent(QGraphicsSceneMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QGraphicsSceneMouseEvent):
        """ QGraphicsScene.mouseReleaseEvent(QGraphicsSceneMouseEvent) """
        pass

    def palette(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.palette() -> QPalette """
        return QPalette

    # real signature unknown; restored from __doc__
    def removeItem(self, QGraphicsItem):
        """ QGraphicsScene.removeItem(QGraphicsItem) """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def render(self, QPainter, QRectF_target=None, *args, **kwargs):
        """ QGraphicsScene.render(QPainter, QRectF target=QRectF(), QRectF source=QRectF(), Qt.AspectRatioMode mode=Qt.KeepAspectRatio) """
        pass

    def SceneLayer(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def SceneLayers(self, *__args):
        """
        QGraphicsScene.SceneLayers(QGraphicsScene.SceneLayers)
        QGraphicsScene.SceneLayers(int)
        QGraphicsScene.SceneLayers()
        """
        pass

    def sceneRect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.sceneRect() -> QRectF """
        pass

    def sceneRectChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsScene.sceneRectChanged[QRectF] [signal] """
        pass

    def selectedItems(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.selectedItems() -> list-of-QGraphicsItem """
        pass

    def selectionArea(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.selectionArea() -> QPainterPath """
        return QPainterPath

    def selectionChanged(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsScene.selectionChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def sendEvent(self, QGraphicsItem, QEvent):
        """ QGraphicsScene.sendEvent(QGraphicsItem, QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setActivePanel(self, QGraphicsItem):
        """ QGraphicsScene.setActivePanel(QGraphicsItem) """
        pass

    # real signature unknown; restored from __doc__
    def setActiveWindow(self, QGraphicsWidget):
        """ QGraphicsScene.setActiveWindow(QGraphicsWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setBackgroundBrush(self, QBrush):
        """ QGraphicsScene.setBackgroundBrush(QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def setBspTreeDepth(self, p_int):
        """ QGraphicsScene.setBspTreeDepth(int) """
        pass

    # real signature unknown; restored from __doc__
    def setFocus(self, Qt_FocusReason_focusReason=None):
        """ QGraphicsScene.setFocus(Qt.FocusReason focusReason=Qt.OtherFocusReason) """
        pass

    # real signature unknown; restored from __doc__
    def setFocusItem(self, QGraphicsItem, Qt_FocusReason_focusReason=None):
        """ QGraphicsScene.setFocusItem(QGraphicsItem, Qt.FocusReason focusReason=Qt.OtherFocusReason) """
        pass

    def setFont(self, QFont):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.setFont(QFont) """
        pass

    # real signature unknown; restored from __doc__
    def setForegroundBrush(self, QBrush):
        """ QGraphicsScene.setForegroundBrush(QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def setItemIndexMethod(self, QGraphicsScene_ItemIndexMethod):
        """ QGraphicsScene.setItemIndexMethod(QGraphicsScene.ItemIndexMethod) """
        pass

    # real signature unknown; restored from __doc__
    def setPalette(self, QPalette):
        """ QGraphicsScene.setPalette(QPalette) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setSceneRect(self, *__args):
        """
        QGraphicsScene.setSceneRect(QRectF)
        QGraphicsScene.setSceneRect(float, float, float, float)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setSelectionArea(self, QPainterPath, *__args):
        """
        QGraphicsScene.setSelectionArea(QPainterPath)
        QGraphicsScene.setSelectionArea(QPainterPath, Qt.ItemSelectionMode)
        QGraphicsScene.setSelectionArea(QPainterPath, QTransform)
        QGraphicsScene.setSelectionArea(QPainterPath, Qt.ItemSelectionMode, QTransform)
        """
        pass

    # real signature unknown; restored from __doc__
    def setSortCacheEnabled(self, bool):
        """ QGraphicsScene.setSortCacheEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setStickyFocus(self, bool):
        """ QGraphicsScene.setStickyFocus(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setStyle(self, QStyle):
        """ QGraphicsScene.setStyle(QStyle) """
        pass

    def stickyFocus(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.stickyFocus() -> bool """
        return False

    def style(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.style() -> QStyle """
        return QStyle

    # real signature unknown; restored from __doc__ with multiple overloads
    def update(self, *__args):
        """
        QGraphicsScene.update(QRectF rect=QRectF())
        QGraphicsScene.update(float, float, float, float)
        """
        pass

    def views(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.views() -> list-of-QGraphicsView """
        pass

    # real signature unknown; restored from __doc__
    def wheelEvent(self, QGraphicsSceneWheelEvent):
        """ QGraphicsScene.wheelEvent(QGraphicsSceneWheelEvent) """
        pass

    def width(self):  # real signature unknown; restored from __doc__
        """ QGraphicsScene.width() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    AllLayers = 65535
    BackgroundLayer = 2
    BspTreeIndex = 0
    ForegroundLayer = 4
    ItemLayer = 1
    NoIndex = -1


class QGraphicsSceneEvent(__PyQt4_QtCore.QEvent):
    # no doc
    # real signature unknown; restored from __doc__

    def setWidget(self, QWidget):
        """ QGraphicsSceneEvent.setWidget(QWidget) """
        pass

    def widget(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneEvent.widget() -> QWidget """
        return QWidget

    def __init__(self, *args, **kwargs):  # real signature unknown
        pass


class QGraphicsSceneContextMenuEvent(QGraphicsSceneEvent):
    # no doc

    def modifiers(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneContextMenuEvent.modifiers() -> Qt.KeyboardModifiers """
        pass

    def pos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneContextMenuEvent.pos() -> QPointF """
        pass

    def Reason(self, *args, **kwargs):  # real signature unknown
        pass

    def reason(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneContextMenuEvent.reason() -> QGraphicsSceneContextMenuEvent.Reason """
        pass

    def scenePos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneContextMenuEvent.scenePos() -> QPointF """
        pass

    def screenPos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneContextMenuEvent.screenPos() -> QPoint """
        pass

    def __init__(self, *args, **kwargs):  # real signature unknown
        pass

    Keyboard = 1
    Mouse = 0
    Other = 2


class QGraphicsSceneDragDropEvent(QGraphicsSceneEvent):
    # no doc
    # real signature unknown; restored from __doc__

    def acceptProposedAction(self):
        """ QGraphicsSceneDragDropEvent.acceptProposedAction() """
        pass

    def buttons(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneDragDropEvent.buttons() -> Qt.MouseButtons """
        pass

    def dropAction(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneDragDropEvent.dropAction() -> Qt.DropAction """
        pass

    def mimeData(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneDragDropEvent.mimeData() -> QMimeData """
        pass

    def modifiers(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneDragDropEvent.modifiers() -> Qt.KeyboardModifiers """
        pass

    def pos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneDragDropEvent.pos() -> QPointF """
        pass

    def possibleActions(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneDragDropEvent.possibleActions() -> Qt.DropActions """
        pass

    def proposedAction(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneDragDropEvent.proposedAction() -> Qt.DropAction """
        pass

    def scenePos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneDragDropEvent.scenePos() -> QPointF """
        pass

    def screenPos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneDragDropEvent.screenPos() -> QPoint """
        pass

    # real signature unknown; restored from __doc__
    def setDropAction(self, Qt_DropAction):
        """ QGraphicsSceneDragDropEvent.setDropAction(Qt.DropAction) """
        pass

    def source(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneDragDropEvent.source() -> QWidget """
        return QWidget

    def __init__(self, *args, **kwargs):  # real signature unknown
        pass


class QGraphicsSceneHelpEvent(QGraphicsSceneEvent):
    # no doc

    def scenePos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneHelpEvent.scenePos() -> QPointF """
        pass

    def screenPos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneHelpEvent.screenPos() -> QPoint """
        pass

    def __init__(self, *args, **kwargs):  # real signature unknown
        pass


class QGraphicsSceneHoverEvent(QGraphicsSceneEvent):
    # no doc

    def lastPos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneHoverEvent.lastPos() -> QPointF """
        pass

    def lastScenePos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneHoverEvent.lastScenePos() -> QPointF """
        pass

    def lastScreenPos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneHoverEvent.lastScreenPos() -> QPoint """
        pass

    def modifiers(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneHoverEvent.modifiers() -> Qt.KeyboardModifiers """
        pass

    def pos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneHoverEvent.pos() -> QPointF """
        pass

    def scenePos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneHoverEvent.scenePos() -> QPointF """
        pass

    def screenPos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneHoverEvent.screenPos() -> QPoint """
        pass

    def __init__(self, *args, **kwargs):  # real signature unknown
        pass


class QGraphicsSceneMouseEvent(QGraphicsSceneEvent):
    # no doc

    def button(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneMouseEvent.button() -> Qt.MouseButton """
        pass

    # real signature unknown; restored from __doc__
    def buttonDownPos(self, Qt_MouseButton):
        """ QGraphicsSceneMouseEvent.buttonDownPos(Qt.MouseButton) -> QPointF """
        pass

    # real signature unknown; restored from __doc__
    def buttonDownScenePos(self, Qt_MouseButton):
        """ QGraphicsSceneMouseEvent.buttonDownScenePos(Qt.MouseButton) -> QPointF """
        pass

    # real signature unknown; restored from __doc__
    def buttonDownScreenPos(self, Qt_MouseButton):
        """ QGraphicsSceneMouseEvent.buttonDownScreenPos(Qt.MouseButton) -> QPoint """
        pass

    def buttons(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneMouseEvent.buttons() -> Qt.MouseButtons """
        pass

    def lastPos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneMouseEvent.lastPos() -> QPointF """
        pass

    def lastScenePos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneMouseEvent.lastScenePos() -> QPointF """
        pass

    def lastScreenPos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneMouseEvent.lastScreenPos() -> QPoint """
        pass

    def modifiers(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneMouseEvent.modifiers() -> Qt.KeyboardModifiers """
        pass

    def pos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneMouseEvent.pos() -> QPointF """
        pass

    def scenePos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneMouseEvent.scenePos() -> QPointF """
        pass

    def screenPos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneMouseEvent.screenPos() -> QPoint """
        pass

    def __init__(self, *args, **kwargs):  # real signature unknown
        pass


class QGraphicsSceneMoveEvent(QGraphicsSceneEvent):

    """ QGraphicsSceneMoveEvent() """

    def newPos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneMoveEvent.newPos() -> QPointF """
        pass

    def oldPos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneMoveEvent.oldPos() -> QPointF """
        pass

    def __init__(self):  # real signature unknown; restored from __doc__
        pass


class QGraphicsSceneResizeEvent(QGraphicsSceneEvent):

    """ QGraphicsSceneResizeEvent() """

    def newSize(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneResizeEvent.newSize() -> QSizeF """
        pass

    def oldSize(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneResizeEvent.oldSize() -> QSizeF """
        pass

    def __init__(self):  # real signature unknown; restored from __doc__
        pass


class QGraphicsSceneWheelEvent(QGraphicsSceneEvent):
    # no doc

    def buttons(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneWheelEvent.buttons() -> Qt.MouseButtons """
        pass

    def delta(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneWheelEvent.delta() -> int """
        return 0

    def modifiers(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneWheelEvent.modifiers() -> Qt.KeyboardModifiers """
        pass

    def orientation(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneWheelEvent.orientation() -> Qt.Orientation """
        pass

    def pos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneWheelEvent.pos() -> QPointF """
        pass

    def scenePos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneWheelEvent.scenePos() -> QPointF """
        pass

    def screenPos(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSceneWheelEvent.screenPos() -> QPoint """
        pass

    def __init__(self, *args, **kwargs):  # real signature unknown
        pass


class QGraphicsSimpleTextItem(QAbstractGraphicsShapeItem):

    """
    QGraphicsSimpleTextItem(QGraphicsItem parent=None, QGraphicsScene scene=None)
    QGraphicsSimpleTextItem(QString, QGraphicsItem parent=None, QGraphicsScene scene=None)
    """

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSimpleTextItem.boundingRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def contains(self, QPointF):
        """ QGraphicsSimpleTextItem.contains(QPointF) -> bool """
        return False

    def font(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSimpleTextItem.font() -> QFont """
        return QFont

    # real signature unknown; restored from __doc__
    def isObscuredBy(self, QGraphicsItem):
        """ QGraphicsSimpleTextItem.isObscuredBy(QGraphicsItem) -> bool """
        return False

    def opaqueArea(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSimpleTextItem.opaqueArea() -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def paint(self, QPainter, QStyleOptionGraphicsItem, QWidget):
        """ QGraphicsSimpleTextItem.paint(QPainter, QStyleOptionGraphicsItem, QWidget) """
        pass

    def setFont(self, QFont):  # real signature unknown; restored from __doc__
        """ QGraphicsSimpleTextItem.setFont(QFont) """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, QString):
        """ QGraphicsSimpleTextItem.setText(QString) """
        pass

    def shape(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSimpleTextItem.shape() -> QPainterPath """
        return QPainterPath

    def text(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSimpleTextItem.text() -> QString """
        pass

    def type(self):  # real signature unknown; restored from __doc__
        """ QGraphicsSimpleTextItem.type() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QGraphicsTextItem(QGraphicsObject):

    """
    QGraphicsTextItem(QGraphicsItem parent=None, QGraphicsScene scene=None)
    QGraphicsTextItem(QString, QGraphicsItem parent=None, QGraphicsScene scene=None)
    """

    def adjustSize(self):  # real signature unknown; restored from __doc__
        """ QGraphicsTextItem.adjustSize() """
        pass

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsTextItem.boundingRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def contains(self, QPointF):
        """ QGraphicsTextItem.contains(QPointF) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def contextMenuEvent(self, QGraphicsSceneContextMenuEvent):
        """ QGraphicsTextItem.contextMenuEvent(QGraphicsSceneContextMenuEvent) """
        pass

    # real signature unknown; restored from __doc__
    def defaultTextColor(self):
        """ QGraphicsTextItem.defaultTextColor() -> QColor """
        return QColor

    def document(self):  # real signature unknown; restored from __doc__
        """ QGraphicsTextItem.document() -> QTextDocument """
        return QTextDocument

    # real signature unknown; restored from __doc__
    def dragEnterEvent(self, QGraphicsSceneDragDropEvent):
        """ QGraphicsTextItem.dragEnterEvent(QGraphicsSceneDragDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragLeaveEvent(self, QGraphicsSceneDragDropEvent):
        """ QGraphicsTextItem.dragLeaveEvent(QGraphicsSceneDragDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragMoveEvent(self, QGraphicsSceneDragDropEvent):
        """ QGraphicsTextItem.dragMoveEvent(QGraphicsSceneDragDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dropEvent(self, QGraphicsSceneDragDropEvent):
        """ QGraphicsTextItem.dropEvent(QGraphicsSceneDragDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QGraphicsTextItem.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QGraphicsTextItem.focusOutEvent(QFocusEvent) """
        pass

    def font(self):  # real signature unknown; restored from __doc__
        """ QGraphicsTextItem.font() -> QFont """
        return QFont

    # real signature unknown; restored from __doc__
    def hoverEnterEvent(self, QGraphicsSceneHoverEvent):
        """ QGraphicsTextItem.hoverEnterEvent(QGraphicsSceneHoverEvent) """
        pass

    # real signature unknown; restored from __doc__
    def hoverLeaveEvent(self, QGraphicsSceneHoverEvent):
        """ QGraphicsTextItem.hoverLeaveEvent(QGraphicsSceneHoverEvent) """
        pass

    # real signature unknown; restored from __doc__
    def hoverMoveEvent(self, QGraphicsSceneHoverEvent):
        """ QGraphicsTextItem.hoverMoveEvent(QGraphicsSceneHoverEvent) """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodEvent(self, QInputMethodEvent):
        """ QGraphicsTextItem.inputMethodEvent(QInputMethodEvent) """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodQuery(self, Qt_InputMethodQuery):
        """ QGraphicsTextItem.inputMethodQuery(Qt.InputMethodQuery) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def isObscuredBy(self, QGraphicsItem):
        """ QGraphicsTextItem.isObscuredBy(QGraphicsItem) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QGraphicsTextItem.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def keyReleaseEvent(self, QKeyEvent):
        """ QGraphicsTextItem.keyReleaseEvent(QKeyEvent) """
        pass

    def linkActivated(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsTextItem.linkActivated[QString] [signal] """
        pass

    def linkHovered(self, *args, **kwargs):  # real signature unknown
        """ QGraphicsTextItem.linkHovered[QString] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def mouseDoubleClickEvent(self, QGraphicsSceneMouseEvent):
        """ QGraphicsTextItem.mouseDoubleClickEvent(QGraphicsSceneMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QGraphicsSceneMouseEvent):
        """ QGraphicsTextItem.mouseMoveEvent(QGraphicsSceneMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QGraphicsSceneMouseEvent):
        """ QGraphicsTextItem.mousePressEvent(QGraphicsSceneMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QGraphicsSceneMouseEvent):
        """ QGraphicsTextItem.mouseReleaseEvent(QGraphicsSceneMouseEvent) """
        pass

    def opaqueArea(self):  # real signature unknown; restored from __doc__
        """ QGraphicsTextItem.opaqueArea() -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def openExternalLinks(self):
        """ QGraphicsTextItem.openExternalLinks() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def paint(self, QPainter, QStyleOptionGraphicsItem, QWidget):
        """ QGraphicsTextItem.paint(QPainter, QStyleOptionGraphicsItem, QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def sceneEvent(self, QEvent):
        """ QGraphicsTextItem.sceneEvent(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setDefaultTextColor(self, QColor):
        """ QGraphicsTextItem.setDefaultTextColor(QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setDocument(self, QTextDocument):
        """ QGraphicsTextItem.setDocument(QTextDocument) """
        pass

    def setFont(self, QFont):  # real signature unknown; restored from __doc__
        """ QGraphicsTextItem.setFont(QFont) """
        pass

    # real signature unknown; restored from __doc__
    def setHtml(self, QString):
        """ QGraphicsTextItem.setHtml(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setOpenExternalLinks(self, bool):
        """ QGraphicsTextItem.setOpenExternalLinks(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setPlainText(self, QString):
        """ QGraphicsTextItem.setPlainText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTabChangesFocus(self, bool):
        """ QGraphicsTextItem.setTabChangesFocus(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setTextCursor(self, QTextCursor):
        """ QGraphicsTextItem.setTextCursor(QTextCursor) """
        pass

    # real signature unknown; restored from __doc__
    def setTextInteractionFlags(self, Qt_TextInteractionFlags):
        """ QGraphicsTextItem.setTextInteractionFlags(Qt.TextInteractionFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setTextWidth(self, p_float):
        """ QGraphicsTextItem.setTextWidth(float) """
        pass

    def shape(self):  # real signature unknown; restored from __doc__
        """ QGraphicsTextItem.shape() -> QPainterPath """
        return QPainterPath

    def tabChangesFocus(self):  # real signature unknown; restored from __doc__
        """ QGraphicsTextItem.tabChangesFocus() -> bool """
        return False

    def textCursor(self):  # real signature unknown; restored from __doc__
        """ QGraphicsTextItem.textCursor() -> QTextCursor """
        return QTextCursor

    # real signature unknown; restored from __doc__
    def textInteractionFlags(self):
        """ QGraphicsTextItem.textInteractionFlags() -> Qt.TextInteractionFlags """
        pass

    def textWidth(self):  # real signature unknown; restored from __doc__
        """ QGraphicsTextItem.textWidth() -> float """
        return 0.0

    def toHtml(self):  # real signature unknown; restored from __doc__
        """ QGraphicsTextItem.toHtml() -> QString """
        pass

    def toPlainText(self):  # real signature unknown; restored from __doc__
        """ QGraphicsTextItem.toPlainText() -> QString """
        pass

    def type(self):  # real signature unknown; restored from __doc__
        """ QGraphicsTextItem.type() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QGraphicsView(QAbstractScrollArea):

    """
    QGraphicsView(QWidget parent=None)
    QGraphicsView(QGraphicsScene, QWidget parent=None)
    """

    def alignment(self):  # real signature unknown; restored from __doc__
        """ QGraphicsView.alignment() -> Qt.Alignment """
        pass

    def backgroundBrush(self):  # real signature unknown; restored from __doc__
        """ QGraphicsView.backgroundBrush() -> QBrush """
        return QBrush

    # real signature unknown; restored from __doc__ with multiple overloads
    def CacheMode(self, *__args):
        """
        QGraphicsView.CacheMode(QGraphicsView.CacheMode)
        QGraphicsView.CacheMode(int)
        QGraphicsView.CacheMode()
        """
        pass

    def cacheMode(self):  # real signature unknown; restored from __doc__
        """ QGraphicsView.cacheMode() -> QGraphicsView.CacheMode """
        pass

    def CacheModeFlag(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def centerOn(self, *__args):
        """
        QGraphicsView.centerOn(QPointF)
        QGraphicsView.centerOn(QGraphicsItem)
        QGraphicsView.centerOn(float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def contextMenuEvent(self, QContextMenuEvent):
        """ QGraphicsView.contextMenuEvent(QContextMenuEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragEnterEvent(self, QDragEnterEvent):
        """ QGraphicsView.dragEnterEvent(QDragEnterEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragLeaveEvent(self, QDragLeaveEvent):
        """ QGraphicsView.dragLeaveEvent(QDragLeaveEvent) """
        pass

    def dragMode(self):  # real signature unknown; restored from __doc__
        """ QGraphicsView.dragMode() -> QGraphicsView.DragMode """
        pass

    def DragMode(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def dragMoveEvent(self, QDragMoveEvent):
        """ QGraphicsView.dragMoveEvent(QDragMoveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def drawBackground(self, QPainter, QRectF):
        """ QGraphicsView.drawBackground(QPainter, QRectF) """
        pass

    # real signature unknown; restored from __doc__
    def drawForeground(self, QPainter, QRectF):
        """ QGraphicsView.drawForeground(QPainter, QRectF) """
        pass

    # real signature unknown; restored from __doc__
    def drawItems(self, QPainter, list_of_QGraphicsItem, list_of_QStyleOptionGraphicsItem):
        """ QGraphicsView.drawItems(QPainter, list-of-QGraphicsItem, list-of-QStyleOptionGraphicsItem) """
        pass

    # real signature unknown; restored from __doc__
    def dropEvent(self, QDropEvent):
        """ QGraphicsView.dropEvent(QDropEvent) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def ensureVisible(self, *__args):
        """
        QGraphicsView.ensureVisible(QRectF, int xMargin=50, int yMargin=50)
        QGraphicsView.ensureVisible(QGraphicsItem, int xMargin=50, int yMargin=50)
        QGraphicsView.ensureVisible(float, float, float, float, int xMargin=50, int yMargin=50)
        """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QGraphicsView.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def fitInView(self, *__args):
        """
        QGraphicsView.fitInView(QRectF, Qt.AspectRatioMode mode=Qt.IgnoreAspectRatio)
        QGraphicsView.fitInView(QGraphicsItem, Qt.AspectRatioMode mode=Qt.IgnoreAspectRatio)
        QGraphicsView.fitInView(float, float, float, float, Qt.AspectRatioMode mode=Qt.IgnoreAspectRatio)
        """
        pass

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QGraphicsView.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusNextPrevChild(self, bool):
        """ QGraphicsView.focusNextPrevChild(bool) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QGraphicsView.focusOutEvent(QFocusEvent) """
        pass

    def foregroundBrush(self):  # real signature unknown; restored from __doc__
        """ QGraphicsView.foregroundBrush() -> QBrush """
        return QBrush

    # real signature unknown; restored from __doc__
    def inputMethodEvent(self, QInputMethodEvent):
        """ QGraphicsView.inputMethodEvent(QInputMethodEvent) """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodQuery(self, Qt_InputMethodQuery):
        """ QGraphicsView.inputMethodQuery(Qt.InputMethodQuery) -> QVariant """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def invalidateScene(self, QRectF_rect=None, *args, **kwargs):
        """ QGraphicsView.invalidateScene(QRectF rect=QRectF(), QGraphicsScene.SceneLayers layers=QGraphicsScene.AllLayers) """
        pass

    def isInteractive(self):  # real signature unknown; restored from __doc__
        """ QGraphicsView.isInteractive() -> bool """
        return False

    def isTransformed(self):  # real signature unknown; restored from __doc__
        """ QGraphicsView.isTransformed() -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def itemAt(self, *__args):
        """
        QGraphicsView.itemAt(QPoint) -> QGraphicsItem
        QGraphicsView.itemAt(int, int) -> QGraphicsItem
        """
        return QGraphicsItem

    # real signature unknown; restored from __doc__ with multiple overloads
    def items(self, *__args):
        """
        QGraphicsView.items() -> list-of-QGraphicsItem
        QGraphicsView.items(QPoint) -> list-of-QGraphicsItem
        QGraphicsView.items(int, int) -> list-of-QGraphicsItem
        QGraphicsView.items(int, int, int, int, Qt.ItemSelectionMode mode=Qt.IntersectsItemShape) -> list-of-QGraphicsItem
        QGraphicsView.items(QRect, Qt.ItemSelectionMode mode=Qt.IntersectsItemShape) -> list-of-QGraphicsItem
        QGraphicsView.items(QPolygon, Qt.ItemSelectionMode mode=Qt.IntersectsItemShape) -> list-of-QGraphicsItem
        QGraphicsView.items(QPainterPath, Qt.ItemSelectionMode mode=Qt.IntersectsItemShape) -> list-of-QGraphicsItem
        """
        pass

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QGraphicsView.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def keyReleaseEvent(self, QKeyEvent):
        """ QGraphicsView.keyReleaseEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapFromScene(self, *__args):
        """
        QGraphicsView.mapFromScene(QPointF) -> QPoint
        QGraphicsView.mapFromScene(QRectF) -> QPolygon
        QGraphicsView.mapFromScene(QPolygonF) -> QPolygon
        QGraphicsView.mapFromScene(QPainterPath) -> QPainterPath
        QGraphicsView.mapFromScene(float, float) -> QPoint
        QGraphicsView.mapFromScene(float, float, float, float) -> QPolygon
        """
        return QPolygon or QPainterPath

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapToScene(self, *__args):
        """
        QGraphicsView.mapToScene(QPoint) -> QPointF
        QGraphicsView.mapToScene(QRect) -> QPolygonF
        QGraphicsView.mapToScene(QPolygon) -> QPolygonF
        QGraphicsView.mapToScene(QPainterPath) -> QPainterPath
        QGraphicsView.mapToScene(int, int) -> QPointF
        QGraphicsView.mapToScene(int, int, int, int) -> QPolygonF
        """
        return QPolygonF or QPainterPath

    def matrix(self):  # real signature unknown; restored from __doc__
        """ QGraphicsView.matrix() -> QMatrix """
        return QMatrix

    # real signature unknown; restored from __doc__
    def mouseDoubleClickEvent(self, QMouseEvent):
        """ QGraphicsView.mouseDoubleClickEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QGraphicsView.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QGraphicsView.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QGraphicsView.mouseReleaseEvent(QMouseEvent) """
        pass

    def OptimizationFlag(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def OptimizationFlags(self, *__args):
        """
        QGraphicsView.OptimizationFlags(QGraphicsView.OptimizationFlags)
        QGraphicsView.OptimizationFlags(int)
        QGraphicsView.OptimizationFlags()
        """
        pass

    # real signature unknown; restored from __doc__
    def optimizationFlags(self):
        """ QGraphicsView.optimizationFlags() -> QGraphicsView.OptimizationFlags """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QGraphicsView.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def render(self, QPainter, QRectF_target=None, *args, **kwargs):
        """ QGraphicsView.render(QPainter, QRectF target=QRectF(), QRect source=QRect(), Qt.AspectRatioMode mode=Qt.KeepAspectRatio) """
        pass

    def renderHints(self):  # real signature unknown; restored from __doc__
        """ QGraphicsView.renderHints() -> QPainter.RenderHints """
        pass

    # real signature unknown; restored from __doc__
    def resetCachedContent(self):
        """ QGraphicsView.resetCachedContent() """
        pass

    def resetMatrix(self):  # real signature unknown; restored from __doc__
        """ QGraphicsView.resetMatrix() """
        pass

    def resetTransform(self):  # real signature unknown; restored from __doc__
        """ QGraphicsView.resetTransform() """
        pass

    def resizeAnchor(self):  # real signature unknown; restored from __doc__
        """ QGraphicsView.resizeAnchor() -> QGraphicsView.ViewportAnchor """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QGraphicsView.resizeEvent(QResizeEvent) """
        pass

    def rotate(self, p_float):  # real signature unknown; restored from __doc__
        """ QGraphicsView.rotate(float) """
        pass

    # real signature unknown; restored from __doc__
    def rubberBandSelectionMode(self):
        """ QGraphicsView.rubberBandSelectionMode() -> Qt.ItemSelectionMode """
        pass

    # real signature unknown; restored from __doc__
    def scale(self, p_float, p_float_1):
        """ QGraphicsView.scale(float, float) """
        pass

    def scene(self):  # real signature unknown; restored from __doc__
        """ QGraphicsView.scene() -> QGraphicsScene """
        return QGraphicsScene

    def sceneRect(self):  # real signature unknown; restored from __doc__
        """ QGraphicsView.sceneRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def scrollContentsBy(self, p_int, p_int_1):
        """ QGraphicsView.scrollContentsBy(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setAlignment(self, Qt_Alignment):
        """ QGraphicsView.setAlignment(Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setBackgroundBrush(self, QBrush):
        """ QGraphicsView.setBackgroundBrush(QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def setCacheMode(self, QGraphicsView_CacheMode):
        """ QGraphicsView.setCacheMode(QGraphicsView.CacheMode) """
        pass

    # real signature unknown; restored from __doc__
    def setDragMode(self, QGraphicsView_DragMode):
        """ QGraphicsView.setDragMode(QGraphicsView.DragMode) """
        pass

    # real signature unknown; restored from __doc__
    def setForegroundBrush(self, QBrush):
        """ QGraphicsView.setForegroundBrush(QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def setInteractive(self, bool):
        """ QGraphicsView.setInteractive(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setMatrix(self, QMatrix, bool_combine=False):
        """ QGraphicsView.setMatrix(QMatrix, bool combine=False) """
        pass

    # real signature unknown; restored from __doc__
    def setOptimizationFlag(self, QGraphicsView_OptimizationFlag, bool_enabled=True):
        """ QGraphicsView.setOptimizationFlag(QGraphicsView.OptimizationFlag, bool enabled=True) """
        pass

    # real signature unknown; restored from __doc__
    def setOptimizationFlags(self, QGraphicsView_OptimizationFlags):
        """ QGraphicsView.setOptimizationFlags(QGraphicsView.OptimizationFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setRenderHint(self, QPainter_RenderHint, bool_on=True):
        """ QGraphicsView.setRenderHint(QPainter.RenderHint, bool on=True) """
        pass

    # real signature unknown; restored from __doc__
    def setRenderHints(self, QPainter_RenderHints):
        """ QGraphicsView.setRenderHints(QPainter.RenderHints) """
        pass

    # real signature unknown; restored from __doc__
    def setResizeAnchor(self, QGraphicsView_ViewportAnchor):
        """ QGraphicsView.setResizeAnchor(QGraphicsView.ViewportAnchor) """
        pass

    # real signature unknown; restored from __doc__
    def setRubberBandSelectionMode(self, Qt_ItemSelectionMode):
        """ QGraphicsView.setRubberBandSelectionMode(Qt.ItemSelectionMode) """
        pass

    # real signature unknown; restored from __doc__
    def setScene(self, QGraphicsScene):
        """ QGraphicsView.setScene(QGraphicsScene) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setSceneRect(self, *__args):
        """
        QGraphicsView.setSceneRect(QRectF)
        QGraphicsView.setSceneRect(float, float, float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def setTransform(self, QTransform, bool_combine=False):
        """ QGraphicsView.setTransform(QTransform, bool combine=False) """
        pass

    # real signature unknown; restored from __doc__
    def setTransformationAnchor(self, QGraphicsView_ViewportAnchor):
        """ QGraphicsView.setTransformationAnchor(QGraphicsView.ViewportAnchor) """
        pass

    # real signature unknown; restored from __doc__
    def setupViewport(self, QWidget):
        """ QGraphicsView.setupViewport(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setViewportUpdateMode(self, QGraphicsView_ViewportUpdateMode):
        """ QGraphicsView.setViewportUpdateMode(QGraphicsView.ViewportUpdateMode) """
        pass

    # real signature unknown; restored from __doc__
    def shear(self, p_float, p_float_1):
        """ QGraphicsView.shear(float, float) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QGraphicsView.showEvent(QShowEvent) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QGraphicsView.sizeHint() -> QSize """
        pass

    def transform(self):  # real signature unknown; restored from __doc__
        """ QGraphicsView.transform() -> QTransform """
        return QTransform

    # real signature unknown; restored from __doc__
    def transformationAnchor(self):
        """ QGraphicsView.transformationAnchor() -> QGraphicsView.ViewportAnchor """
        pass

    # real signature unknown; restored from __doc__
    def translate(self, p_float, p_float_1):
        """ QGraphicsView.translate(float, float) """
        pass

    # real signature unknown; restored from __doc__
    def updateScene(self, list_of_QRectF):
        """ QGraphicsView.updateScene(list-of-QRectF) """
        pass

    # real signature unknown; restored from __doc__
    def updateSceneRect(self, QRectF):
        """ QGraphicsView.updateSceneRect(QRectF) """
        pass

    def ViewportAnchor(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def viewportEvent(self, QEvent):
        """ QGraphicsView.viewportEvent(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def viewportTransform(self):
        """ QGraphicsView.viewportTransform() -> QTransform """
        return QTransform

    def ViewportUpdateMode(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def viewportUpdateMode(self):
        """ QGraphicsView.viewportUpdateMode() -> QGraphicsView.ViewportUpdateMode """
        pass

    # real signature unknown; restored from __doc__
    def wheelEvent(self, QWheelEvent):
        """ QGraphicsView.wheelEvent(QWheelEvent) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    AnchorUnderMouse = 2
    AnchorViewCenter = 1
    BoundingRectViewportUpdate = 4
    CacheBackground = 1
    CacheNone = 0
    DontAdjustForAntialiasing = 4
    DontClipPainter = 1
    DontSavePainterState = 2
    FullViewportUpdate = 0
    MinimalViewportUpdate = 1
    NoAnchor = 0
    NoDrag = 0
    NoViewportUpdate = 3
    RubberBandDrag = 2
    ScrollHandDrag = 1
    SmartViewportUpdate = 2


class QGridLayout(QLayout):

    """
    QGridLayout(QWidget)
    QGridLayout()
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def addItem(self, QLayoutItem, p_int=None, p_int_1=None, int_rowSpan=1, int_columnSpan=1, Qt_Alignment_alignment=0):
        """
        QGridLayout.addItem(QLayoutItem, int, int, int rowSpan=1, int columnSpan=1, Qt.Alignment alignment=0)
        QGridLayout.addItem(QLayoutItem)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def addLayout(self, QLayout, p_int, p_int_1, *__args):
        """
        QGridLayout.addLayout(QLayout, int, int, Qt.Alignment alignment=0)
        QGridLayout.addLayout(QLayout, int, int, int, int, Qt.Alignment alignment=0)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def addWidget(self, QWidget, p_int=None, p_int_1=None, *__args):
        """
        QGridLayout.addWidget(QWidget)
        QGridLayout.addWidget(QWidget, int, int, Qt.Alignment alignment=0)
        QGridLayout.addWidget(QWidget, int, int, int, int, Qt.Alignment alignment=0)
        """
        pass

    # real signature unknown; restored from __doc__
    def cellRect(self, p_int, p_int_1):
        """ QGridLayout.cellRect(int, int) -> QRect """
        pass

    def columnCount(self):  # real signature unknown; restored from __doc__
        """ QGridLayout.columnCount() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def columnMinimumWidth(self, p_int):
        """ QGridLayout.columnMinimumWidth(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def columnStretch(self, p_int):
        """ QGridLayout.columnStretch(int) -> int """
        return 0

    def count(self):  # real signature unknown; restored from __doc__
        """ QGridLayout.count() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def expandingDirections(self):
        """ QGridLayout.expandingDirections() -> Qt.Orientations """
        pass

    # real signature unknown; restored from __doc__
    def getItemPosition(self, p_int):
        """ QGridLayout.getItemPosition(int) -> (int, int, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def hasHeightForWidth(self):
        """ QGridLayout.hasHeightForWidth() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def heightForWidth(self, p_int):
        """ QGridLayout.heightForWidth(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def horizontalSpacing(self):
        """ QGridLayout.horizontalSpacing() -> int """
        return 0

    def invalidate(self):  # real signature unknown; restored from __doc__
        """ QGridLayout.invalidate() """
        pass

    def itemAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QGridLayout.itemAt(int) -> QLayoutItem """
        return QLayoutItem

    # real signature unknown; restored from __doc__
    def itemAtPosition(self, p_int, p_int_1):
        """ QGridLayout.itemAtPosition(int, int) -> QLayoutItem """
        return QLayoutItem

    def maximumSize(self):  # real signature unknown; restored from __doc__
        """ QGridLayout.maximumSize() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def minimumHeightForWidth(self, p_int):
        """ QGridLayout.minimumHeightForWidth(int) -> int """
        return 0

    def minimumSize(self):  # real signature unknown; restored from __doc__
        """ QGridLayout.minimumSize() -> QSize """
        pass

    def originCorner(self):  # real signature unknown; restored from __doc__
        """ QGridLayout.originCorner() -> Qt.Corner """
        pass

    def rowCount(self):  # real signature unknown; restored from __doc__
        """ QGridLayout.rowCount() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def rowMinimumHeight(self, p_int):
        """ QGridLayout.rowMinimumHeight(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def rowStretch(self, p_int):
        """ QGridLayout.rowStretch(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setColumnMinimumWidth(self, p_int, p_int_1):
        """ QGridLayout.setColumnMinimumWidth(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setColumnStretch(self, p_int, p_int_1):
        """ QGridLayout.setColumnStretch(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setDefaultPositioning(self, p_int, Qt_Orientation):
        """ QGridLayout.setDefaultPositioning(int, Qt.Orientation) """
        pass

    # real signature unknown; restored from __doc__
    def setGeometry(self, QRect):
        """ QGridLayout.setGeometry(QRect) """
        pass

    # real signature unknown; restored from __doc__
    def setHorizontalSpacing(self, p_int):
        """ QGridLayout.setHorizontalSpacing(int) """
        pass

    # real signature unknown; restored from __doc__
    def setOriginCorner(self, Qt_Corner):
        """ QGridLayout.setOriginCorner(Qt.Corner) """
        pass

    # real signature unknown; restored from __doc__
    def setRowMinimumHeight(self, p_int, p_int_1):
        """ QGridLayout.setRowMinimumHeight(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setRowStretch(self, p_int, p_int_1):
        """ QGridLayout.setRowStretch(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setSpacing(self, p_int):
        """ QGridLayout.setSpacing(int) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalSpacing(self, p_int):
        """ QGridLayout.setVerticalSpacing(int) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QGridLayout.sizeHint() -> QSize """
        pass

    def spacing(self):  # real signature unknown; restored from __doc__
        """ QGridLayout.spacing() -> int """
        return 0

    def takeAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QGridLayout.takeAt(int) -> QLayoutItem """
        return QLayoutItem

    def verticalSpacing(self):  # real signature unknown; restored from __doc__
        """ QGridLayout.verticalSpacing() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QWidget=None):
        pass


class QGroupBox(QWidget):

    """
    QGroupBox(QWidget parent=None)
    QGroupBox(QString, QWidget parent=None)
    """

    def alignment(self):  # real signature unknown; restored from __doc__
        """ QGroupBox.alignment() -> Qt.Alignment """
        pass

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QGroupBox.changeEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def childEvent(self, QChildEvent):
        """ QGroupBox.childEvent(QChildEvent) """
        pass

    def clicked(self, *args, **kwargs):  # real signature unknown
        """
        QGroupBox.clicked[bool] [signal]
        QGroupBox.clicked[] [signal]
        """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QGroupBox.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QGroupBox.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionGroupBox):
        """ QGroupBox.initStyleOption(QStyleOptionGroupBox) """
        pass

    def isCheckable(self):  # real signature unknown; restored from __doc__
        """ QGroupBox.isCheckable() -> bool """
        return False

    def isChecked(self):  # real signature unknown; restored from __doc__
        """ QGroupBox.isChecked() -> bool """
        return False

    def isFlat(self):  # real signature unknown; restored from __doc__
        """ QGroupBox.isFlat() -> bool """
        return False

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QGroupBox.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QGroupBox.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QGroupBox.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QGroupBox.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QGroupBox.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QGroupBox.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setAlignment(self, p_int):
        """ QGroupBox.setAlignment(int) """
        pass

    # real signature unknown; restored from __doc__
    def setCheckable(self, bool):
        """ QGroupBox.setCheckable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setChecked(self, bool):
        """ QGroupBox.setChecked(bool) """
        pass

    def setFlat(self, bool):  # real signature unknown; restored from __doc__
        """ QGroupBox.setFlat(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setTitle(self, QString):
        """ QGroupBox.setTitle(QString) """
        pass

    def title(self):  # real signature unknown; restored from __doc__
        """ QGroupBox.title() -> QString """
        pass

    def toggled(self, *args, **kwargs):  # real signature unknown
        """ QGroupBox.toggled[bool] [signal] """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QHBoxLayout(QBoxLayout):

    """
    QHBoxLayout()
    QHBoxLayout(QWidget)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def __init__(self, QWidget=None):
        pass


class QHeaderView(QAbstractItemView):

    """ QHeaderView(Qt.Orientation, QWidget parent=None) """
    # real signature unknown; restored from __doc__

    def cascadingSectionResizes(self):
        """ QHeaderView.cascadingSectionResizes() -> bool """
        return False

    def count(self):  # real signature unknown; restored from __doc__
        """ QHeaderView.count() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def currentChanged(self, QModelIndex, QModelIndex_1):
        """ QHeaderView.currentChanged(QModelIndex, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def dataChanged(self, QModelIndex, QModelIndex_1):
        """ QHeaderView.dataChanged(QModelIndex, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def defaultAlignment(self):
        """ QHeaderView.defaultAlignment() -> Qt.Alignment """
        pass

    # real signature unknown; restored from __doc__
    def defaultSectionSize(self):
        """ QHeaderView.defaultSectionSize() -> int """
        return 0

    def doItemsLayout(self):  # real signature unknown; restored from __doc__
        """ QHeaderView.doItemsLayout() """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QHeaderView.event(QEvent) -> bool """
        return False

    def geometriesChanged(self, *args, **kwargs):  # real signature unknown
        """ QHeaderView.geometriesChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def headerDataChanged(self, Qt_Orientation, p_int, p_int_1):
        """ QHeaderView.headerDataChanged(Qt.Orientation, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def hiddenSectionCount(self):
        """ QHeaderView.hiddenSectionCount() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def hideSection(self, p_int):
        """ QHeaderView.hideSection(int) """
        pass

    # real signature unknown; restored from __doc__
    def highlightSections(self):
        """ QHeaderView.highlightSections() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def horizontalOffset(self):
        """ QHeaderView.horizontalOffset() -> int """
        return 0

    def indexAt(self, QPoint):  # real signature unknown; restored from __doc__
        """ QHeaderView.indexAt(QPoint) -> QModelIndex """
        pass

    def initialize(self):  # real signature unknown; restored from __doc__
        """ QHeaderView.initialize() """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def initializeSections(self, p_int=None, p_int_1=None):
        """
        QHeaderView.initializeSections()
        QHeaderView.initializeSections(int, int)
        """
        pass

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionHeader):
        """ QHeaderView.initStyleOption(QStyleOptionHeader) """
        pass

    def isClickable(self):  # real signature unknown; restored from __doc__
        """ QHeaderView.isClickable() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isIndexHidden(self, QModelIndex):
        """ QHeaderView.isIndexHidden(QModelIndex) -> bool """
        return False

    def isMovable(self):  # real signature unknown; restored from __doc__
        """ QHeaderView.isMovable() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isSectionHidden(self, p_int):
        """ QHeaderView.isSectionHidden(int) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isSortIndicatorShown(self):
        """ QHeaderView.isSortIndicatorShown() -> bool """
        return False

    def length(self):  # real signature unknown; restored from __doc__
        """ QHeaderView.length() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def logicalIndex(self, p_int):
        """ QHeaderView.logicalIndex(int) -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def logicalIndexAt(self, *__args):
        """
        QHeaderView.logicalIndexAt(int) -> int
        QHeaderView.logicalIndexAt(int, int) -> int
        QHeaderView.logicalIndexAt(QPoint) -> int
        """
        return 0

    # real signature unknown; restored from __doc__
    def minimumSectionSize(self):
        """ QHeaderView.minimumSectionSize() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def mouseDoubleClickEvent(self, QMouseEvent):
        """ QHeaderView.mouseDoubleClickEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QHeaderView.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QHeaderView.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QHeaderView.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def moveCursor(self, QAbstractItemView_CursorAction, Qt_KeyboardModifiers):
        """ QHeaderView.moveCursor(QAbstractItemView.CursorAction, Qt.KeyboardModifiers) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def moveSection(self, p_int, p_int_1):
        """ QHeaderView.moveSection(int, int) """
        pass

    def offset(self):  # real signature unknown; restored from __doc__
        """ QHeaderView.offset() -> int """
        return 0

    def orientation(self):  # real signature unknown; restored from __doc__
        """ QHeaderView.orientation() -> Qt.Orientation """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QHeaderView.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintSection(self, QPainter, QRect, p_int):
        """ QHeaderView.paintSection(QPainter, QRect, int) """
        pass

    def reset(self):  # real signature unknown; restored from __doc__
        """ QHeaderView.reset() """
        pass

    def ResizeMode(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def resizeMode(self, p_int):
        """ QHeaderView.resizeMode(int) -> QHeaderView.ResizeMode """
        pass

    # real signature unknown; restored from __doc__
    def resizeSection(self, p_int, p_int_1):
        """ QHeaderView.resizeSection(int, int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def resizeSections(self, QHeaderView_ResizeMode=None):
        """
        QHeaderView.resizeSections()
        QHeaderView.resizeSections(QHeaderView.ResizeMode)
        """
        pass

    # real signature unknown; restored from __doc__
    def restoreState(self, QByteArray):
        """ QHeaderView.restoreState(QByteArray) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def rowsInserted(self, QModelIndex, p_int, p_int_1):
        """ QHeaderView.rowsInserted(QModelIndex, int, int) """
        pass

    def saveState(self):  # real signature unknown; restored from __doc__
        """ QHeaderView.saveState() -> QByteArray """
        pass

    # real signature unknown; restored from __doc__
    def scrollContentsBy(self, p_int, p_int_1):
        """ QHeaderView.scrollContentsBy(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def scrollTo(self, QModelIndex, QAbstractItemView_ScrollHint):
        """ QHeaderView.scrollTo(QModelIndex, QAbstractItemView.ScrollHint) """
        pass

    def sectionAutoResize(self, *args, **kwargs):  # real signature unknown
        """ QHeaderView.sectionAutoResize[int, QHeaderView.ResizeMode] [signal] """
        pass

    def sectionClicked(self, *args, **kwargs):  # real signature unknown
        """ QHeaderView.sectionClicked[int] [signal] """
        pass

    def sectionCountChanged(self, *args, **kwargs):  # real signature unknown
        """ QHeaderView.sectionCountChanged[int, int] [signal] """
        pass

    def sectionDoubleClicked(self, *args, **kwargs):  # real signature unknown
        """ QHeaderView.sectionDoubleClicked[int] [signal] """
        pass

    def sectionEntered(self, *args, **kwargs):  # real signature unknown
        """ QHeaderView.sectionEntered[int] [signal] """
        pass

    # real signature unknown
    def sectionHandleDoubleClicked(self, *args, **kwargs):
        """ QHeaderView.sectionHandleDoubleClicked[int] [signal] """
        pass

    def sectionMoved(self, *args, **kwargs):  # real signature unknown
        """ QHeaderView.sectionMoved[int, int, int] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def sectionPosition(self, p_int):
        """ QHeaderView.sectionPosition(int) -> int """
        return 0

    def sectionPressed(self, *args, **kwargs):  # real signature unknown
        """ QHeaderView.sectionPressed[int] [signal] """
        pass

    def sectionResized(self, *args, **kwargs):  # real signature unknown
        """ QHeaderView.sectionResized[int, int, int] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def sectionsAboutToBeRemoved(self, QModelIndex, p_int, p_int_1):
        """ QHeaderView.sectionsAboutToBeRemoved(QModelIndex, int, int) """
        pass

    def sectionsHidden(self):  # real signature unknown; restored from __doc__
        """ QHeaderView.sectionsHidden() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def sectionsInserted(self, QModelIndex, p_int, p_int_1):
        """ QHeaderView.sectionsInserted(QModelIndex, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def sectionSize(self, p_int):
        """ QHeaderView.sectionSize(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def sectionSizeFromContents(self, p_int):
        """ QHeaderView.sectionSizeFromContents(int) -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def sectionSizeHint(self, p_int):
        """ QHeaderView.sectionSizeHint(int) -> int """
        return 0

    def sectionsMoved(self):  # real signature unknown; restored from __doc__
        """ QHeaderView.sectionsMoved() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def sectionViewportPosition(self, p_int):
        """ QHeaderView.sectionViewportPosition(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setCascadingSectionResizes(self, bool):
        """ QHeaderView.setCascadingSectionResizes(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setClickable(self, bool):
        """ QHeaderView.setClickable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setDefaultAlignment(self, Qt_Alignment):
        """ QHeaderView.setDefaultAlignment(Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setDefaultSectionSize(self, p_int):
        """ QHeaderView.setDefaultSectionSize(int) """
        pass

    # real signature unknown; restored from __doc__
    def setHighlightSections(self, bool):
        """ QHeaderView.setHighlightSections(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setMinimumSectionSize(self, p_int):
        """ QHeaderView.setMinimumSectionSize(int) """
        pass

    # real signature unknown; restored from __doc__
    def setModel(self, QAbstractItemModel):
        """ QHeaderView.setModel(QAbstractItemModel) """
        pass

    # real signature unknown; restored from __doc__
    def setMovable(self, bool):
        """ QHeaderView.setMovable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setOffset(self, p_int):
        """ QHeaderView.setOffset(int) """
        pass

    # real signature unknown; restored from __doc__
    def setOffsetToLastSection(self):
        """ QHeaderView.setOffsetToLastSection() """
        pass

    # real signature unknown; restored from __doc__
    def setOffsetToSectionPosition(self, p_int):
        """ QHeaderView.setOffsetToSectionPosition(int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setResizeMode(self, *__args):
        """
        QHeaderView.setResizeMode(QHeaderView.ResizeMode)
        QHeaderView.setResizeMode(int, QHeaderView.ResizeMode)
        """
        pass

    # real signature unknown; restored from __doc__
    def setSectionHidden(self, p_int, bool):
        """ QHeaderView.setSectionHidden(int, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSelection(self, QRect, QItemSelectionModel_SelectionFlags):
        """ QHeaderView.setSelection(QRect, QItemSelectionModel.SelectionFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setSortIndicator(self, p_int, Qt_SortOrder):
        """ QHeaderView.setSortIndicator(int, Qt.SortOrder) """
        pass

    # real signature unknown; restored from __doc__
    def setSortIndicatorShown(self, bool):
        """ QHeaderView.setSortIndicatorShown(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setStretchLastSection(self, bool):
        """ QHeaderView.setStretchLastSection(bool) """
        pass

    # real signature unknown; restored from __doc__
    def showSection(self, p_int):
        """ QHeaderView.showSection(int) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QHeaderView.sizeHint() -> QSize """
        pass

    def sortIndicatorChanged(self, *args, **kwargs):  # real signature unknown
        """ QHeaderView.sortIndicatorChanged[int, Qt.SortOrder] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def sortIndicatorOrder(self):
        """ QHeaderView.sortIndicatorOrder() -> Qt.SortOrder """
        pass

    # real signature unknown; restored from __doc__
    def sortIndicatorSection(self):
        """ QHeaderView.sortIndicatorSection() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def stretchLastSection(self):
        """ QHeaderView.stretchLastSection() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def stretchSectionCount(self):
        """ QHeaderView.stretchSectionCount() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def swapSections(self, p_int, p_int_1):
        """ QHeaderView.swapSections(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def updateGeometries(self):
        """ QHeaderView.updateGeometries() """
        pass

    # real signature unknown; restored from __doc__
    def updateSection(self, p_int):
        """ QHeaderView.updateSection(int) """
        pass

    def verticalOffset(self):  # real signature unknown; restored from __doc__
        """ QHeaderView.verticalOffset() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def viewportEvent(self, QEvent):
        """ QHeaderView.viewportEvent(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def visualIndex(self, p_int):
        """ QHeaderView.visualIndex(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def visualIndexAt(self, p_int):
        """ QHeaderView.visualIndexAt(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def visualRect(self, QModelIndex):
        """ QHeaderView.visualRect(QModelIndex) -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def visualRegionForSelection(self, QItemSelection):
        """ QHeaderView.visualRegionForSelection(QItemSelection) -> QRegion """
        return QRegion

    # real signature unknown; restored from __doc__
    def __init__(self, Qt_Orientation, QWidget_parent=None):
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass

    Custom = 2
    Fixed = 2
    Interactive = 0
    ResizeToContents = 3
    Stretch = 1


class QHelpEvent(__PyQt4_QtCore.QEvent):

    """
    QHelpEvent(QEvent.Type, QPoint, QPoint)
    QHelpEvent(QHelpEvent)
    """

    def globalPos(self):  # real signature unknown; restored from __doc__
        """ QHelpEvent.globalPos() -> QPoint """
        pass

    def globalX(self):  # real signature unknown; restored from __doc__
        """ QHelpEvent.globalX() -> int """
        return 0

    def globalY(self):  # real signature unknown; restored from __doc__
        """ QHelpEvent.globalY() -> int """
        return 0

    def pos(self):  # real signature unknown; restored from __doc__
        """ QHelpEvent.pos() -> QPoint """
        pass

    def x(self):  # real signature unknown; restored from __doc__
        """ QHelpEvent.x() -> int """
        return 0

    def y(self):  # real signature unknown; restored from __doc__
        """ QHelpEvent.y() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QHideEvent(__PyQt4_QtCore.QEvent):

    """
    QHideEvent()
    QHideEvent(QHideEvent)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def __init__(self, QHideEvent=None):
        pass


class QHoverEvent(__PyQt4_QtCore.QEvent):

    """
    QHoverEvent(QEvent.Type, QPoint, QPoint)
    QHoverEvent(QHoverEvent)
    """

    def oldPos(self):  # real signature unknown; restored from __doc__
        """ QHoverEvent.oldPos() -> QPoint """
        pass

    def pos(self):  # real signature unknown; restored from __doc__
        """ QHoverEvent.pos() -> QPoint """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QIcon():  # skipped bases: <type 'sip.wrapper'>

    """
    QIcon()
    QIcon(QPixmap)
    QIcon(QIcon)
    QIcon(QString)
    QIcon(QIconEngine)
    QIcon(QIconEngineV2)
    QIcon(QVariant)
    """
    # real signature unknown; restored from __doc__

    def actualSize(self, QSize, QIcon_Mode_mode=None, QIcon_State_state=None):
        """ QIcon.actualSize(QSize, QIcon.Mode mode=QIcon.Normal, QIcon.State state=QIcon.Off) -> QSize """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def addFile(self, QString, QSize_size=None, *args, **kwargs):
        """ QIcon.addFile(QString, QSize size=QSize(), QIcon.Mode mode=QIcon.Normal, QIcon.State state=QIcon.Off) """
        pass

    # real signature unknown; restored from __doc__
    def addPixmap(self, QPixmap, QIcon_Mode_mode=None, QIcon_State_state=None):
        """ QIcon.addPixmap(QPixmap, QIcon.Mode mode=QIcon.Normal, QIcon.State state=QIcon.Off) """
        pass

    # real signature unknown; restored from __doc__
    def availableSizes(self, QIcon_Mode_mode=None, QIcon_State_state=None):
        """ QIcon.availableSizes(QIcon.Mode mode=QIcon.Normal, QIcon.State state=QIcon.Off) -> list-of-QSize """
        pass

    def cacheKey(self):  # real signature unknown; restored from __doc__
        """ QIcon.cacheKey() -> int """
        return 0

    # real signature unknown; NOTE: unreliably restored from __doc__
    def fromTheme(self, QString, QIcon_fallback=None, *args, **kwargs):
        """ QIcon.fromTheme(QString, QIcon fallback=QIcon()) -> QIcon """
        pass

    # real signature unknown; restored from __doc__
    def hasThemeIcon(self, QString):
        """ QIcon.hasThemeIcon(QString) -> bool """
        return False

    def isDetached(self):  # real signature unknown; restored from __doc__
        """ QIcon.isDetached() -> bool """
        return False

    def isNull(self):  # real signature unknown; restored from __doc__
        """ QIcon.isNull() -> bool """
        return False

    def Mode(self, *args, **kwargs):  # real signature unknown
        pass

    def name(self):  # real signature unknown; restored from __doc__
        """ QIcon.name() -> QString """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def paint(self, QPainter, *__args):
        """
        QIcon.paint(QPainter, QRect, Qt.Alignment alignment=Qt.AlignCenter, QIcon.Mode mode=QIcon.Normal, QIcon.State state=QIcon.Off)
        QIcon.paint(QPainter, int, int, int, int, Qt.Alignment alignment=Qt.AlignCenter, QIcon.Mode mode=QIcon.Normal, QIcon.State state=QIcon.Off)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def pixmap(self, *__args):
        """
        QIcon.pixmap(QSize, QIcon.Mode mode=QIcon.Normal, QIcon.State state=QIcon.Off) -> QPixmap
        QIcon.pixmap(int, int, QIcon.Mode mode=QIcon.Normal, QIcon.State state=QIcon.Off) -> QPixmap
        QIcon.pixmap(int, QIcon.Mode mode=QIcon.Normal, QIcon.State state=QIcon.Off) -> QPixmap
        """
        return QPixmap

    def serialNumber(self):  # real signature unknown; restored from __doc__
        """ QIcon.serialNumber() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setThemeName(self, QString):
        """ QIcon.setThemeName(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setThemeSearchPaths(self, QStringList):
        """ QIcon.setThemeSearchPaths(QStringList) """
        pass

    def State(self, *args, **kwargs):  # real signature unknown
        pass

    def themeName(self):  # real signature unknown; restored from __doc__
        """ QIcon.themeName() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def themeSearchPaths(self):
        """ QIcon.themeSearchPaths() -> QStringList """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    __weakref__ = property(lambda self: object())  # default

    Active = 2
    Disabled = 1
    Normal = 0
    Off = 1
    On = 0
    Selected = 3


class QIconDragEvent(__PyQt4_QtCore.QEvent):

    """
    QIconDragEvent()
    QIconDragEvent(QIconDragEvent)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def __init__(self, QIconDragEvent=None):
        pass


class QIconEngine():  # skipped bases: <type 'sip.wrapper'>

    """
    QIconEngine()
    QIconEngine(QIconEngine)
    """
    # real signature unknown; restored from __doc__

    def actualSize(self, QSize, QIcon_Mode, QIcon_State):
        """ QIconEngine.actualSize(QSize, QIcon.Mode, QIcon.State) -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def addFile(self, QString, QSize, QIcon_Mode, QIcon_State):
        """ QIconEngine.addFile(QString, QSize, QIcon.Mode, QIcon.State) """
        pass

    # real signature unknown; restored from __doc__
    def addPixmap(self, QPixmap, QIcon_Mode, QIcon_State):
        """ QIconEngine.addPixmap(QPixmap, QIcon.Mode, QIcon.State) """
        pass

    # real signature unknown; restored from __doc__
    def paint(self, QPainter, QRect, QIcon_Mode, QIcon_State):
        """ QIconEngine.paint(QPainter, QRect, QIcon.Mode, QIcon.State) """
        pass

    # real signature unknown; restored from __doc__
    def pixmap(self, QSize, QIcon_Mode, QIcon_State):
        """ QIconEngine.pixmap(QSize, QIcon.Mode, QIcon.State) -> QPixmap """
        return QPixmap

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QIconEngine=None):
        pass

    __weakref__ = property(lambda self: object())  # default


class QIconEngineV2(QIconEngine):

    """
    QIconEngineV2()
    QIconEngineV2(QIconEngineV2)
    """
    # real signature unknown; restored from __doc__

    def availableSizes(self, QIcon_Mode_mode=None, QIcon_State_state=None):
        """ QIconEngineV2.availableSizes(QIcon.Mode mode=QIcon.Normal, QIcon.State state=QIcon.Off) -> list-of-QSize """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def AvailableSizesArgument(self, QIconEngineV2_AvailableSizesArgument=None):
        """
        QIconEngineV2.AvailableSizesArgument()
        QIconEngineV2.AvailableSizesArgument(QIconEngineV2.AvailableSizesArgument)
        """
        pass

    def clone(self):  # real signature unknown; restored from __doc__
        """ QIconEngineV2.clone() -> QIconEngineV2 """
        return QIconEngineV2

    def IconEngineHook(self, *args, **kwargs):  # real signature unknown
        pass

    def iconName(self):  # real signature unknown; restored from __doc__
        """ QIconEngineV2.iconName() -> QString """
        pass

    def key(self):  # real signature unknown; restored from __doc__
        """ QIconEngineV2.key() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def read(self, QDataStream):
        """ QIconEngineV2.read(QDataStream) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def write(self, QDataStream):
        """ QIconEngineV2.write(QDataStream) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QIconEngineV2=None):
        pass

    AvailableSizesHook = 1
    IconNameHook = 2


class QImage(QPaintDevice):

    """
    QImage()
    QImage(QSize, QImage.Format)
    QImage(int, int, QImage.Format)
    QImage(str, int, int, QImage.Format)
    QImage(sip.voidptr, int, int, QImage.Format)
    QImage(str, int, int, int, QImage.Format)
    QImage(sip.voidptr, int, int, int, QImage.Format)
    QImage(list-of-str)
    QImage(QString, str format=None)
    QImage(QImage)
    QImage(QVariant)
    """

    def allGray(self):  # real signature unknown; restored from __doc__
        """ QImage.allGray() -> bool """
        return False

    def alphaChannel(self):  # real signature unknown; restored from __doc__
        """ QImage.alphaChannel() -> QImage """
        return QImage

    def bitPlaneCount(self):  # real signature unknown; restored from __doc__
        """ QImage.bitPlaneCount() -> int """
        return 0

    def bits(self):  # real signature unknown; restored from __doc__
        """ QImage.bits() -> sip.voidptr """
        pass

    def byteCount(self):  # real signature unknown; restored from __doc__
        """ QImage.byteCount() -> int """
        return 0

    def bytesPerLine(self):  # real signature unknown; restored from __doc__
        """ QImage.bytesPerLine() -> int """
        return 0

    def cacheKey(self):  # real signature unknown; restored from __doc__
        """ QImage.cacheKey() -> int """
        return 0

    def color(self, p_int):  # real signature unknown; restored from __doc__
        """ QImage.color(int) -> int """
        return 0

    def colorCount(self):  # real signature unknown; restored from __doc__
        """ QImage.colorCount() -> int """
        return 0

    def colorTable(self):  # real signature unknown; restored from __doc__
        """ QImage.colorTable() -> list-of-int """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def convertToFormat(self, QImage_Format, *__args):
        """
        QImage.convertToFormat(QImage.Format, Qt.ImageConversionFlags flags=Qt.AutoColor) -> QImage
        QImage.convertToFormat(QImage.Format, list-of-int, Qt.ImageConversionFlags flags=Qt.AutoColor) -> QImage
        """
        return QImage

    # real signature unknown; restored from __doc__ with multiple overloads
    def copy(self, *__args):
        """
        QImage.copy(QRect rect=QRect()) -> QImage
        QImage.copy(int, int, int, int) -> QImage
        """
        return QImage

    # real signature unknown; restored from __doc__
    def createAlphaMask(self, Qt_ImageConversionFlags_flags=None):
        """ QImage.createAlphaMask(Qt.ImageConversionFlags flags=Qt.AutoColor) -> QImage """
        return QImage

    # real signature unknown; restored from __doc__
    def createHeuristicMask(self, bool_clipTight=True):
        """ QImage.createHeuristicMask(bool clipTight=True) -> QImage """
        return QImage

    # real signature unknown; restored from __doc__
    def createMaskFromColor(self, p_int, Qt_MaskMode_mode=None):
        """ QImage.createMaskFromColor(int, Qt.MaskMode mode=Qt.MaskInColor) -> QImage """
        return QImage

    def depth(self):  # real signature unknown; restored from __doc__
        """ QImage.depth() -> int """
        return 0

    def detach(self):  # real signature unknown; restored from __doc__
        """ QImage.detach() """
        pass

    def devType(self):  # real signature unknown; restored from __doc__
        """ QImage.devType() -> int """
        return 0

    def dotsPerMeterX(self):  # real signature unknown; restored from __doc__
        """ QImage.dotsPerMeterX() -> int """
        return 0

    def dotsPerMeterY(self):  # real signature unknown; restored from __doc__
        """ QImage.dotsPerMeterY() -> int """
        return 0

    def fill(self, p_int):  # real signature unknown; restored from __doc__
        """ QImage.fill(int) """
        pass

    def Format(self, *args, **kwargs):  # real signature unknown
        pass

    def format(self):  # real signature unknown; restored from __doc__
        """ QImage.format() -> QImage.Format """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def fromData(self, *__args):
        """
        QImage.fromData(str, str format=None) -> QImage
        QImage.fromData(QByteArray, str format=None) -> QImage
        """
        return QImage

    def hasAlphaChannel(self):  # real signature unknown; restored from __doc__
        """ QImage.hasAlphaChannel() -> bool """
        return False

    def height(self):  # real signature unknown; restored from __doc__
        """ QImage.height() -> int """
        return 0

    def InvertMode(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def invertPixels(self, QImage_InvertMode_mode=None):
        """ QImage.invertPixels(QImage.InvertMode mode=QImage.InvertRgb) """
        pass

    def isDetached(self):  # real signature unknown; restored from __doc__
        """ QImage.isDetached() -> bool """
        return False

    def isGrayscale(self):  # real signature unknown; restored from __doc__
        """ QImage.isGrayscale() -> bool """
        return False

    def isNull(self):  # real signature unknown; restored from __doc__
        """ QImage.isNull() -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def load(self, *__args):
        """
        QImage.load(QIODevice, str) -> bool
        QImage.load(QString, str format=None) -> bool
        """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def loadFromData(self, *__args):
        """
        QImage.loadFromData(str, str format=None) -> bool
        QImage.loadFromData(QByteArray, str format=None) -> bool
        """
        return False

    # real signature unknown; restored from __doc__
    def metric(self, QPaintDevice_PaintDeviceMetric):
        """ QImage.metric(QPaintDevice.PaintDeviceMetric) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def mirrored(self, bool_horizontal=False, bool_vertical=True):
        """ QImage.mirrored(bool horizontal=False, bool vertical=True) -> QImage """
        return QImage

    def numBytes(self):  # real signature unknown; restored from __doc__
        """ QImage.numBytes() -> int """
        return 0

    def numColors(self):  # real signature unknown; restored from __doc__
        """ QImage.numColors() -> int """
        return 0

    def offset(self):  # real signature unknown; restored from __doc__
        """ QImage.offset() -> QPoint """
        pass

    def paintEngine(self):  # real signature unknown; restored from __doc__
        """ QImage.paintEngine() -> QPaintEngine """
        return QPaintEngine

    # real signature unknown; restored from __doc__ with multiple overloads
    def pixel(self, *__args):
        """
        QImage.pixel(QPoint) -> int
        QImage.pixel(int, int) -> int
        """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def pixelIndex(self, *__args):
        """
        QImage.pixelIndex(QPoint) -> int
        QImage.pixelIndex(int, int) -> int
        """
        return 0

    def rect(self):  # real signature unknown; restored from __doc__
        """ QImage.rect() -> QRect """
        pass

    def rgbSwapped(self):  # real signature unknown; restored from __doc__
        """ QImage.rgbSwapped() -> QImage """
        return QImage

    # real signature unknown; restored from __doc__ with multiple overloads
    def save(self, *__args):
        """
        QImage.save(QString, str format=None, int quality=-1) -> bool
        QImage.save(QIODevice, str format=None, int quality=-1) -> bool
        """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def scaled(self, *__args):
        """
        QImage.scaled(int, int, Qt.AspectRatioMode aspectRatioMode=Qt.IgnoreAspectRatio, Qt.TransformationMode transformMode=Qt.FastTransformation) -> QImage
        QImage.scaled(QSize, Qt.AspectRatioMode aspectRatioMode=Qt.IgnoreAspectRatio, Qt.TransformationMode transformMode=Qt.FastTransformation) -> QImage
        """
        return QImage

    # real signature unknown; restored from __doc__
    def scaledToHeight(self, p_int, Qt_TransformationMode_mode=None):
        """ QImage.scaledToHeight(int, Qt.TransformationMode mode=Qt.FastTransformation) -> QImage """
        return QImage

    # real signature unknown; restored from __doc__
    def scaledToWidth(self, p_int, Qt_TransformationMode_mode=None):
        """ QImage.scaledToWidth(int, Qt.TransformationMode mode=Qt.FastTransformation) -> QImage """
        return QImage

    def scanLine(self, p_int):  # real signature unknown; restored from __doc__
        """ QImage.scanLine(int) -> sip.voidptr """
        pass

    def serialNumber(self):  # real signature unknown; restored from __doc__
        """ QImage.serialNumber() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setAlphaChannel(self, QImage):
        """ QImage.setAlphaChannel(QImage) """
        pass

    # real signature unknown; restored from __doc__
    def setColor(self, p_int, p_int_1):
        """ QImage.setColor(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setColorCount(self, p_int):
        """ QImage.setColorCount(int) """
        pass

    # real signature unknown; restored from __doc__
    def setColorTable(self, list_of_int):
        """ QImage.setColorTable(list-of-int) """
        pass

    # real signature unknown; restored from __doc__
    def setDotsPerMeterX(self, p_int):
        """ QImage.setDotsPerMeterX(int) """
        pass

    # real signature unknown; restored from __doc__
    def setDotsPerMeterY(self, p_int):
        """ QImage.setDotsPerMeterY(int) """
        pass

    # real signature unknown; restored from __doc__
    def setNumColors(self, p_int):
        """ QImage.setNumColors(int) """
        pass

    # real signature unknown; restored from __doc__
    def setOffset(self, QPoint):
        """ QImage.setOffset(QPoint) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setPixel(self, *__args):
        """
        QImage.setPixel(QPoint, int)
        QImage.setPixel(int, int, int)
        """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, QString, QString_1):
        """ QImage.setText(QString, QString) """
        pass

    def size(self):  # real signature unknown; restored from __doc__
        """ QImage.size() -> QSize """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def text(self, QString_key=None, *args, **kwargs):
        """ QImage.text(QString key=QString()) -> QString """
        pass

    def textKeys(self):  # real signature unknown; restored from __doc__
        """ QImage.textKeys() -> QStringList """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def transformed(self, *__args):
        """
        QImage.transformed(QMatrix, Qt.TransformationMode mode=Qt.FastTransformation) -> QImage
        QImage.transformed(QTransform, Qt.TransformationMode mode=Qt.FastTransformation) -> QImage
        """
        return QImage

    # real signature unknown; restored from __doc__ with multiple overloads
    def trueMatrix(self, *__args):
        """
        QImage.trueMatrix(QMatrix, int, int) -> QMatrix
        QImage.trueMatrix(QTransform, int, int) -> QTransform
        """
        return QMatrix or QTransform

    # real signature unknown; restored from __doc__ with multiple overloads
    def valid(self, *__args):
        """
        QImage.valid(QPoint) -> bool
        QImage.valid(int, int) -> bool
        """
        return False

    def width(self):  # real signature unknown; restored from __doc__
        """ QImage.width() -> int """
        return 0

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    Format_ARGB32 = 5
    Format_ARGB32_Premultiplied = 6
    Format_ARGB4444_Premultiplied = 15
    Format_ARGB6666_Premultiplied = 10
    Format_ARGB8555_Premultiplied = 12
    Format_ARGB8565_Premultiplied = 8
    Format_Indexed8 = 3
    Format_Invalid = 0
    Format_Mono = 1
    Format_MonoLSB = 2
    Format_RGB16 = 7
    Format_RGB32 = 4
    Format_RGB444 = 14
    Format_RGB555 = 11
    Format_RGB666 = 9
    Format_RGB888 = 13
    InvertRgb = 0
    InvertRgba = 1


class QImageIOHandler():  # skipped bases: <type 'sip.simplewrapper'>

    """ QImageIOHandler() """

    def canRead(self):  # real signature unknown; restored from __doc__
        """ QImageIOHandler.canRead() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def currentImageNumber(self):
        """ QImageIOHandler.currentImageNumber() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def currentImageRect(self):
        """ QImageIOHandler.currentImageRect() -> QRect """
        pass

    def device(self):  # real signature unknown; restored from __doc__
        """ QImageIOHandler.device() -> QIODevice """
        pass

    def format(self):  # real signature unknown; restored from __doc__
        """ QImageIOHandler.format() -> QByteArray """
        pass

    def imageCount(self):  # real signature unknown; restored from __doc__
        """ QImageIOHandler.imageCount() -> int """
        return 0

    def ImageOption(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def jumpToImage(self, p_int):
        """ QImageIOHandler.jumpToImage(int) -> bool """
        return False

    def jumpToNextImage(self):  # real signature unknown; restored from __doc__
        """ QImageIOHandler.jumpToNextImage() -> bool """
        return False

    def loopCount(self):  # real signature unknown; restored from __doc__
        """ QImageIOHandler.loopCount() -> int """
        return 0

    def name(self):  # real signature unknown; restored from __doc__
        """ QImageIOHandler.name() -> QByteArray """
        pass

    def nextImageDelay(self):  # real signature unknown; restored from __doc__
        """ QImageIOHandler.nextImageDelay() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def option(self, QImageIOHandler_ImageOption):
        """ QImageIOHandler.option(QImageIOHandler.ImageOption) -> QVariant """
        pass

    def read(self, QImage):  # real signature unknown; restored from __doc__
        """ QImageIOHandler.read(QImage) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setDevice(self, QIODevice):
        """ QImageIOHandler.setDevice(QIODevice) """
        pass

    # real signature unknown; restored from __doc__
    def setFormat(self, QByteArray):
        """ QImageIOHandler.setFormat(QByteArray) """
        pass

    # real signature unknown; restored from __doc__
    def setOption(self, QImageIOHandler_ImageOption, QVariant):
        """ QImageIOHandler.setOption(QImageIOHandler.ImageOption, QVariant) """
        pass

    # real signature unknown; restored from __doc__
    def supportsOption(self, QImageIOHandler_ImageOption):
        """ QImageIOHandler.supportsOption(QImageIOHandler.ImageOption) -> bool """
        return False

    def write(self, QImage):  # real signature unknown; restored from __doc__
        """ QImageIOHandler.write(QImage) -> bool """
        return False

    def __init__(self):  # real signature unknown; restored from __doc__
        pass

    __weakref__ = property(lambda self: object())  # default

    Animation = 12
    BackgroundColor = 13
    ClipRect = 1
    CompressionRatio = 5
    Description = 2
    Endianness = 11
    Gamma = 6
    IncrementalReading = 10
    Name = 8
    Quality = 7
    ScaledClipRect = 3
    ScaledSize = 4
    Size = 0
    SubType = 9


class QImageReader():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QImageReader()
    QImageReader(QIODevice, QByteArray format=QByteArray())
    QImageReader(QString, QByteArray format=QByteArray())
    """
    # real signature unknown; restored from __doc__

    def autoDetectImageFormat(self):
        """ QImageReader.autoDetectImageFormat() -> bool """
        return False

    def backgroundColor(self):  # real signature unknown; restored from __doc__
        """ QImageReader.backgroundColor() -> QColor """
        return QColor

    def canRead(self):  # real signature unknown; restored from __doc__
        """ QImageReader.canRead() -> bool """
        return False

    def clipRect(self):  # real signature unknown; restored from __doc__
        """ QImageReader.clipRect() -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def currentImageNumber(self):
        """ QImageReader.currentImageNumber() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def currentImageRect(self):
        """ QImageReader.currentImageRect() -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def decideFormatFromContent(self):
        """ QImageReader.decideFormatFromContent() -> bool """
        return False

    def device(self):  # real signature unknown; restored from __doc__
        """ QImageReader.device() -> QIODevice """
        pass

    def error(self):  # real signature unknown; restored from __doc__
        """ QImageReader.error() -> QImageReader.ImageReaderError """
        pass

    def errorString(self):  # real signature unknown; restored from __doc__
        """ QImageReader.errorString() -> QString """
        pass

    def fileName(self):  # real signature unknown; restored from __doc__
        """ QImageReader.fileName() -> QString """
        pass

    def format(self):  # real signature unknown; restored from __doc__
        """ QImageReader.format() -> QByteArray """
        pass

    def imageCount(self):  # real signature unknown; restored from __doc__
        """ QImageReader.imageCount() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def imageFormat(self, *__args):
        """
        QImageReader.imageFormat(QString) -> QByteArray
        QImageReader.imageFormat(QIODevice) -> QByteArray
        QImageReader.imageFormat() -> QImage.Format
        """
        pass

    def ImageReaderError(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def jumpToImage(self, p_int):
        """ QImageReader.jumpToImage(int) -> bool """
        return False

    def jumpToNextImage(self):  # real signature unknown; restored from __doc__
        """ QImageReader.jumpToNextImage() -> bool """
        return False

    def loopCount(self):  # real signature unknown; restored from __doc__
        """ QImageReader.loopCount() -> int """
        return 0

    def nextImageDelay(self):  # real signature unknown; restored from __doc__
        """ QImageReader.nextImageDelay() -> int """
        return 0

    def quality(self):  # real signature unknown; restored from __doc__
        """ QImageReader.quality() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def read(self, QImage=None):
        """
        QImageReader.read() -> QImage
        QImageReader.read(QImage) -> bool
        """
        return QImage or False

    def scaledClipRect(self):  # real signature unknown; restored from __doc__
        """ QImageReader.scaledClipRect() -> QRect """
        pass

    def scaledSize(self):  # real signature unknown; restored from __doc__
        """ QImageReader.scaledSize() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def setAutoDetectImageFormat(self, bool):
        """ QImageReader.setAutoDetectImageFormat(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setBackgroundColor(self, QColor):
        """ QImageReader.setBackgroundColor(QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setClipRect(self, QRect):
        """ QImageReader.setClipRect(QRect) """
        pass

    # real signature unknown; restored from __doc__
    def setDecideFormatFromContent(self, bool):
        """ QImageReader.setDecideFormatFromContent(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setDevice(self, QIODevice):
        """ QImageReader.setDevice(QIODevice) """
        pass

    # real signature unknown; restored from __doc__
    def setFileName(self, QString):
        """ QImageReader.setFileName(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setFormat(self, QByteArray):
        """ QImageReader.setFormat(QByteArray) """
        pass

    # real signature unknown; restored from __doc__
    def setQuality(self, p_int):
        """ QImageReader.setQuality(int) """
        pass

    # real signature unknown; restored from __doc__
    def setScaledClipRect(self, QRect):
        """ QImageReader.setScaledClipRect(QRect) """
        pass

    # real signature unknown; restored from __doc__
    def setScaledSize(self, QSize):
        """ QImageReader.setScaledSize(QSize) """
        pass

    def size(self):  # real signature unknown; restored from __doc__
        """ QImageReader.size() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def supportedImageFormats(self):
        """ QImageReader.supportedImageFormats() -> list-of-QByteArray """
        pass

    # real signature unknown; restored from __doc__
    def supportsAnimation(self):
        """ QImageReader.supportsAnimation() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def supportsOption(self, QImageIOHandler_ImageOption):
        """ QImageReader.supportsOption(QImageIOHandler.ImageOption) -> bool """
        return False

    def text(self, QString):  # real signature unknown; restored from __doc__
        """ QImageReader.text(QString) -> QString """
        pass

    def textKeys(self):  # real signature unknown; restored from __doc__
        """ QImageReader.textKeys() -> QStringList """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    __weakref__ = property(lambda self: object())  # default

    DeviceError = 2
    FileNotFoundError = 1
    InvalidDataError = 4
    UnknownError = 0
    UnsupportedFormatError = 3


class QImageWriter():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QImageWriter()
    QImageWriter(QIODevice, QByteArray)
    QImageWriter(QString, QByteArray format=QByteArray())
    """

    def canWrite(self):  # real signature unknown; restored from __doc__
        """ QImageWriter.canWrite() -> bool """
        return False

    def compression(self):  # real signature unknown; restored from __doc__
        """ QImageWriter.compression() -> int """
        return 0

    def description(self):  # real signature unknown; restored from __doc__
        """ QImageWriter.description() -> QString """
        pass

    def device(self):  # real signature unknown; restored from __doc__
        """ QImageWriter.device() -> QIODevice """
        pass

    def error(self):  # real signature unknown; restored from __doc__
        """ QImageWriter.error() -> QImageWriter.ImageWriterError """
        pass

    def errorString(self):  # real signature unknown; restored from __doc__
        """ QImageWriter.errorString() -> QString """
        pass

    def fileName(self):  # real signature unknown; restored from __doc__
        """ QImageWriter.fileName() -> QString """
        pass

    def format(self):  # real signature unknown; restored from __doc__
        """ QImageWriter.format() -> QByteArray """
        pass

    def gamma(self):  # real signature unknown; restored from __doc__
        """ QImageWriter.gamma() -> float """
        return 0.0

    def ImageWriterError(self, *args, **kwargs):  # real signature unknown
        pass

    def quality(self):  # real signature unknown; restored from __doc__
        """ QImageWriter.quality() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setCompression(self, p_int):
        """ QImageWriter.setCompression(int) """
        pass

    # real signature unknown; restored from __doc__
    def setDescription(self, QString):
        """ QImageWriter.setDescription(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setDevice(self, QIODevice):
        """ QImageWriter.setDevice(QIODevice) """
        pass

    # real signature unknown; restored from __doc__
    def setFileName(self, QString):
        """ QImageWriter.setFileName(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setFormat(self, QByteArray):
        """ QImageWriter.setFormat(QByteArray) """
        pass

    # real signature unknown; restored from __doc__
    def setGamma(self, p_float):
        """ QImageWriter.setGamma(float) """
        pass

    # real signature unknown; restored from __doc__
    def setQuality(self, p_int):
        """ QImageWriter.setQuality(int) """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, QString, QString_1):
        """ QImageWriter.setText(QString, QString) """
        pass

    # real signature unknown; restored from __doc__
    def supportedImageFormats(self):
        """ QImageWriter.supportedImageFormats() -> list-of-QByteArray """
        pass

    # real signature unknown; restored from __doc__
    def supportsOption(self, QImageIOHandler_ImageOption):
        """ QImageWriter.supportsOption(QImageIOHandler.ImageOption) -> bool """
        return False

    def write(self, QImage):  # real signature unknown; restored from __doc__
        """ QImageWriter.write(QImage) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    __weakref__ = property(lambda self: object())  # default

    DeviceError = 1
    UnknownError = 0
    UnsupportedFormatError = 2


class QInputContext(__PyQt4_QtCore.QObject):

    """ QInputContext(QObject parent=None) """

    def actions(self):  # real signature unknown; restored from __doc__
        """ QInputContext.actions() -> list-of-QAction """
        pass

    # real signature unknown; restored from __doc__
    def filterEvent(self, QEvent):
        """ QInputContext.filterEvent(QEvent) -> bool """
        return False

    def focusWidget(self):  # real signature unknown; restored from __doc__
        """ QInputContext.focusWidget() -> QWidget """
        return QWidget

    def font(self):  # real signature unknown; restored from __doc__
        """ QInputContext.font() -> QFont """
        return QFont

    def identifierName(self):  # real signature unknown; restored from __doc__
        """ QInputContext.identifierName() -> QString """
        pass

    def isComposing(self):  # real signature unknown; restored from __doc__
        """ QInputContext.isComposing() -> bool """
        return False

    def language(self):  # real signature unknown; restored from __doc__
        """ QInputContext.language() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def mouseHandler(self, p_int, QMouseEvent):
        """ QInputContext.mouseHandler(int, QMouseEvent) """
        pass

    def reset(self):  # real signature unknown; restored from __doc__
        """ QInputContext.reset() """
        pass

    # real signature unknown; restored from __doc__
    def sendEvent(self, QInputMethodEvent):
        """ QInputContext.sendEvent(QInputMethodEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setFocusWidget(self, QWidget):
        """ QInputContext.setFocusWidget(QWidget) """
        pass

    def StandardFormat(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def standardFormat(self, QInputContext_StandardFormat):
        """ QInputContext.standardFormat(QInputContext.StandardFormat) -> QTextFormat """
        return QTextFormat

    def update(self):  # real signature unknown; restored from __doc__
        """ QInputContext.update() """
        pass

    # real signature unknown; restored from __doc__
    def widgetDestroyed(self, QWidget):
        """ QInputContext.widgetDestroyed(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass

    PreeditFormat = 0
    SelectionFormat = 1


class QInputContextFactory():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QInputContextFactory()
    QInputContextFactory(QInputContextFactory)
    """
    # real signature unknown; restored from __doc__

    def create(self, QString, QObject):
        """ QInputContextFactory.create(QString, QObject) -> QInputContext """
        return QInputContext

    # real signature unknown; restored from __doc__
    def description(self, QString):
        """ QInputContextFactory.description(QString) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def displayName(self, QString):
        """ QInputContextFactory.displayName(QString) -> QString """
        pass

    def keys(self):  # real signature unknown; restored from __doc__
        """ QInputContextFactory.keys() -> QStringList """
        pass

    # real signature unknown; restored from __doc__
    def languages(self, QString):
        """ QInputContextFactory.languages(QString) -> QStringList """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QInputContextFactory=None):
        pass

    __weakref__ = property(lambda self: object())  # default


class QInputDialog(QDialog):

    """ QInputDialog(QWidget parent=None, Qt.WindowFlags flags=0) """

    # real signature unknown; restored from __doc__
    def cancelButtonText(self):
        """ QInputDialog.cancelButtonText() -> QString """
        pass

    def comboBoxItems(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.comboBoxItems() -> QStringList """
        pass

    def done(self, p_int):  # real signature unknown; restored from __doc__
        """ QInputDialog.done(int) """
        pass

    def doubleDecimals(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.doubleDecimals() -> int """
        return 0

    def doubleMaximum(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.doubleMaximum() -> float """
        return 0.0

    def doubleMinimum(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.doubleMinimum() -> float """
        return 0.0

    def doubleValue(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.doubleValue() -> float """
        return 0.0

    def doubleValueChanged(self, *args, **kwargs):  # real signature unknown
        """ QInputDialog.doubleValueChanged[float] [signal] """
        pass

    def doubleValueSelected(self, *args, **kwargs):  # real signature unknown
        """ QInputDialog.doubleValueSelected[float] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def getDouble(self, QWidget, QString, QString_1, float_value=0, float_min=-2147483647, float_max=2147483647, int_decimals=1, Qt_WindowFlags_flags=0):
        """ QInputDialog.getDouble(QWidget, QString, QString, float value=0, float min=-2147483647, float max=2147483647, int decimals=1, Qt.WindowFlags flags=0) -> (float, bool) """
        pass

    # real signature unknown; restored from __doc__
    def getInt(self, QWidget, QString, QString_1, int_value=0, int_min=-2147483647, int_max=2147483647, int_step=1, Qt_WindowFlags_flags=0):
        """ QInputDialog.getInt(QWidget, QString, QString, int value=0, int min=-2147483647, int max=2147483647, int step=1, Qt.WindowFlags flags=0) -> (int, bool) """
        pass

    # real signature unknown; restored from __doc__
    def getInteger(self, QWidget, QString, QString_1, int_value=0, int_min=-2147483647, int_max=2147483647, int_step=1, Qt_WindowFlags_flags=0):
        """ QInputDialog.getInteger(QWidget, QString, QString, int value=0, int min=-2147483647, int max=2147483647, int step=1, Qt.WindowFlags flags=0) -> (int, bool) """
        pass

    # real signature unknown; restored from __doc__
    def getItem(self, QWidget, QString, QString_1, QStringList, int_current=0, bool_editable=True, Qt_WindowFlags_flags=0):
        """ QInputDialog.getItem(QWidget, QString, QString, QStringList, int current=0, bool editable=True, Qt.WindowFlags flags=0) -> (QString, bool) """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def getText(self, QWidget, QString, QString_1, QLineEdit_EchoMode_mode=None, QString_text=None, *args, **kwargs):
        """ QInputDialog.getText(QWidget, QString, QString, QLineEdit.EchoMode mode=QLineEdit.Normal, QString text=QString(), Qt.WindowFlags flags=0) -> (QString, bool) """
        pass

    def InputDialogOption(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def InputDialogOptions(self, *__args):
        """
        QInputDialog.InputDialogOptions(QInputDialog.InputDialogOptions)
        QInputDialog.InputDialogOptions(int)
        QInputDialog.InputDialogOptions()
        """
        pass

    def inputMode(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.inputMode() -> QInputDialog.InputMode """
        pass

    def InputMode(self, *args, **kwargs):  # real signature unknown
        pass

    def intMaximum(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.intMaximum() -> int """
        return 0

    def intMinimum(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.intMinimum() -> int """
        return 0

    def intStep(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.intStep() -> int """
        return 0

    def intValue(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.intValue() -> int """
        return 0

    def intValueChanged(self, *args, **kwargs):  # real signature unknown
        """ QInputDialog.intValueChanged[int] [signal] """
        pass

    def intValueSelected(self, *args, **kwargs):  # real signature unknown
        """ QInputDialog.intValueSelected[int] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def isComboBoxEditable(self):
        """ QInputDialog.isComboBoxEditable() -> bool """
        return False

    def labelText(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.labelText() -> QString """
        pass

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.minimumSizeHint() -> QSize """
        pass

    def okButtonText(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.okButtonText() -> QString """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def open(self, *__args):
        """
        QInputDialog.open()
        QInputDialog.open(QObject, SLOT())
        QInputDialog.open(callable)
        """
        pass

    def options(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.options() -> QInputDialog.InputDialogOptions """
        pass

    # real signature unknown; restored from __doc__
    def setCancelButtonText(self, QString):
        """ QInputDialog.setCancelButtonText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setComboBoxEditable(self, bool):
        """ QInputDialog.setComboBoxEditable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setComboBoxItems(self, QStringList):
        """ QInputDialog.setComboBoxItems(QStringList) """
        pass

    # real signature unknown; restored from __doc__
    def setDoubleDecimals(self, p_int):
        """ QInputDialog.setDoubleDecimals(int) """
        pass

    # real signature unknown; restored from __doc__
    def setDoubleMaximum(self, p_float):
        """ QInputDialog.setDoubleMaximum(float) """
        pass

    # real signature unknown; restored from __doc__
    def setDoubleMinimum(self, p_float):
        """ QInputDialog.setDoubleMinimum(float) """
        pass

    # real signature unknown; restored from __doc__
    def setDoubleRange(self, p_float, p_float_1):
        """ QInputDialog.setDoubleRange(float, float) """
        pass

    # real signature unknown; restored from __doc__
    def setDoubleValue(self, p_float):
        """ QInputDialog.setDoubleValue(float) """
        pass

    # real signature unknown; restored from __doc__
    def setInputMode(self, QInputDialog_InputMode):
        """ QInputDialog.setInputMode(QInputDialog.InputMode) """
        pass

    # real signature unknown; restored from __doc__
    def setIntMaximum(self, p_int):
        """ QInputDialog.setIntMaximum(int) """
        pass

    # real signature unknown; restored from __doc__
    def setIntMinimum(self, p_int):
        """ QInputDialog.setIntMinimum(int) """
        pass

    # real signature unknown; restored from __doc__
    def setIntRange(self, p_int, p_int_1):
        """ QInputDialog.setIntRange(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setIntStep(self, p_int):
        """ QInputDialog.setIntStep(int) """
        pass

    # real signature unknown; restored from __doc__
    def setIntValue(self, p_int):
        """ QInputDialog.setIntValue(int) """
        pass

    # real signature unknown; restored from __doc__
    def setLabelText(self, QString):
        """ QInputDialog.setLabelText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setOkButtonText(self, QString):
        """ QInputDialog.setOkButtonText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setOption(self, QInputDialog_InputDialogOption, bool_on=True):
        """ QInputDialog.setOption(QInputDialog.InputDialogOption, bool on=True) """
        pass

    # real signature unknown; restored from __doc__
    def setOptions(self, QInputDialog_InputDialogOptions):
        """ QInputDialog.setOptions(QInputDialog.InputDialogOptions) """
        pass

    # real signature unknown; restored from __doc__
    def setTextEchoMode(self, QLineEdit_EchoMode):
        """ QInputDialog.setTextEchoMode(QLineEdit.EchoMode) """
        pass

    # real signature unknown; restored from __doc__
    def setTextValue(self, QString):
        """ QInputDialog.setTextValue(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QInputDialog.setVisible(bool) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.sizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def testOption(self, QInputDialog_InputDialogOption):
        """ QInputDialog.testOption(QInputDialog.InputDialogOption) -> bool """
        return False

    def textEchoMode(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.textEchoMode() -> QLineEdit.EchoMode """
        pass

    def textValue(self):  # real signature unknown; restored from __doc__
        """ QInputDialog.textValue() -> QString """
        pass

    def textValueChanged(self, *args, **kwargs):  # real signature unknown
        """ QInputDialog.textValueChanged[QString] [signal] """
        pass

    def textValueSelected(self, *args, **kwargs):  # real signature unknown
        """ QInputDialog.textValueSelected[QString] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None, Qt_WindowFlags_flags=0):
        pass

    DoubleInput = 2
    IntInput = 1
    NoButtons = 1
    TextInput = 0
    UseListViewForComboBoxItems = 2


class QInputMethodEvent(__PyQt4_QtCore.QEvent):

    """
    QInputMethodEvent()
    QInputMethodEvent(QString, list-of-QInputMethodEvent.Attribute)
    QInputMethodEvent(QInputMethodEvent)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def Attribute(self, *__args):
        """
        QInputMethodEvent.Attribute(QInputMethodEvent.AttributeType, int, int, QVariant)
        QInputMethodEvent.Attribute(QInputMethodEvent.Attribute)
        """
        pass

    def attributes(self):  # real signature unknown; restored from __doc__
        """ QInputMethodEvent.attributes() -> list-of-QInputMethodEvent.Attribute """
        pass

    def AttributeType(self, *args, **kwargs):  # real signature unknown
        pass

    def commitString(self):  # real signature unknown; restored from __doc__
        """ QInputMethodEvent.commitString() -> QString """
        pass

    def preeditString(self):  # real signature unknown; restored from __doc__
        """ QInputMethodEvent.preeditString() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def replacementLength(self):
        """ QInputMethodEvent.replacementLength() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def replacementStart(self):
        """ QInputMethodEvent.replacementStart() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setCommitString(self, QString, int_from=0, int_length=0):
        """ QInputMethodEvent.setCommitString(QString, int from=0, int length=0) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    Cursor = 1
    Language = 2
    Ruby = 3
    Selection = 4
    TextFormat = 0


class QIntValidator(QValidator):

    """
    QIntValidator(QObject parent=None)
    QIntValidator(int, int, QObject)
    """

    def bottom(self):  # real signature unknown; restored from __doc__
        """ QIntValidator.bottom() -> int """
        return 0

    def fixup(self, QString):  # real signature unknown; restored from __doc__
        """ QIntValidator.fixup(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setBottom(self, p_int):
        """ QIntValidator.setBottom(int) """
        pass

    # real signature unknown; restored from __doc__
    def setRange(self, p_int, p_int_1):
        """ QIntValidator.setRange(int, int) """
        pass

    def setTop(self, p_int):  # real signature unknown; restored from __doc__
        """ QIntValidator.setTop(int) """
        pass

    def top(self):  # real signature unknown; restored from __doc__
        """ QIntValidator.top() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def validate(self, QString, p_int):
        """ QIntValidator.validate(QString, int) -> (QValidator.State, int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QItemDelegate(QAbstractItemDelegate):

    """ QItemDelegate(QObject parent=None) """
    # real signature unknown; restored from __doc__

    def createEditor(self, QWidget, QStyleOptionViewItem, QModelIndex):
        """ QItemDelegate.createEditor(QWidget, QStyleOptionViewItem, QModelIndex) -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def drawBackground(self, QPainter, QStyleOptionViewItem, QModelIndex):
        """ QItemDelegate.drawBackground(QPainter, QStyleOptionViewItem, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def drawCheck(self, QPainter, QStyleOptionViewItem, QRect, Qt_CheckState):
        """ QItemDelegate.drawCheck(QPainter, QStyleOptionViewItem, QRect, Qt.CheckState) """
        pass

    # real signature unknown; restored from __doc__
    def drawDecoration(self, QPainter, QStyleOptionViewItem, QRect, QPixmap):
        """ QItemDelegate.drawDecoration(QPainter, QStyleOptionViewItem, QRect, QPixmap) """
        pass

    # real signature unknown; restored from __doc__
    def drawDisplay(self, QPainter, QStyleOptionViewItem, QRect, QString):
        """ QItemDelegate.drawDisplay(QPainter, QStyleOptionViewItem, QRect, QString) """
        pass

    # real signature unknown; restored from __doc__
    def drawFocus(self, QPainter, QStyleOptionViewItem, QRect):
        """ QItemDelegate.drawFocus(QPainter, QStyleOptionViewItem, QRect) """
        pass

    # real signature unknown; restored from __doc__
    def editorEvent(self, QEvent, QAbstractItemModel, QStyleOptionViewItem, QModelIndex):
        """ QItemDelegate.editorEvent(QEvent, QAbstractItemModel, QStyleOptionViewItem, QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QItemDelegate.eventFilter(QObject, QEvent) -> bool """
        return False

    def hasClipping(self):  # real signature unknown; restored from __doc__
        """ QItemDelegate.hasClipping() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def itemEditorFactory(self):
        """ QItemDelegate.itemEditorFactory() -> QItemEditorFactory """
        return QItemEditorFactory

    # real signature unknown; restored from __doc__
    def paint(self, QPainter, QStyleOptionViewItem, QModelIndex):
        """ QItemDelegate.paint(QPainter, QStyleOptionViewItem, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def setClipping(self, bool):
        """ QItemDelegate.setClipping(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setEditorData(self, QWidget, QModelIndex):
        """ QItemDelegate.setEditorData(QWidget, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def setItemEditorFactory(self, QItemEditorFactory):
        """ QItemDelegate.setItemEditorFactory(QItemEditorFactory) """
        pass

    # real signature unknown; restored from __doc__
    def setModelData(self, QWidget, QAbstractItemModel, QModelIndex):
        """ QItemDelegate.setModelData(QWidget, QAbstractItemModel, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def sizeHint(self, QStyleOptionViewItem, QModelIndex):
        """ QItemDelegate.sizeHint(QStyleOptionViewItem, QModelIndex) -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def updateEditorGeometry(self, QWidget, QStyleOptionViewItem, QModelIndex):
        """ QItemDelegate.updateEditorGeometry(QWidget, QStyleOptionViewItem, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QItemEditorCreatorBase():  # skipped bases: <type 'sip.wrapper'>

    """
    QItemEditorCreatorBase()
    QItemEditorCreatorBase(QItemEditorCreatorBase)
    """
    # real signature unknown; restored from __doc__

    def createWidget(self, QWidget):
        """ QItemEditorCreatorBase.createWidget(QWidget) -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def valuePropertyName(self):
        """ QItemEditorCreatorBase.valuePropertyName() -> QByteArray """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QItemEditorCreatorBase=None):
        pass

    __weakref__ = property(lambda self: object())  # default


class QItemEditorFactory():  # skipped bases: <type 'sip.wrapper'>

    """
    QItemEditorFactory()
    QItemEditorFactory(QItemEditorFactory)
    """
    # real signature unknown; restored from __doc__

    def createEditor(self, Type, QWidget):
        """ QItemEditorFactory.createEditor(Type, QWidget) -> QWidget """
        return QWidget

    def defaultFactory(self):  # real signature unknown; restored from __doc__
        """ QItemEditorFactory.defaultFactory() -> QItemEditorFactory """
        return QItemEditorFactory

    # real signature unknown; restored from __doc__
    def registerEditor(self, Type, QItemEditorCreatorBase):
        """ QItemEditorFactory.registerEditor(Type, QItemEditorCreatorBase) """
        pass

    # real signature unknown; restored from __doc__
    def setDefaultFactory(self, QItemEditorFactory):
        """ QItemEditorFactory.setDefaultFactory(QItemEditorFactory) """
        pass

    # real signature unknown; restored from __doc__
    def valuePropertyName(self, Type):
        """ QItemEditorFactory.valuePropertyName(Type) -> QByteArray """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QItemEditorFactory=None):
        pass

    __weakref__ = property(lambda self: object())  # default


class QItemSelection():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QItemSelection()
    QItemSelection(QModelIndex, QModelIndex)
    QItemSelection(QItemSelection)
    """
    # real signature unknown; restored from __doc__

    def append(self, QItemSelectionRange):
        """ QItemSelection.append(QItemSelectionRange) """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QItemSelection.clear() """
        pass

    # real signature unknown; restored from __doc__
    def contains(self, QModelIndex):
        """ QItemSelection.contains(QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def count(self, QItemSelectionRange=None):
        """
        QItemSelection.count(QItemSelectionRange) -> int
        QItemSelection.count() -> int
        """
        return 0

    def first(self):  # real signature unknown; restored from __doc__
        """ QItemSelection.first() -> QItemSelectionRange """
        return QItemSelectionRange

    def indexes(self):  # real signature unknown; restored from __doc__
        """ QItemSelection.indexes() -> list-of-QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def indexOf(self, QItemSelectionRange, int_from=0):
        """ QItemSelection.indexOf(QItemSelectionRange, int from=0) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def insert(self, p_int, QItemSelectionRange):
        """ QItemSelection.insert(int, QItemSelectionRange) """
        pass

    def isEmpty(self):  # real signature unknown; restored from __doc__
        """ QItemSelection.isEmpty() -> bool """
        return False

    def last(self):  # real signature unknown; restored from __doc__
        """ QItemSelection.last() -> QItemSelectionRange """
        return QItemSelectionRange

    # real signature unknown; restored from __doc__
    def lastIndexOf(self, QItemSelectionRange, int_from=-1):
        """ QItemSelection.lastIndexOf(QItemSelectionRange, int from=-1) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def merge(self, QItemSelection, QItemSelectionModel_SelectionFlags):
        """ QItemSelection.merge(QItemSelection, QItemSelectionModel.SelectionFlags) """
        pass

    # real signature unknown; restored from __doc__
    def move(self, p_int, p_int_1):
        """ QItemSelection.move(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def prepend(self, QItemSelectionRange):
        """ QItemSelection.prepend(QItemSelectionRange) """
        pass

    # real signature unknown; restored from __doc__
    def removeAll(self, QItemSelectionRange):
        """ QItemSelection.removeAll(QItemSelectionRange) -> int """
        return 0

    def removeAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QItemSelection.removeAt(int) """
        pass

    # real signature unknown; restored from __doc__
    def replace(self, p_int, QItemSelectionRange):
        """ QItemSelection.replace(int, QItemSelectionRange) """
        pass

    # real signature unknown; restored from __doc__
    def select(self, QModelIndex, QModelIndex_1):
        """ QItemSelection.select(QModelIndex, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def split(self, QItemSelectionRange, QItemSelectionRange_1, QItemSelection):
        """ QItemSelection.split(QItemSelectionRange, QItemSelectionRange, QItemSelection) """
        pass

    # real signature unknown; restored from __doc__
    def swap(self, p_int, p_int_1):
        """ QItemSelection.swap(int, int) """
        pass

    def takeAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QItemSelection.takeAt(int) -> QItemSelectionRange """
        return QItemSelectionRange

    def takeFirst(self):  # real signature unknown; restored from __doc__
        """ QItemSelection.takeFirst() -> QItemSelectionRange """
        return QItemSelectionRange

    def takeLast(self):  # real signature unknown; restored from __doc__
        """ QItemSelection.takeLast() -> QItemSelectionRange """
        return QItemSelectionRange

    def __contains__(self, y):  # real signature unknown; restored from __doc__
        """ x.__contains__(y) <==> y in x """
        pass

    def __delitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__delitem__(y) <==> del x[y] """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __getitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+=y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    # real signature unknown; restored from __doc__
    def __setitem__(self, i, y):
        """ x.__setitem__(i, y) <==> x[i]=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QItemSelectionModel(__PyQt4_QtCore.QObject):

    """
    QItemSelectionModel(QAbstractItemModel)
    QItemSelectionModel(QAbstractItemModel, QObject)
    """

    def clear(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionModel.clear() """
        pass

    def clearSelection(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionModel.clearSelection() """
        pass

    # real signature unknown; restored from __doc__
    def columnIntersectsSelection(self, p_int, QModelIndex):
        """ QItemSelectionModel.columnIntersectsSelection(int, QModelIndex) -> bool """
        return False

    def currentChanged(self, *args, **kwargs):  # real signature unknown
        """ QItemSelectionModel.currentChanged[QModelIndex, QModelIndex] [signal] """
        pass

    def currentColumnChanged(self, *args, **kwargs):  # real signature unknown
        """ QItemSelectionModel.currentColumnChanged[QModelIndex, QModelIndex] [signal] """
        pass

    def currentIndex(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionModel.currentIndex() -> QModelIndex """
        pass

    def currentRowChanged(self, *args, **kwargs):  # real signature unknown
        """ QItemSelectionModel.currentRowChanged[QModelIndex, QModelIndex] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def emitSelectionChanged(self, QItemSelection, QItemSelection_1):
        """ QItemSelectionModel.emitSelectionChanged(QItemSelection, QItemSelection) """
        pass

    def hasSelection(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionModel.hasSelection() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isColumnSelected(self, p_int, QModelIndex):
        """ QItemSelectionModel.isColumnSelected(int, QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isRowSelected(self, p_int, QModelIndex):
        """ QItemSelectionModel.isRowSelected(int, QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isSelected(self, QModelIndex):
        """ QItemSelectionModel.isSelected(QModelIndex) -> bool """
        return False

    def model(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionModel.model() -> QAbstractItemModel """
        pass

    def reset(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionModel.reset() """
        pass

    # real signature unknown; restored from __doc__
    def rowIntersectsSelection(self, p_int, QModelIndex):
        """ QItemSelectionModel.rowIntersectsSelection(int, QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def select(self, *__args):
        """
        QItemSelectionModel.select(QModelIndex, QItemSelectionModel.SelectionFlags)
        QItemSelectionModel.select(QItemSelection, QItemSelectionModel.SelectionFlags)
        """
        pass

    # real signature unknown; restored from __doc__
    def selectedColumns(self, int_row=0):
        """ QItemSelectionModel.selectedColumns(int row=0) -> list-of-QModelIndex """
        pass

    def selectedIndexes(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionModel.selectedIndexes() -> list-of-QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def selectedRows(self, int_column=0):
        """ QItemSelectionModel.selectedRows(int column=0) -> list-of-QModelIndex """
        pass

    def selection(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionModel.selection() -> QItemSelection """
        return QItemSelection

    def selectionChanged(self, *args, **kwargs):  # real signature unknown
        """ QItemSelectionModel.selectionChanged[QItemSelection, QItemSelection] [signal] """
        pass

    def SelectionFlag(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def SelectionFlags(self, *__args):
        """
        QItemSelectionModel.SelectionFlags(QItemSelectionModel.SelectionFlags)
        QItemSelectionModel.SelectionFlags(int)
        QItemSelectionModel.SelectionFlags()
        """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentIndex(self, QModelIndex, QItemSelectionModel_SelectionFlags):
        """ QItemSelectionModel.setCurrentIndex(QModelIndex, QItemSelectionModel.SelectionFlags) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QAbstractItemModel, QObject=None):
        pass

    Clear = 1
    ClearAndSelect = 3
    Columns = 64
    Current = 16
    Deselect = 4
    NoUpdate = 0
    Rows = 32
    Select = 2
    SelectCurrent = 18
    Toggle = 8
    ToggleCurrent = 24


class QItemSelectionRange():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QItemSelectionRange()
    QItemSelectionRange(QItemSelectionRange)
    QItemSelectionRange(QModelIndex, QModelIndex)
    QItemSelectionRange(QModelIndex)
    """

    def bottom(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionRange.bottom() -> int """
        return 0

    def bottomRight(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionRange.bottomRight() -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def contains(self, *__args):
        """
        QItemSelectionRange.contains(QModelIndex) -> bool
        QItemSelectionRange.contains(int, int, QModelIndex) -> bool
        """
        return False

    def height(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionRange.height() -> int """
        return 0

    def indexes(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionRange.indexes() -> list-of-QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def intersect(self, QItemSelectionRange):
        """ QItemSelectionRange.intersect(QItemSelectionRange) -> QItemSelectionRange """
        return QItemSelectionRange

    # real signature unknown; restored from __doc__
    def intersected(self, QItemSelectionRange):
        """ QItemSelectionRange.intersected(QItemSelectionRange) -> QItemSelectionRange """
        return QItemSelectionRange

    # real signature unknown; restored from __doc__
    def intersects(self, QItemSelectionRange):
        """ QItemSelectionRange.intersects(QItemSelectionRange) -> bool """
        return False

    def isEmpty(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionRange.isEmpty() -> bool """
        return False

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionRange.isValid() -> bool """
        return False

    def left(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionRange.left() -> int """
        return 0

    def model(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionRange.model() -> QAbstractItemModel """
        pass

    def parent(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionRange.parent() -> QModelIndex """
        pass

    def right(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionRange.right() -> int """
        return 0

    def top(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionRange.top() -> int """
        return 0

    def topLeft(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionRange.topLeft() -> QModelIndex """
        pass

    def width(self):  # real signature unknown; restored from __doc__
        """ QItemSelectionRange.width() -> int """
        return 0

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __hash__(self):  # real signature unknown; restored from __doc__
        """ x.__hash__() <==> hash(x) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QKeyEvent(QInputEvent):

    """
    QKeyEvent(QEvent.Type, int, Qt.KeyboardModifiers, QString text=QString(), bool autorep=False, int count=1)
    QKeyEvent(QKeyEvent)
    """

    def count(self):  # real signature unknown; restored from __doc__
        """ QKeyEvent.count() -> int """
        return 0

    def isAutoRepeat(self):  # real signature unknown; restored from __doc__
        """ QKeyEvent.isAutoRepeat() -> bool """
        return False

    def key(self):  # real signature unknown; restored from __doc__
        """ QKeyEvent.key() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def matches(self, QKeySequence_StandardKey):
        """ QKeyEvent.matches(QKeySequence.StandardKey) -> bool """
        return False

    def modifiers(self):  # real signature unknown; restored from __doc__
        """ QKeyEvent.modifiers() -> Qt.KeyboardModifiers """
        pass

    def nativeModifiers(self):  # real signature unknown; restored from __doc__
        """ QKeyEvent.nativeModifiers() -> int """
        return 0

    def nativeScanCode(self):  # real signature unknown; restored from __doc__
        """ QKeyEvent.nativeScanCode() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def nativeVirtualKey(self):
        """ QKeyEvent.nativeVirtualKey() -> int """
        return 0

    def text(self):  # real signature unknown; restored from __doc__
        """ QKeyEvent.text() -> QString """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass


class QKeyEventTransition(__PyQt4_QtCore.QEventTransition):

    """
    QKeyEventTransition(QState sourceState=None)
    QKeyEventTransition(QObject, QEvent.Type, int, QState sourceState=None)
    """
    # real signature unknown; restored from __doc__

    def eventTest(self, QEvent):
        """ QKeyEventTransition.eventTest(QEvent) -> bool """
        return False

    def key(self):  # real signature unknown; restored from __doc__
        """ QKeyEventTransition.key() -> int """
        return 0

    def modifierMask(self):  # real signature unknown; restored from __doc__
        """ QKeyEventTransition.modifierMask() -> Qt.KeyboardModifiers """
        pass

    # real signature unknown; restored from __doc__
    def onTransition(self, QEvent):
        """ QKeyEventTransition.onTransition(QEvent) """
        pass

    def setKey(self, p_int):  # real signature unknown; restored from __doc__
        """ QKeyEventTransition.setKey(int) """
        pass

    # real signature unknown; restored from __doc__
    def setModifierMask(self, Qt_KeyboardModifiers):
        """ QKeyEventTransition.setModifierMask(Qt.KeyboardModifiers) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QKeySequence():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QKeySequence()
    QKeySequence(QKeySequence)
    QKeySequence(QString, QKeySequence.SequenceFormat)
    QKeySequence(int, int key2=0, int key3=0, int key4=0)
    QKeySequence(QVariant)
    """

    def count(self):  # real signature unknown; restored from __doc__
        """ QKeySequence.count() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def fromString(self, QString, QKeySequence_SequenceFormat_format=None):
        """ QKeySequence.fromString(QString, QKeySequence.SequenceFormat format=QKeySequence.PortableText) -> QKeySequence """
        return QKeySequence

    def isDetached(self):  # real signature unknown; restored from __doc__
        """ QKeySequence.isDetached() -> bool """
        return False

    def isEmpty(self):  # real signature unknown; restored from __doc__
        """ QKeySequence.isEmpty() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyBindings(self, QKeySequence_StandardKey):
        """ QKeySequence.keyBindings(QKeySequence.StandardKey) -> list-of-QKeySequence """
        pass

    # real signature unknown; restored from __doc__
    def matches(self, QKeySequence):
        """ QKeySequence.matches(QKeySequence) -> QKeySequence.SequenceMatch """
        pass

    # real signature unknown; restored from __doc__
    def mnemonic(self, QString):
        """ QKeySequence.mnemonic(QString) -> QKeySequence """
        return QKeySequence

    def SequenceFormat(self, *args, **kwargs):  # real signature unknown
        pass

    def SequenceMatch(self, *args, **kwargs):  # real signature unknown
        pass

    def StandardKey(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def toString(self, QKeySequence_SequenceFormat_format=None):
        """ QKeySequence.toString(QKeySequence.SequenceFormat format=QKeySequence.PortableText) -> QString """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __getitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __int__(self):  # real signature unknown; restored from __doc__
        """ x.__int__() <==> int(x) """
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    __weakref__ = property(lambda self: object())  # default

    AddTab = 19
    Back = 13
    Bold = 27
    Close = 4
    Copy = 9
    Cut = 8
    Delete = 7
    DeleteEndOfLine = 60
    DeleteEndOfWord = 59
    DeleteStartOfWord = 58
    ExactMatch = 2
    Find = 22
    FindNext = 23
    FindPrevious = 24
    Forward = 14
    HelpContents = 1
    InsertLineSeparator = 62
    InsertParagraphSeparator = 61
    Italic = 28
    MoveToEndOfBlock = 41
    MoveToEndOfDocument = 43
    MoveToEndOfLine = 39
    MoveToNextChar = 30
    MoveToNextLine = 34
    MoveToNextPage = 36
    MoveToNextWord = 32
    MoveToPreviousChar = 31
    MoveToPreviousLine = 35
    MoveToPreviousPage = 37
    MoveToPreviousWord = 33
    MoveToStartOfBlock = 40
    MoveToStartOfDocument = 42
    MoveToStartOfLine = 38
    NativeText = 0
    New = 6
    NextChild = 20
    NoMatch = 0
    Open = 3
    PartialMatch = 1
    Paste = 10
    PortableText = 1
    Preferences = 64
    PreviousChild = 21
    Print = 18
    Quit = 65
    Redo = 12
    Refresh = 15
    Replace = 25
    Save = 5
    SaveAs = 63
    SelectAll = 26
    SelectEndOfBlock = 55
    SelectEndOfDocument = 57
    SelectEndOfLine = 53
    SelectNextChar = 44
    SelectNextLine = 48
    SelectNextPage = 50
    SelectNextWord = 46
    SelectPreviousChar = 45
    SelectPreviousLine = 49
    SelectPreviousPage = 51
    SelectPreviousWord = 47
    SelectStartOfBlock = 54
    SelectStartOfDocument = 56
    SelectStartOfLine = 52
    Underline = 29
    Undo = 11
    UnknownKey = 0
    WhatsThis = 2
    ZoomIn = 16
    ZoomOut = 17


class QLabel(QFrame):

    """
    QLabel(QWidget parent=None, Qt.WindowFlags flags=0)
    QLabel(QString, QWidget parent=None, Qt.WindowFlags flags=0)
    """

    def alignment(self):  # real signature unknown; restored from __doc__
        """ QLabel.alignment() -> Qt.Alignment """
        pass

    def buddy(self):  # real signature unknown; restored from __doc__
        """ QLabel.buddy() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QLabel.changeEvent(QEvent) """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QLabel.clear() """
        pass

    # real signature unknown; restored from __doc__
    def contextMenuEvent(self, QContextMenuEvent):
        """ QLabel.contextMenuEvent(QContextMenuEvent) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QLabel.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QLabel.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusNextPrevChild(self, bool):
        """ QLabel.focusNextPrevChild(bool) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QLabel.focusOutEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def hasScaledContents(self):
        """ QLabel.hasScaledContents() -> bool """
        return False

    def hasSelectedText(self):  # real signature unknown; restored from __doc__
        """ QLabel.hasSelectedText() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def heightForWidth(self, p_int):
        """ QLabel.heightForWidth(int) -> int """
        return 0

    def indent(self):  # real signature unknown; restored from __doc__
        """ QLabel.indent() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QLabel.keyPressEvent(QKeyEvent) """
        pass

    def linkActivated(self, *args, **kwargs):  # real signature unknown
        """ QLabel.linkActivated[QString] [signal] """
        pass

    def linkHovered(self, *args, **kwargs):  # real signature unknown
        """ QLabel.linkHovered[QString] [signal] """
        pass

    def margin(self):  # real signature unknown; restored from __doc__
        """ QLabel.margin() -> int """
        return 0

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QLabel.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QLabel.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QLabel.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QLabel.mouseReleaseEvent(QMouseEvent) """
        pass

    def movie(self):  # real signature unknown; restored from __doc__
        """ QLabel.movie() -> QMovie """
        return QMovie

    # real signature unknown; restored from __doc__
    def openExternalLinks(self):
        """ QLabel.openExternalLinks() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QLabel.paintEvent(QPaintEvent) """
        pass

    def picture(self):  # real signature unknown; restored from __doc__
        """ QLabel.picture() -> QPicture """
        return QPicture

    def pixmap(self):  # real signature unknown; restored from __doc__
        """ QLabel.pixmap() -> QPixmap """
        return QPixmap

    def selectedText(self):  # real signature unknown; restored from __doc__
        """ QLabel.selectedText() -> QString """
        pass

    def selectionStart(self):  # real signature unknown; restored from __doc__
        """ QLabel.selectionStart() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setAlignment(self, Qt_Alignment):
        """ QLabel.setAlignment(Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setBuddy(self, QWidget):
        """ QLabel.setBuddy(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setIndent(self, p_int):
        """ QLabel.setIndent(int) """
        pass

    # real signature unknown; restored from __doc__
    def setMargin(self, p_int):
        """ QLabel.setMargin(int) """
        pass

    # real signature unknown; restored from __doc__
    def setMovie(self, QMovie):
        """ QLabel.setMovie(QMovie) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setNum(self, *__args):
        """
        QLabel.setNum(float)
        QLabel.setNum(int)
        """
        pass

    # real signature unknown; restored from __doc__
    def setOpenExternalLinks(self, bool):
        """ QLabel.setOpenExternalLinks(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setPicture(self, QPicture):
        """ QLabel.setPicture(QPicture) """
        pass

    # real signature unknown; restored from __doc__
    def setPixmap(self, QPixmap):
        """ QLabel.setPixmap(QPixmap) """
        pass

    # real signature unknown; restored from __doc__
    def setScaledContents(self, bool):
        """ QLabel.setScaledContents(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSelection(self, p_int, p_int_1):
        """ QLabel.setSelection(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, QString):
        """ QLabel.setText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTextFormat(self, Qt_TextFormat):
        """ QLabel.setTextFormat(Qt.TextFormat) """
        pass

    # real signature unknown; restored from __doc__
    def setTextInteractionFlags(self, Qt_TextInteractionFlags):
        """ QLabel.setTextInteractionFlags(Qt.TextInteractionFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setWordWrap(self, bool):
        """ QLabel.setWordWrap(bool) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QLabel.sizeHint() -> QSize """
        pass

    def text(self):  # real signature unknown; restored from __doc__
        """ QLabel.text() -> QString """
        pass

    def textFormat(self):  # real signature unknown; restored from __doc__
        """ QLabel.textFormat() -> Qt.TextFormat """
        pass

    # real signature unknown; restored from __doc__
    def textInteractionFlags(self):
        """ QLabel.textInteractionFlags() -> Qt.TextInteractionFlags """
        pass

    def wordWrap(self):  # real signature unknown; restored from __doc__
        """ QLabel.wordWrap() -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QLCDNumber(QFrame):

    """
    QLCDNumber(QWidget parent=None)
    QLCDNumber(int, QWidget parent=None)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def checkOverflow(self, *__args):
        """
        QLCDNumber.checkOverflow(float) -> bool
        QLCDNumber.checkOverflow(int) -> bool
        """
        return False

    def digitCount(self):  # real signature unknown; restored from __doc__
        """ QLCDNumber.digitCount() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def display(self, *__args):
        """
        QLCDNumber.display(QString)
        QLCDNumber.display(float)
        QLCDNumber.display(int)
        """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QLCDNumber.event(QEvent) -> bool """
        return False

    def intValue(self):  # real signature unknown; restored from __doc__
        """ QLCDNumber.intValue() -> int """
        return 0

    def Mode(self, *args, **kwargs):  # real signature unknown
        pass

    def mode(self):  # real signature unknown; restored from __doc__
        """ QLCDNumber.mode() -> QLCDNumber.Mode """
        pass

    def numDigits(self):  # real signature unknown; restored from __doc__
        """ QLCDNumber.numDigits() -> int """
        return 0

    def overflow(self, *args, **kwargs):  # real signature unknown
        """ QLCDNumber.overflow[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QLCDNumber.paintEvent(QPaintEvent) """
        pass

    def segmentStyle(self):  # real signature unknown; restored from __doc__
        """ QLCDNumber.segmentStyle() -> QLCDNumber.SegmentStyle """
        pass

    def SegmentStyle(self, *args, **kwargs):  # real signature unknown
        pass

    def setBinMode(self):  # real signature unknown; restored from __doc__
        """ QLCDNumber.setBinMode() """
        pass

    def setDecMode(self):  # real signature unknown; restored from __doc__
        """ QLCDNumber.setDecMode() """
        pass

    # real signature unknown; restored from __doc__
    def setDigitCount(self, p_int):
        """ QLCDNumber.setDigitCount(int) """
        pass

    def setHexMode(self):  # real signature unknown; restored from __doc__
        """ QLCDNumber.setHexMode() """
        pass

    # real signature unknown; restored from __doc__
    def setMode(self, QLCDNumber_Mode):
        """ QLCDNumber.setMode(QLCDNumber.Mode) """
        pass

    # real signature unknown; restored from __doc__
    def setNumDigits(self, p_int):
        """ QLCDNumber.setNumDigits(int) """
        pass

    def setOctMode(self):  # real signature unknown; restored from __doc__
        """ QLCDNumber.setOctMode() """
        pass

    # real signature unknown; restored from __doc__
    def setSegmentStyle(self, QLCDNumber_SegmentStyle):
        """ QLCDNumber.setSegmentStyle(QLCDNumber.SegmentStyle) """
        pass

    # real signature unknown; restored from __doc__
    def setSmallDecimalPoint(self, bool):
        """ QLCDNumber.setSmallDecimalPoint(bool) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QLCDNumber.sizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def smallDecimalPoint(self):
        """ QLCDNumber.smallDecimalPoint() -> bool """
        return False

    def value(self):  # real signature unknown; restored from __doc__
        """ QLCDNumber.value() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    Bin = 3
    Dec = 1
    Filled = 1
    Flat = 2
    Hex = 0
    Oct = 2
    Outline = 0


class QLinearGradient(QGradient):

    """
    QLinearGradient()
    QLinearGradient(QPointF, QPointF)
    QLinearGradient(float, float, float, float)
    QLinearGradient(QLinearGradient)
    """

    def finalStop(self):  # real signature unknown; restored from __doc__
        """ QLinearGradient.finalStop() -> QPointF """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setFinalStop(self, *__args):
        """
        QLinearGradient.setFinalStop(QPointF)
        QLinearGradient.setFinalStop(float, float)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setStart(self, *__args):
        """
        QLinearGradient.setStart(QPointF)
        QLinearGradient.setStart(float, float)
        """
        pass

    def start(self):  # real signature unknown; restored from __doc__
        """ QLinearGradient.start() -> QPointF """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QLineEdit(QWidget):

    """
    QLineEdit(QWidget parent=None)
    QLineEdit(QString, QWidget parent=None)
    """

    def alignment(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.alignment() -> Qt.Alignment """
        pass

    def backspace(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.backspace() """
        pass

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QLineEdit.changeEvent(QEvent) """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.clear() """
        pass

    def completer(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.completer() -> QCompleter """
        return QCompleter

    # real signature unknown; restored from __doc__
    def contextMenuEvent(self, QContextMenuEvent):
        """ QLineEdit.contextMenuEvent(QContextMenuEvent) """
        pass

    def copy(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.copy() """
        pass

    # real signature unknown; restored from __doc__
    def createStandardContextMenu(self):
        """ QLineEdit.createStandardContextMenu() -> QMenu """
        return QMenu

    # real signature unknown; restored from __doc__
    def cursorBackward(self, bool, int_steps=1):
        """ QLineEdit.cursorBackward(bool, int steps=1) """
        pass

    # real signature unknown; restored from __doc__
    def cursorForward(self, bool, int_steps=1):
        """ QLineEdit.cursorForward(bool, int steps=1) """
        pass

    def cursorPosition(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.cursorPosition() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def cursorPositionAt(self, QPoint):
        """ QLineEdit.cursorPositionAt(QPoint) -> int """
        return 0

    def cursorPositionChanged(self, *args, **kwargs):  # real signature unknown
        """ QLineEdit.cursorPositionChanged[int, int] [signal] """
        pass

    def cursorRect(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.cursorRect() -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def cursorWordBackward(self, bool):
        """ QLineEdit.cursorWordBackward(bool) """
        pass

    # real signature unknown; restored from __doc__
    def cursorWordForward(self, bool):
        """ QLineEdit.cursorWordForward(bool) """
        pass

    def cut(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.cut() """
        pass

    def del_(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.del_() """
        pass

    def deselect(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.deselect() """
        pass

    def displayText(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.displayText() -> QString """
        pass

    def dragEnabled(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.dragEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def dragEnterEvent(self, QDragEnterEvent):
        """ QLineEdit.dragEnterEvent(QDragEnterEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragLeaveEvent(self, QDragLeaveEvent):
        """ QLineEdit.dragLeaveEvent(QDragLeaveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragMoveEvent(self, QDragMoveEvent):
        """ QLineEdit.dragMoveEvent(QDragMoveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dropEvent(self, QDropEvent):
        """ QLineEdit.dropEvent(QDropEvent) """
        pass

    def echoMode(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.echoMode() -> QLineEdit.EchoMode """
        pass

    def EchoMode(self, *args, **kwargs):  # real signature unknown
        pass

    def editingFinished(self, *args, **kwargs):  # real signature unknown
        """ QLineEdit.editingFinished[] [signal] """
        pass

    def end(self, bool):  # real signature unknown; restored from __doc__
        """ QLineEdit.end(bool) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QLineEdit.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QLineEdit.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QLineEdit.focusOutEvent(QFocusEvent) """
        pass

    def getTextMargins(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.getTextMargins() -> (int, int, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def hasAcceptableInput(self):
        """ QLineEdit.hasAcceptableInput() -> bool """
        return False

    def hasFrame(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.hasFrame() -> bool """
        return False

    def hasSelectedText(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.hasSelectedText() -> bool """
        return False

    def home(self, bool):  # real signature unknown; restored from __doc__
        """ QLineEdit.home(bool) """
        pass

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionFrame):
        """ QLineEdit.initStyleOption(QStyleOptionFrame) """
        pass

    def inputMask(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.inputMask() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodEvent(self, QInputMethodEvent):
        """ QLineEdit.inputMethodEvent(QInputMethodEvent) """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodQuery(self, Qt_InputMethodQuery):
        """ QLineEdit.inputMethodQuery(Qt.InputMethodQuery) -> QVariant """
        pass

    def insert(self, QString):  # real signature unknown; restored from __doc__
        """ QLineEdit.insert(QString) """
        pass

    def isModified(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.isModified() -> bool """
        return False

    def isReadOnly(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.isReadOnly() -> bool """
        return False

    def isRedoAvailable(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.isRedoAvailable() -> bool """
        return False

    def isUndoAvailable(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.isUndoAvailable() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QLineEdit.keyPressEvent(QKeyEvent) """
        pass

    def maxLength(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.maxLength() -> int """
        return 0

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def mouseDoubleClickEvent(self, QMouseEvent):
        """ QLineEdit.mouseDoubleClickEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QLineEdit.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QLineEdit.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QLineEdit.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QLineEdit.paintEvent(QPaintEvent) """
        pass

    def paste(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.paste() """
        pass

    def placeholderText(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.placeholderText() -> QString """
        pass

    def redo(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.redo() """
        pass

    def returnPressed(self, *args, **kwargs):  # real signature unknown
        """ QLineEdit.returnPressed[] [signal] """
        pass

    def selectAll(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.selectAll() """
        pass

    def selectedText(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.selectedText() -> QString """
        pass

    def selectionChanged(self, *args, **kwargs):  # real signature unknown
        """ QLineEdit.selectionChanged[] [signal] """
        pass

    def selectionStart(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.selectionStart() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setAlignment(self, Qt_Alignment):
        """ QLineEdit.setAlignment(Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setCompleter(self, QCompleter):
        """ QLineEdit.setCompleter(QCompleter) """
        pass

    # real signature unknown; restored from __doc__
    def setCursorPosition(self, p_int):
        """ QLineEdit.setCursorPosition(int) """
        pass

    # real signature unknown; restored from __doc__
    def setDragEnabled(self, bool):
        """ QLineEdit.setDragEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setEchoMode(self, QLineEdit_EchoMode):
        """ QLineEdit.setEchoMode(QLineEdit.EchoMode) """
        pass

    def setFrame(self, bool):  # real signature unknown; restored from __doc__
        """ QLineEdit.setFrame(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setInputMask(self, QString):
        """ QLineEdit.setInputMask(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setMaxLength(self, p_int):
        """ QLineEdit.setMaxLength(int) """
        pass

    # real signature unknown; restored from __doc__
    def setModified(self, bool):
        """ QLineEdit.setModified(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setPlaceholderText(self, QString):
        """ QLineEdit.setPlaceholderText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setReadOnly(self, bool):
        """ QLineEdit.setReadOnly(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSelection(self, p_int, p_int_1):
        """ QLineEdit.setSelection(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, QString):
        """ QLineEdit.setText(QString) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setTextMargins(self, *__args):
        """
        QLineEdit.setTextMargins(int, int, int, int)
        QLineEdit.setTextMargins(QMargins)
        """
        pass

    # real signature unknown; restored from __doc__
    def setValidator(self, QValidator):
        """ QLineEdit.setValidator(QValidator) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.sizeHint() -> QSize """
        pass

    def text(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.text() -> QString """
        pass

    def textChanged(self, *args, **kwargs):  # real signature unknown
        """ QLineEdit.textChanged[QString] [signal] """
        pass

    def textEdited(self, *args, **kwargs):  # real signature unknown
        """ QLineEdit.textEdited[QString] [signal] """
        pass

    def textMargins(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.textMargins() -> QMargins """
        pass

    def undo(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.undo() """
        pass

    def validator(self):  # real signature unknown; restored from __doc__
        """ QLineEdit.validator() -> QValidator """
        return QValidator

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    NoEcho = 1
    Normal = 0
    Password = 2
    PasswordEchoOnEdit = 3


class QListView(QAbstractItemView):

    """ QListView(QWidget parent=None) """

    def batchSize(self):  # real signature unknown; restored from __doc__
        """ QListView.batchSize() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def clearPropertyFlags(self):
        """ QListView.clearPropertyFlags() """
        pass

    # real signature unknown; restored from __doc__
    def currentChanged(self, QModelIndex, QModelIndex_1):
        """ QListView.currentChanged(QModelIndex, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def dataChanged(self, QModelIndex, QModelIndex_1):
        """ QListView.dataChanged(QModelIndex, QModelIndex) """
        pass

    def doItemsLayout(self):  # real signature unknown; restored from __doc__
        """ QListView.doItemsLayout() """
        pass

    # real signature unknown; restored from __doc__
    def dragLeaveEvent(self, QDragLeaveEvent):
        """ QListView.dragLeaveEvent(QDragLeaveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragMoveEvent(self, QDragMoveEvent):
        """ QListView.dragMoveEvent(QDragMoveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dropEvent(self, QDropEvent):
        """ QListView.dropEvent(QDropEvent) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QListView.event(QEvent) -> bool """
        return False

    def Flow(self, *args, **kwargs):  # real signature unknown
        pass

    def flow(self):  # real signature unknown; restored from __doc__
        """ QListView.flow() -> QListView.Flow """
        pass

    def gridSize(self):  # real signature unknown; restored from __doc__
        """ QListView.gridSize() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def horizontalOffset(self):
        """ QListView.horizontalOffset() -> int """
        return 0

    def indexAt(self, QPoint):  # real signature unknown; restored from __doc__
        """ QListView.indexAt(QPoint) -> QModelIndex """
        pass

    def indexesMoved(self, *args, **kwargs):  # real signature unknown
        """ QListView.indexesMoved[list-of-QModelIndex] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def isIndexHidden(self, QModelIndex):
        """ QListView.isIndexHidden(QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isRowHidden(self, p_int):
        """ QListView.isRowHidden(int) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isSelectionRectVisible(self):
        """ QListView.isSelectionRectVisible() -> bool """
        return False

    def isWrapping(self):  # real signature unknown; restored from __doc__
        """ QListView.isWrapping() -> bool """
        return False

    def layoutMode(self):  # real signature unknown; restored from __doc__
        """ QListView.layoutMode() -> QListView.LayoutMode """
        pass

    def LayoutMode(self, *args, **kwargs):  # real signature unknown
        pass

    def modelColumn(self):  # real signature unknown; restored from __doc__
        """ QListView.modelColumn() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QListView.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QListView.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def moveCursor(self, QAbstractItemView_CursorAction, Qt_KeyboardModifiers):
        """ QListView.moveCursor(QAbstractItemView.CursorAction, Qt.KeyboardModifiers) -> QModelIndex """
        pass

    def Movement(self, *args, **kwargs):  # real signature unknown
        pass

    def movement(self):  # real signature unknown; restored from __doc__
        """ QListView.movement() -> QListView.Movement """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QListView.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def rectForIndex(self, QModelIndex):
        """ QListView.rectForIndex(QModelIndex) -> QRect """
        pass

    def reset(self):  # real signature unknown; restored from __doc__
        """ QListView.reset() """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QListView.resizeEvent(QResizeEvent) """
        pass

    def ResizeMode(self, *args, **kwargs):  # real signature unknown
        pass

    def resizeMode(self):  # real signature unknown; restored from __doc__
        """ QListView.resizeMode() -> QListView.ResizeMode """
        pass

    # real signature unknown; restored from __doc__
    def rowsAboutToBeRemoved(self, QModelIndex, p_int, p_int_1):
        """ QListView.rowsAboutToBeRemoved(QModelIndex, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def rowsInserted(self, QModelIndex, p_int, p_int_1):
        """ QListView.rowsInserted(QModelIndex, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def scrollContentsBy(self, p_int, p_int_1):
        """ QListView.scrollContentsBy(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def scrollTo(self, QModelIndex, QAbstractItemView_ScrollHint_hint=None):
        """ QListView.scrollTo(QModelIndex, QAbstractItemView.ScrollHint hint=QAbstractItemView.EnsureVisible) """
        pass

    def selectedIndexes(self):  # real signature unknown; restored from __doc__
        """ QListView.selectedIndexes() -> list-of-QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def selectionChanged(self, QItemSelection, QItemSelection_1):
        """ QListView.selectionChanged(QItemSelection, QItemSelection) """
        pass

    # real signature unknown; restored from __doc__
    def setBatchSize(self, p_int):
        """ QListView.setBatchSize(int) """
        pass

    # real signature unknown; restored from __doc__
    def setFlow(self, QListView_Flow):
        """ QListView.setFlow(QListView.Flow) """
        pass

    # real signature unknown; restored from __doc__
    def setGridSize(self, QSize):
        """ QListView.setGridSize(QSize) """
        pass

    # real signature unknown; restored from __doc__
    def setLayoutMode(self, QListView_LayoutMode):
        """ QListView.setLayoutMode(QListView.LayoutMode) """
        pass

    # real signature unknown; restored from __doc__
    def setModelColumn(self, p_int):
        """ QListView.setModelColumn(int) """
        pass

    # real signature unknown; restored from __doc__
    def setMovement(self, QListView_Movement):
        """ QListView.setMovement(QListView.Movement) """
        pass

    # real signature unknown; restored from __doc__
    def setPositionForIndex(self, QPoint, QModelIndex):
        """ QListView.setPositionForIndex(QPoint, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def setResizeMode(self, QListView_ResizeMode):
        """ QListView.setResizeMode(QListView.ResizeMode) """
        pass

    # real signature unknown; restored from __doc__
    def setRootIndex(self, QModelIndex):
        """ QListView.setRootIndex(QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def setRowHidden(self, p_int, bool):
        """ QListView.setRowHidden(int, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSelection(self, QRect, QItemSelectionModel_SelectionFlags):
        """ QListView.setSelection(QRect, QItemSelectionModel.SelectionFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setSelectionRectVisible(self, bool):
        """ QListView.setSelectionRectVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSpacing(self, p_int):
        """ QListView.setSpacing(int) """
        pass

    # real signature unknown; restored from __doc__
    def setUniformItemSizes(self, bool):
        """ QListView.setUniformItemSizes(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setViewMode(self, QListView_ViewMode):
        """ QListView.setViewMode(QListView.ViewMode) """
        pass

    # real signature unknown; restored from __doc__
    def setWordWrap(self, bool):
        """ QListView.setWordWrap(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setWrapping(self, bool):
        """ QListView.setWrapping(bool) """
        pass

    def spacing(self):  # real signature unknown; restored from __doc__
        """ QListView.spacing() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def startDrag(self, Qt_DropActions):
        """ QListView.startDrag(Qt.DropActions) """
        pass

    # real signature unknown; restored from __doc__
    def timerEvent(self, QTimerEvent):
        """ QListView.timerEvent(QTimerEvent) """
        pass

    # real signature unknown; restored from __doc__
    def uniformItemSizes(self):
        """ QListView.uniformItemSizes() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def updateGeometries(self):
        """ QListView.updateGeometries() """
        pass

    def verticalOffset(self):  # real signature unknown; restored from __doc__
        """ QListView.verticalOffset() -> int """
        return 0

    def ViewMode(self, *args, **kwargs):  # real signature unknown
        pass

    def viewMode(self):  # real signature unknown; restored from __doc__
        """ QListView.viewMode() -> QListView.ViewMode """
        pass

    def viewOptions(self):  # real signature unknown; restored from __doc__
        """ QListView.viewOptions() -> QStyleOptionViewItem """
        return QStyleOptionViewItem

    # real signature unknown; restored from __doc__
    def visualRect(self, QModelIndex):
        """ QListView.visualRect(QModelIndex) -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def visualRegionForSelection(self, QItemSelection):
        """ QListView.visualRegionForSelection(QItemSelection) -> QRegion """
        return QRegion

    def wordWrap(self):  # real signature unknown; restored from __doc__
        """ QListView.wordWrap() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    Adjust = 1
    Batched = 1
    Fixed = 0
    Free = 1
    IconMode = 1
    LeftToRight = 0
    ListMode = 0
    SinglePass = 0
    Snap = 2
    Static = 0
    TopToBottom = 1


class QListWidget(QListView):

    """ QListWidget(QWidget parent=None) """
    # real signature unknown; restored from __doc__ with multiple overloads

    def addItem(self, *__args):
        """
        QListWidget.addItem(QListWidgetItem)
        QListWidget.addItem(QString)
        """
        pass

    # real signature unknown; restored from __doc__
    def addItems(self, QStringList):
        """ QListWidget.addItems(QStringList) """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QListWidget.clear() """
        pass

    # real signature unknown; restored from __doc__
    def closePersistentEditor(self, QListWidgetItem):
        """ QListWidget.closePersistentEditor(QListWidgetItem) """
        pass

    def count(self):  # real signature unknown; restored from __doc__
        """ QListWidget.count() -> int """
        return 0

    def currentItem(self):  # real signature unknown; restored from __doc__
        """ QListWidget.currentItem() -> QListWidgetItem """
        return QListWidgetItem

    def currentItemChanged(self, *args, **kwargs):  # real signature unknown
        """ QListWidget.currentItemChanged[QListWidgetItem, QListWidgetItem] [signal] """
        pass

    def currentRow(self):  # real signature unknown; restored from __doc__
        """ QListWidget.currentRow() -> int """
        return 0

    def currentRowChanged(self, *args, **kwargs):  # real signature unknown
        """ QListWidget.currentRowChanged[int] [signal] """
        pass

    def currentTextChanged(self, *args, **kwargs):  # real signature unknown
        """ QListWidget.currentTextChanged[QString] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def dropEvent(self, QDropEvent):
        """ QListWidget.dropEvent(QDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dropMimeData(self, p_int, QMimeData, Qt_DropAction):
        """ QListWidget.dropMimeData(int, QMimeData, Qt.DropAction) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def editItem(self, QListWidgetItem):
        """ QListWidget.editItem(QListWidgetItem) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QListWidget.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def findItems(self, QString, Qt_MatchFlags):
        """ QListWidget.findItems(QString, Qt.MatchFlags) -> list-of-QListWidgetItem """
        pass

    # real signature unknown; restored from __doc__
    def indexFromItem(self, QListWidgetItem):
        """ QListWidget.indexFromItem(QListWidgetItem) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def insertItem(self, p_int, *__args):
        """
        QListWidget.insertItem(int, QListWidgetItem)
        QListWidget.insertItem(int, QString)
        """
        pass

    # real signature unknown; restored from __doc__
    def insertItems(self, p_int, QStringList):
        """ QListWidget.insertItems(int, QStringList) """
        pass

    # real signature unknown; restored from __doc__
    def isItemHidden(self, QListWidgetItem):
        """ QListWidget.isItemHidden(QListWidgetItem) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isItemSelected(self, QListWidgetItem):
        """ QListWidget.isItemSelected(QListWidgetItem) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isSortingEnabled(self):
        """ QListWidget.isSortingEnabled() -> bool """
        return False

    def item(self, p_int):  # real signature unknown; restored from __doc__
        """ QListWidget.item(int) -> QListWidgetItem """
        return QListWidgetItem

    def itemActivated(self, *args, **kwargs):  # real signature unknown
        """ QListWidget.itemActivated[QListWidgetItem] [signal] """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def itemAt(self, *__args):
        """
        QListWidget.itemAt(QPoint) -> QListWidgetItem
        QListWidget.itemAt(int, int) -> QListWidgetItem
        """
        return QListWidgetItem

    def itemChanged(self, *args, **kwargs):  # real signature unknown
        """ QListWidget.itemChanged[QListWidgetItem] [signal] """
        pass

    def itemClicked(self, *args, **kwargs):  # real signature unknown
        """ QListWidget.itemClicked[QListWidgetItem] [signal] """
        pass

    def itemDoubleClicked(self, *args, **kwargs):  # real signature unknown
        """ QListWidget.itemDoubleClicked[QListWidgetItem] [signal] """
        pass

    def itemEntered(self, *args, **kwargs):  # real signature unknown
        """ QListWidget.itemEntered[QListWidgetItem] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def itemFromIndex(self, QModelIndex):
        """ QListWidget.itemFromIndex(QModelIndex) -> QListWidgetItem """
        return QListWidgetItem

    def itemPressed(self, *args, **kwargs):  # real signature unknown
        """ QListWidget.itemPressed[QListWidgetItem] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def items(self, QMimeData):
        """ QListWidget.items(QMimeData) -> list-of-QListWidgetItem """
        pass

    def itemSelectionChanged(self, *args, **kwargs):  # real signature unknown
        """ QListWidget.itemSelectionChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def itemWidget(self, QListWidgetItem):
        """ QListWidget.itemWidget(QListWidgetItem) -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def mimeData(self, list_of_QListWidgetItem):
        """ QListWidget.mimeData(list-of-QListWidgetItem) -> QMimeData """
        pass

    def mimeTypes(self):  # real signature unknown; restored from __doc__
        """ QListWidget.mimeTypes() -> QStringList """
        pass

    # real signature unknown; restored from __doc__
    def openPersistentEditor(self, QListWidgetItem):
        """ QListWidget.openPersistentEditor(QListWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def removeItemWidget(self, QListWidgetItem):
        """ QListWidget.removeItemWidget(QListWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def row(self, QListWidgetItem):
        """ QListWidget.row(QListWidgetItem) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def scrollToItem(self, QListWidgetItem, QAbstractItemView_ScrollHint_hint=None):
        """ QListWidget.scrollToItem(QListWidgetItem, QAbstractItemView.ScrollHint hint=QAbstractItemView.EnsureVisible) """
        pass

    def selectedItems(self):  # real signature unknown; restored from __doc__
        """ QListWidget.selectedItems() -> list-of-QListWidgetItem """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setCurrentItem(self, QListWidgetItem, QItemSelectionModel_SelectionFlags=None):
        """
        QListWidget.setCurrentItem(QListWidgetItem)
        QListWidget.setCurrentItem(QListWidgetItem, QItemSelectionModel.SelectionFlags)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setCurrentRow(self, p_int, QItemSelectionModel_SelectionFlags=None):
        """
        QListWidget.setCurrentRow(int)
        QListWidget.setCurrentRow(int, QItemSelectionModel.SelectionFlags)
        """
        pass

    # real signature unknown; restored from __doc__
    def setItemHidden(self, QListWidgetItem, bool):
        """ QListWidget.setItemHidden(QListWidgetItem, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setItemSelected(self, QListWidgetItem, bool):
        """ QListWidget.setItemSelected(QListWidgetItem, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setItemWidget(self, QListWidgetItem, QWidget):
        """ QListWidget.setItemWidget(QListWidgetItem, QWidget) """
        pass

    def setModel(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def setSortingEnabled(self, bool):
        """ QListWidget.setSortingEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def sortItems(self, Qt_SortOrder_order=None):
        """ QListWidget.sortItems(Qt.SortOrder order=Qt.AscendingOrder) """
        pass

    # real signature unknown; restored from __doc__
    def supportedDropActions(self):
        """ QListWidget.supportedDropActions() -> Qt.DropActions """
        pass

    def takeItem(self, p_int):  # real signature unknown; restored from __doc__
        """ QListWidget.takeItem(int) -> QListWidgetItem """
        return QListWidgetItem

    # real signature unknown; restored from __doc__
    def visualItemRect(self, QListWidgetItem):
        """ QListWidget.visualItemRect(QListWidgetItem) -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass


class QListWidgetItem():  # skipped bases: <type 'sip.wrapper'>

    """
    QListWidgetItem(QListWidget parent=None, int type=QListWidgetItem.Type)
    QListWidgetItem(QString, QListWidget parent=None, int type=QListWidgetItem.Type)
    QListWidgetItem(QIcon, QString, QListWidget parent=None, int type=QListWidgetItem.Type)
    QListWidgetItem(QListWidgetItem)
    """

    def background(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.background() -> QBrush """
        return QBrush

    def backgroundColor(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.backgroundColor() -> QColor """
        return QColor

    def checkState(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.checkState() -> Qt.CheckState """
        pass

    def clone(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.clone() -> QListWidgetItem """
        return QListWidgetItem

    def data(self, p_int):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.data(int) -> QVariant """
        pass

    def flags(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.flags() -> Qt.ItemFlags """
        pass

    def font(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.font() -> QFont """
        return QFont

    def foreground(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.foreground() -> QBrush """
        return QBrush

    def icon(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.icon() -> QIcon """
        return QIcon

    def isHidden(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.isHidden() -> bool """
        return False

    def isSelected(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.isSelected() -> bool """
        return False

    def ItemType(self, *args, **kwargs):  # real signature unknown
        pass

    def listWidget(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.listWidget() -> QListWidget """
        return QListWidget

    # real signature unknown; restored from __doc__
    def read(self, QDataStream):
        """ QListWidgetItem.read(QDataStream) """
        pass

    # real signature unknown; restored from __doc__
    def setBackground(self, QBrush):
        """ QListWidgetItem.setBackground(QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def setBackgroundColor(self, QColor):
        """ QListWidgetItem.setBackgroundColor(QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setCheckState(self, Qt_CheckState):
        """ QListWidgetItem.setCheckState(Qt.CheckState) """
        pass

    # real signature unknown; restored from __doc__
    def setData(self, p_int, QVariant):
        """ QListWidgetItem.setData(int, QVariant) """
        pass

    # real signature unknown; restored from __doc__
    def setFlags(self, Qt_ItemFlags):
        """ QListWidgetItem.setFlags(Qt.ItemFlags) """
        pass

    def setFont(self, QFont):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.setFont(QFont) """
        pass

    # real signature unknown; restored from __doc__
    def setForeground(self, QBrush):
        """ QListWidgetItem.setForeground(QBrush) """
        pass

    def setHidden(self, bool):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.setHidden(bool) """
        pass

    def setIcon(self, QIcon):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.setIcon(QIcon) """
        pass

    # real signature unknown; restored from __doc__
    def setSelected(self, bool):
        """ QListWidgetItem.setSelected(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSizeHint(self, QSize):
        """ QListWidgetItem.setSizeHint(QSize) """
        pass

    # real signature unknown; restored from __doc__
    def setStatusTip(self, QString):
        """ QListWidgetItem.setStatusTip(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, QString):
        """ QListWidgetItem.setText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTextAlignment(self, p_int):
        """ QListWidgetItem.setTextAlignment(int) """
        pass

    # real signature unknown; restored from __doc__
    def setTextColor(self, QColor):
        """ QListWidgetItem.setTextColor(QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setToolTip(self, QString):
        """ QListWidgetItem.setToolTip(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setWhatsThis(self, QString):
        """ QListWidgetItem.setWhatsThis(QString) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.sizeHint() -> QSize """
        pass

    def statusTip(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.statusTip() -> QString """
        pass

    def text(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.text() -> QString """
        pass

    def textAlignment(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.textAlignment() -> int """
        return 0

    def textColor(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.textColor() -> QColor """
        return QColor

    def toolTip(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.toolTip() -> QString """
        pass

    def type(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.type() -> int """
        return 0

    def whatsThis(self):  # real signature unknown; restored from __doc__
        """ QListWidgetItem.whatsThis() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def write(self, QDataStream):
        """ QListWidgetItem.write(QDataStream) """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default

    Type = 0
    UserType = 1000


class QMainWindow(QWidget):

    """ QMainWindow(QWidget parent=None, Qt.WindowFlags flags=0) """
    # real signature unknown; restored from __doc__ with multiple overloads

    def addDockWidget(self, Qt_DockWidgetArea, QDockWidget, Qt_Orientation=None):
        """
        QMainWindow.addDockWidget(Qt.DockWidgetArea, QDockWidget)
        QMainWindow.addDockWidget(Qt.DockWidgetArea, QDockWidget, Qt.Orientation)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def addToolBar(self, *__args):
        """
        QMainWindow.addToolBar(Qt.ToolBarArea, QToolBar)
        QMainWindow.addToolBar(QToolBar)
        QMainWindow.addToolBar(QString) -> QToolBar
        """
        return QToolBar

    # real signature unknown; restored from __doc__
    def addToolBarBreak(self, Qt_ToolBarArea_area=None):
        """ QMainWindow.addToolBarBreak(Qt.ToolBarArea area=Qt.TopToolBarArea) """
        pass

    def centralWidget(self):  # real signature unknown; restored from __doc__
        """ QMainWindow.centralWidget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def contextMenuEvent(self, QContextMenuEvent):
        """ QMainWindow.contextMenuEvent(QContextMenuEvent) """
        pass

    # real signature unknown; restored from __doc__
    def corner(self, Qt_Corner):
        """ QMainWindow.corner(Qt.Corner) -> Qt.DockWidgetArea """
        pass

    def createPopupMenu(self):  # real signature unknown; restored from __doc__
        """ QMainWindow.createPopupMenu() -> QMenu """
        return QMenu

    def DockOption(self, *args, **kwargs):  # real signature unknown
        pass

    def dockOptions(self):  # real signature unknown; restored from __doc__
        """ QMainWindow.dockOptions() -> QMainWindow.DockOptions """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def DockOptions(self, *__args):
        """
        QMainWindow.DockOptions(QMainWindow.DockOptions)
        QMainWindow.DockOptions(int)
        QMainWindow.DockOptions()
        """
        pass

    # real signature unknown; restored from __doc__
    def dockWidgetArea(self, QDockWidget):
        """ QMainWindow.dockWidgetArea(QDockWidget) -> Qt.DockWidgetArea """
        pass

    def documentMode(self):  # real signature unknown; restored from __doc__
        """ QMainWindow.documentMode() -> bool """
        return False

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QMainWindow.event(QEvent) -> bool """
        return False

    def iconSize(self):  # real signature unknown; restored from __doc__
        """ QMainWindow.iconSize() -> QSize """
        pass

    def iconSizeChanged(self, *args, **kwargs):  # real signature unknown
        """ QMainWindow.iconSizeChanged[QSize] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def insertToolBar(self, QToolBar, QToolBar_1):
        """ QMainWindow.insertToolBar(QToolBar, QToolBar) """
        pass

    # real signature unknown; restored from __doc__
    def insertToolBarBreak(self, QToolBar):
        """ QMainWindow.insertToolBarBreak(QToolBar) """
        pass

    def isAnimated(self):  # real signature unknown; restored from __doc__
        """ QMainWindow.isAnimated() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isDockNestingEnabled(self):
        """ QMainWindow.isDockNestingEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isSeparator(self, QPoint):
        """ QMainWindow.isSeparator(QPoint) -> bool """
        return False

    def menuBar(self):  # real signature unknown; restored from __doc__
        """ QMainWindow.menuBar() -> QMenuBar """
        return QMenuBar

    def menuWidget(self):  # real signature unknown; restored from __doc__
        """ QMainWindow.menuWidget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def removeDockWidget(self, QDockWidget):
        """ QMainWindow.removeDockWidget(QDockWidget) """
        pass

    # real signature unknown; restored from __doc__
    def removeToolBar(self, QToolBar):
        """ QMainWindow.removeToolBar(QToolBar) """
        pass

    # real signature unknown; restored from __doc__
    def removeToolBarBreak(self, QToolBar):
        """ QMainWindow.removeToolBarBreak(QToolBar) """
        pass

    # real signature unknown; restored from __doc__
    def restoreDockWidget(self, QDockWidget):
        """ QMainWindow.restoreDockWidget(QDockWidget) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def restoreState(self, QByteArray, int_version=0):
        """ QMainWindow.restoreState(QByteArray, int version=0) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def saveState(self, int_version=0):
        """ QMainWindow.saveState(int version=0) -> QByteArray """
        pass

    # real signature unknown; restored from __doc__
    def setAnimated(self, bool):
        """ QMainWindow.setAnimated(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setCentralWidget(self, QWidget):
        """ QMainWindow.setCentralWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setCorner(self, Qt_Corner, Qt_DockWidgetArea):
        """ QMainWindow.setCorner(Qt.Corner, Qt.DockWidgetArea) """
        pass

    # real signature unknown; restored from __doc__
    def setDockNestingEnabled(self, bool):
        """ QMainWindow.setDockNestingEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setDockOptions(self, QMainWindow_DockOptions):
        """ QMainWindow.setDockOptions(QMainWindow.DockOptions) """
        pass

    # real signature unknown; restored from __doc__
    def setDocumentMode(self, bool):
        """ QMainWindow.setDocumentMode(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setIconSize(self, QSize):
        """ QMainWindow.setIconSize(QSize) """
        pass

    # real signature unknown; restored from __doc__
    def setMenuBar(self, QMenuBar):
        """ QMainWindow.setMenuBar(QMenuBar) """
        pass

    # real signature unknown; restored from __doc__
    def setMenuWidget(self, QWidget):
        """ QMainWindow.setMenuWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setStatusBar(self, QStatusBar):
        """ QMainWindow.setStatusBar(QStatusBar) """
        pass

    # real signature unknown; restored from __doc__
    def setTabPosition(self, Qt_DockWidgetAreas, QTabWidget_TabPosition):
        """ QMainWindow.setTabPosition(Qt.DockWidgetAreas, QTabWidget.TabPosition) """
        pass

    # real signature unknown; restored from __doc__
    def setTabShape(self, QTabWidget_TabShape):
        """ QMainWindow.setTabShape(QTabWidget.TabShape) """
        pass

    # real signature unknown; restored from __doc__
    def setToolButtonStyle(self, Qt_ToolButtonStyle):
        """ QMainWindow.setToolButtonStyle(Qt.ToolButtonStyle) """
        pass

    # real signature unknown; restored from __doc__
    def setUnifiedTitleAndToolBarOnMac(self, bool):
        """ QMainWindow.setUnifiedTitleAndToolBarOnMac(bool) """
        pass

    # real signature unknown; restored from __doc__
    def splitDockWidget(self, QDockWidget, QDockWidget_1, Qt_Orientation):
        """ QMainWindow.splitDockWidget(QDockWidget, QDockWidget, Qt.Orientation) """
        pass

    def statusBar(self):  # real signature unknown; restored from __doc__
        """ QMainWindow.statusBar() -> QStatusBar """
        return QStatusBar

    # real signature unknown; restored from __doc__
    def tabifiedDockWidgets(self, QDockWidget):
        """ QMainWindow.tabifiedDockWidgets(QDockWidget) -> list-of-QDockWidget """
        pass

    # real signature unknown; restored from __doc__
    def tabifyDockWidget(self, QDockWidget, QDockWidget_1):
        """ QMainWindow.tabifyDockWidget(QDockWidget, QDockWidget) """
        pass

    # real signature unknown; restored from __doc__
    def tabPosition(self, Qt_DockWidgetArea):
        """ QMainWindow.tabPosition(Qt.DockWidgetArea) -> QTabWidget.TabPosition """
        pass

    def tabShape(self):  # real signature unknown; restored from __doc__
        """ QMainWindow.tabShape() -> QTabWidget.TabShape """
        pass

    # real signature unknown; restored from __doc__
    def toolBarArea(self, QToolBar):
        """ QMainWindow.toolBarArea(QToolBar) -> Qt.ToolBarArea """
        pass

    # real signature unknown; restored from __doc__
    def toolBarBreak(self, QToolBar):
        """ QMainWindow.toolBarBreak(QToolBar) -> bool """
        return False

    def toolButtonStyle(self):  # real signature unknown; restored from __doc__
        """ QMainWindow.toolButtonStyle() -> Qt.ToolButtonStyle """
        pass

    # real signature unknown
    def toolButtonStyleChanged(self, *args, **kwargs):
        """ QMainWindow.toolButtonStyleChanged[Qt.ToolButtonStyle] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def unifiedTitleAndToolBarOnMac(self):
        """ QMainWindow.unifiedTitleAndToolBarOnMac() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None, Qt_WindowFlags_flags=0):
        pass

    AllowNestedDocks = 2
    AllowTabbedDocks = 4
    AnimatedDocks = 1
    ForceTabbedDocks = 8
    VerticalTabs = 16


class QMatrix():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QMatrix()
    QMatrix(float, float, float, float, float, float)
    QMatrix(QMatrix)
    """

    def det(self):  # real signature unknown; restored from __doc__
        """ QMatrix.det() -> float """
        return 0.0

    def determinant(self):  # real signature unknown; restored from __doc__
        """ QMatrix.determinant() -> float """
        return 0.0

    def dx(self):  # real signature unknown; restored from __doc__
        """ QMatrix.dx() -> float """
        return 0.0

    def dy(self):  # real signature unknown; restored from __doc__
        """ QMatrix.dy() -> float """
        return 0.0

    def inverted(self):  # real signature unknown; restored from __doc__
        """ QMatrix.inverted() -> (QMatrix, bool) """
        pass

    def isIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix.isIdentity() -> bool """
        return False

    def isInvertible(self):  # real signature unknown; restored from __doc__
        """ QMatrix.isInvertible() -> bool """
        return False

    def m11(self):  # real signature unknown; restored from __doc__
        """ QMatrix.m11() -> float """
        return 0.0

    def m12(self):  # real signature unknown; restored from __doc__
        """ QMatrix.m12() -> float """
        return 0.0

    def m21(self):  # real signature unknown; restored from __doc__
        """ QMatrix.m21() -> float """
        return 0.0

    def m22(self):  # real signature unknown; restored from __doc__
        """ QMatrix.m22() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def map(self, *__args):
        """
        QMatrix.map(int, int) -> (int, int)
        QMatrix.map(float, float) -> (float, float)
        QMatrix.map(QPoint) -> QPoint
        QMatrix.map(QPointF) -> QPointF
        QMatrix.map(QLine) -> QLine
        QMatrix.map(QLineF) -> QLineF
        QMatrix.map(QPolygonF) -> QPolygonF
        QMatrix.map(QPolygon) -> QPolygon
        QMatrix.map(QRegion) -> QRegion
        QMatrix.map(QPainterPath) -> QPainterPath
        """
        return QPolygonF or QPolygon or QRegion or QPainterPath

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapRect(self, *__args):
        """
        QMatrix.mapRect(QRect) -> QRect
        QMatrix.mapRect(QRectF) -> QRectF
        """
        pass

    # real signature unknown; restored from __doc__
    def mapToPolygon(self, QRect):
        """ QMatrix.mapToPolygon(QRect) -> QPolygon """
        return QPolygon

    def reset(self):  # real signature unknown; restored from __doc__
        """ QMatrix.reset() """
        pass

    def rotate(self, p_float):  # real signature unknown; restored from __doc__
        """ QMatrix.rotate(float) -> QMatrix """
        return QMatrix

    # real signature unknown; restored from __doc__
    def scale(self, p_float, p_float_1):
        """ QMatrix.scale(float, float) -> QMatrix """
        return QMatrix

    # real signature unknown; restored from __doc__
    def setMatrix(self, p_float, p_float_1, p_float_2, p_float_3, p_float_4, p_float_5):
        """ QMatrix.setMatrix(float, float, float, float, float, float) """
        pass

    # real signature unknown; restored from __doc__
    def shear(self, p_float, p_float_1):
        """ QMatrix.shear(float, float) -> QMatrix """
        return QMatrix

    # real signature unknown; restored from __doc__
    def translate(self, p_float, p_float_1):
        """ QMatrix.translate(float, float) -> QMatrix """
        return QMatrix

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __imul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__imul__(y) <==> x*y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __mul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__mul__(y) <==> x*y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    def __rmul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rmul__(y) <==> y*x """
        pass

    __weakref__ = property(lambda self: object())  # default


class QMatrix2x2():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QMatrix2x2()
    QMatrix2x2(QMatrix2x2)
    QMatrix2x2(sequence-of-float)
    """

    def copyDataTo(self):  # real signature unknown; restored from __doc__
        """ QMatrix2x2.copyDataTo() -> list-of-float """
        pass

    def data(self):  # real signature unknown; restored from __doc__
        """ QMatrix2x2.data() -> list-of-float """
        pass

    def fill(self, p_float):  # real signature unknown; restored from __doc__
        """ QMatrix2x2.fill(float) """
        pass

    def isIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix2x2.isIdentity() -> bool """
        return False

    def setToIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix2x2.setToIdentity() """
        pass

    def transposed(self):  # real signature unknown; restored from __doc__
        """ QMatrix2x2.transposed() -> QMatrix2x2 """
        return QMatrix2x2

    def __delitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__delitem__(y) <==> del x[y] """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __getitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    def __idiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__idiv__(y) <==> x/y """
        pass

    def __imul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__imul__(y) <==> x*y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    def __itruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__itruediv__(y) <==> x/y """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    def __repr__(self):  # real signature unknown; restored from __doc__
        """ x.__repr__() <==> repr(x) """
        pass

    # real signature unknown; restored from __doc__
    def __setitem__(self, i, y):
        """ x.__setitem__(i, y) <==> x[i]=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QMatrix2x3():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QMatrix2x3()
    QMatrix2x3(QMatrix2x3)
    QMatrix2x3(sequence-of-float)
    """

    def copyDataTo(self):  # real signature unknown; restored from __doc__
        """ QMatrix2x3.copyDataTo() -> list-of-float """
        pass

    def data(self):  # real signature unknown; restored from __doc__
        """ QMatrix2x3.data() -> list-of-float """
        pass

    def fill(self, p_float):  # real signature unknown; restored from __doc__
        """ QMatrix2x3.fill(float) """
        pass

    def isIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix2x3.isIdentity() -> bool """
        return False

    def setToIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix2x3.setToIdentity() """
        pass

    def transposed(self):  # real signature unknown; restored from __doc__
        """ QMatrix2x3.transposed() -> QMatrix3x2 """
        return QMatrix3x2

    def __delitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__delitem__(y) <==> del x[y] """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __getitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    def __idiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__idiv__(y) <==> x/y """
        pass

    def __imul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__imul__(y) <==> x*y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    def __itruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__itruediv__(y) <==> x/y """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    def __repr__(self):  # real signature unknown; restored from __doc__
        """ x.__repr__() <==> repr(x) """
        pass

    # real signature unknown; restored from __doc__
    def __setitem__(self, i, y):
        """ x.__setitem__(i, y) <==> x[i]=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QMatrix2x4():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QMatrix2x4()
    QMatrix2x4(QMatrix2x4)
    QMatrix2x4(sequence-of-float)
    """

    def copyDataTo(self):  # real signature unknown; restored from __doc__
        """ QMatrix2x4.copyDataTo() -> list-of-float """
        pass

    def data(self):  # real signature unknown; restored from __doc__
        """ QMatrix2x4.data() -> list-of-float """
        pass

    def fill(self, p_float):  # real signature unknown; restored from __doc__
        """ QMatrix2x4.fill(float) """
        pass

    def isIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix2x4.isIdentity() -> bool """
        return False

    def setToIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix2x4.setToIdentity() """
        pass

    def transposed(self):  # real signature unknown; restored from __doc__
        """ QMatrix2x4.transposed() -> QMatrix4x2 """
        return QMatrix4x2

    def __delitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__delitem__(y) <==> del x[y] """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __getitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    def __idiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__idiv__(y) <==> x/y """
        pass

    def __imul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__imul__(y) <==> x*y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    def __itruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__itruediv__(y) <==> x/y """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    def __repr__(self):  # real signature unknown; restored from __doc__
        """ x.__repr__() <==> repr(x) """
        pass

    # real signature unknown; restored from __doc__
    def __setitem__(self, i, y):
        """ x.__setitem__(i, y) <==> x[i]=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QMatrix3x2():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QMatrix3x2()
    QMatrix3x2(QMatrix3x2)
    QMatrix3x2(sequence-of-float)
    """

    def copyDataTo(self):  # real signature unknown; restored from __doc__
        """ QMatrix3x2.copyDataTo() -> list-of-float """
        pass

    def data(self):  # real signature unknown; restored from __doc__
        """ QMatrix3x2.data() -> list-of-float """
        pass

    def fill(self, p_float):  # real signature unknown; restored from __doc__
        """ QMatrix3x2.fill(float) """
        pass

    def isIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix3x2.isIdentity() -> bool """
        return False

    def setToIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix3x2.setToIdentity() """
        pass

    def transposed(self):  # real signature unknown; restored from __doc__
        """ QMatrix3x2.transposed() -> QMatrix2x3 """
        return QMatrix2x3

    def __delitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__delitem__(y) <==> del x[y] """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __getitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    def __idiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__idiv__(y) <==> x/y """
        pass

    def __imul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__imul__(y) <==> x*y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    def __itruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__itruediv__(y) <==> x/y """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    def __repr__(self):  # real signature unknown; restored from __doc__
        """ x.__repr__() <==> repr(x) """
        pass

    # real signature unknown; restored from __doc__
    def __setitem__(self, i, y):
        """ x.__setitem__(i, y) <==> x[i]=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QMatrix3x3():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QMatrix3x3()
    QMatrix3x3(QMatrix3x3)
    QMatrix3x3(sequence-of-float)
    """

    def copyDataTo(self):  # real signature unknown; restored from __doc__
        """ QMatrix3x3.copyDataTo() -> list-of-float """
        pass

    def data(self):  # real signature unknown; restored from __doc__
        """ QMatrix3x3.data() -> list-of-float """
        pass

    def fill(self, p_float):  # real signature unknown; restored from __doc__
        """ QMatrix3x3.fill(float) """
        pass

    def isIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix3x3.isIdentity() -> bool """
        return False

    def setToIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix3x3.setToIdentity() """
        pass

    def transposed(self):  # real signature unknown; restored from __doc__
        """ QMatrix3x3.transposed() -> QMatrix3x3 """
        return QMatrix3x3

    def __delitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__delitem__(y) <==> del x[y] """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __getitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    def __idiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__idiv__(y) <==> x/y """
        pass

    def __imul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__imul__(y) <==> x*y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    def __itruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__itruediv__(y) <==> x/y """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    def __repr__(self):  # real signature unknown; restored from __doc__
        """ x.__repr__() <==> repr(x) """
        pass

    # real signature unknown; restored from __doc__
    def __setitem__(self, i, y):
        """ x.__setitem__(i, y) <==> x[i]=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QMatrix3x4():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QMatrix3x4()
    QMatrix3x4(QMatrix3x4)
    QMatrix3x4(sequence-of-float)
    """

    def copyDataTo(self):  # real signature unknown; restored from __doc__
        """ QMatrix3x4.copyDataTo() -> list-of-float """
        pass

    def data(self):  # real signature unknown; restored from __doc__
        """ QMatrix3x4.data() -> list-of-float """
        pass

    def fill(self, p_float):  # real signature unknown; restored from __doc__
        """ QMatrix3x4.fill(float) """
        pass

    def isIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix3x4.isIdentity() -> bool """
        return False

    def setToIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix3x4.setToIdentity() """
        pass

    def transposed(self):  # real signature unknown; restored from __doc__
        """ QMatrix3x4.transposed() -> QMatrix4x3 """
        return QMatrix4x3

    def __delitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__delitem__(y) <==> del x[y] """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __getitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    def __idiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__idiv__(y) <==> x/y """
        pass

    def __imul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__imul__(y) <==> x*y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    def __itruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__itruediv__(y) <==> x/y """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    def __repr__(self):  # real signature unknown; restored from __doc__
        """ x.__repr__() <==> repr(x) """
        pass

    # real signature unknown; restored from __doc__
    def __setitem__(self, i, y):
        """ x.__setitem__(i, y) <==> x[i]=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QMatrix4x2():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QMatrix4x2()
    QMatrix4x2(QMatrix4x2)
    QMatrix4x2(sequence-of-float)
    """

    def copyDataTo(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x2.copyDataTo() -> list-of-float """
        pass

    def data(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x2.data() -> list-of-float """
        pass

    def fill(self, p_float):  # real signature unknown; restored from __doc__
        """ QMatrix4x2.fill(float) """
        pass

    def isIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x2.isIdentity() -> bool """
        return False

    def setToIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x2.setToIdentity() """
        pass

    def transposed(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x2.transposed() -> QMatrix2x4 """
        return QMatrix2x4

    def __delitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__delitem__(y) <==> del x[y] """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __getitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    def __idiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__idiv__(y) <==> x/y """
        pass

    def __imul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__imul__(y) <==> x*y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    def __itruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__itruediv__(y) <==> x/y """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    def __repr__(self):  # real signature unknown; restored from __doc__
        """ x.__repr__() <==> repr(x) """
        pass

    # real signature unknown; restored from __doc__
    def __setitem__(self, i, y):
        """ x.__setitem__(i, y) <==> x[i]=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QMatrix4x3():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QMatrix4x3()
    QMatrix4x3(QMatrix4x3)
    QMatrix4x3(sequence-of-float)
    """

    def copyDataTo(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x3.copyDataTo() -> list-of-float """
        pass

    def data(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x3.data() -> list-of-float """
        pass

    def fill(self, p_float):  # real signature unknown; restored from __doc__
        """ QMatrix4x3.fill(float) """
        pass

    def isIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x3.isIdentity() -> bool """
        return False

    def setToIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x3.setToIdentity() """
        pass

    def transposed(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x3.transposed() -> QMatrix3x4 """
        return QMatrix3x4

    def __delitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__delitem__(y) <==> del x[y] """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __getitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    def __idiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__idiv__(y) <==> x/y """
        pass

    def __imul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__imul__(y) <==> x*y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    def __itruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__itruediv__(y) <==> x/y """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    def __repr__(self):  # real signature unknown; restored from __doc__
        """ x.__repr__() <==> repr(x) """
        pass

    # real signature unknown; restored from __doc__
    def __setitem__(self, i, y):
        """ x.__setitem__(i, y) <==> x[i]=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QMatrix4x4():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QMatrix4x4()
    QMatrix4x4(sequence-of-float)
    QMatrix4x4(float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float)
    QMatrix4x4(QTransform)
    QMatrix4x4(QMatrix)
    QMatrix4x4(QMatrix4x4)
    """

    def column(self, p_int):  # real signature unknown; restored from __doc__
        """ QMatrix4x4.column(int) -> QVector4D """
        return QVector4D

    def copyDataTo(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x4.copyDataTo() -> list-of-float """
        pass

    def data(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x4.data() -> list-of-float """
        pass

    def determinant(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x4.determinant() -> float """
        return 0.0

    def fill(self, p_float):  # real signature unknown; restored from __doc__
        """ QMatrix4x4.fill(float) """
        pass

    def flipCoordinates(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x4.flipCoordinates() """
        pass

    # real signature unknown; restored from __doc__
    def frustum(self, p_float, p_float_1, p_float_2, p_float_3, p_float_4, p_float_5):
        """ QMatrix4x4.frustum(float, float, float, float, float, float) """
        pass

    def inverted(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x4.inverted() -> (QMatrix4x4, bool) """
        pass

    def isIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x4.isIdentity() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def lookAt(self, QVector3D, QVector3D_1, QVector3D_2):
        """ QMatrix4x4.lookAt(QVector3D, QVector3D, QVector3D) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def map(self, *__args):
        """
        QMatrix4x4.map(QPoint) -> QPoint
        QMatrix4x4.map(QPointF) -> QPointF
        QMatrix4x4.map(QVector3D) -> QVector3D
        QMatrix4x4.map(QVector4D) -> QVector4D
        """
        return QVector3D or QVector4D

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapRect(self, *__args):
        """
        QMatrix4x4.mapRect(QRect) -> QRect
        QMatrix4x4.mapRect(QRectF) -> QRectF
        """
        pass

    # real signature unknown; restored from __doc__
    def mapVector(self, QVector3D):
        """ QMatrix4x4.mapVector(QVector3D) -> QVector3D """
        return QVector3D

    def normalMatrix(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x4.normalMatrix() -> QMatrix3x3 """
        return QMatrix3x3

    def optimize(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x4.optimize() """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def ortho(self, *__args):
        """
        QMatrix4x4.ortho(QRect)
        QMatrix4x4.ortho(QRectF)
        QMatrix4x4.ortho(float, float, float, float, float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def perspective(self, p_float, p_float_1, p_float_2, p_float_3):
        """ QMatrix4x4.perspective(float, float, float, float) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def rotate(self, *__args):
        """
        QMatrix4x4.rotate(float, QVector3D)
        QMatrix4x4.rotate(float, float, float, float z=0)
        QMatrix4x4.rotate(QQuaternion)
        """
        pass

    def row(self, p_int):  # real signature unknown; restored from __doc__
        """ QMatrix4x4.row(int) -> QVector4D """
        return QVector4D

    # real signature unknown; restored from __doc__ with multiple overloads
    def scale(self, *__args):
        """
        QMatrix4x4.scale(QVector3D)
        QMatrix4x4.scale(float, float)
        QMatrix4x4.scale(float, float, float)
        QMatrix4x4.scale(float)
        """
        pass

    # real signature unknown; restored from __doc__
    def setColumn(self, p_int, QVector4D):
        """ QMatrix4x4.setColumn(int, QVector4D) """
        pass

    # real signature unknown; restored from __doc__
    def setRow(self, p_int, QVector4D):
        """ QMatrix4x4.setRow(int, QVector4D) """
        pass

    def setToIdentity(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x4.setToIdentity() """
        pass

    def toAffine(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x4.toAffine() -> QMatrix """
        return QMatrix

    # real signature unknown; restored from __doc__ with multiple overloads
    def toTransform(self, p_float=None):
        """
        QMatrix4x4.toTransform() -> QTransform
        QMatrix4x4.toTransform(float) -> QTransform
        """
        return QTransform

    # real signature unknown; restored from __doc__ with multiple overloads
    def translate(self, *__args):
        """
        QMatrix4x4.translate(QVector3D)
        QMatrix4x4.translate(float, float)
        QMatrix4x4.translate(float, float, float)
        """
        pass

    def transposed(self):  # real signature unknown; restored from __doc__
        """ QMatrix4x4.transposed() -> QMatrix4x4 """
        return QMatrix4x4

    def __add__(self, y):  # real signature unknown; restored from __doc__
        """ x.__add__(y) <==> x+y """
        pass

    def __delitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__delitem__(y) <==> del x[y] """
        pass

    def __div__(self, y):  # real signature unknown; restored from __doc__
        """ x.__div__(y) <==> x/y """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __getitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    def __idiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__idiv__(y) <==> x/y """
        pass

    def __imul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__imul__(y) <==> x*y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    def __itruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__itruediv__(y) <==> x/y """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __mul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__mul__(y) <==> x*y """
        pass

    def __neg__(self):  # real signature unknown; restored from __doc__
        """ x.__neg__() <==> -x """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __radd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__radd__(y) <==> y+x """
        pass

    def __rdiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rdiv__(y) <==> y/x """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    def __repr__(self):  # real signature unknown; restored from __doc__
        """ x.__repr__() <==> repr(x) """
        pass

    def __rmul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rmul__(y) <==> y*x """
        pass

    def __rsub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rsub__(y) <==> y-x """
        pass

    def __rtruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rtruediv__(y) <==> y/x """
        pass

    # real signature unknown; restored from __doc__
    def __setitem__(self, i, y):
        """ x.__setitem__(i, y) <==> x[i]=y """
        pass

    def __sub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__sub__(y) <==> x-y """
        pass

    def __truediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__truediv__(y) <==> x/y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QMdiArea(QAbstractScrollArea):

    """ QMdiArea(QWidget parent=None) """
    # real signature unknown; restored from __doc__

    def activateNextSubWindow(self):
        """ QMdiArea.activateNextSubWindow() """
        pass

    # real signature unknown; restored from __doc__
    def activatePreviousSubWindow(self):
        """ QMdiArea.activatePreviousSubWindow() """
        pass

    def activationOrder(self):  # real signature unknown; restored from __doc__
        """ QMdiArea.activationOrder() -> QMdiArea.WindowOrder """
        pass

    def activeSubWindow(self):  # real signature unknown; restored from __doc__
        """ QMdiArea.activeSubWindow() -> QMdiSubWindow """
        return QMdiSubWindow

    # real signature unknown; restored from __doc__
    def addSubWindow(self, QWidget, Qt_WindowFlags_flags=0):
        """ QMdiArea.addSubWindow(QWidget, Qt.WindowFlags flags=0) -> QMdiSubWindow """
        return QMdiSubWindow

    def AreaOption(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def AreaOptions(self, *__args):
        """
        QMdiArea.AreaOptions(QMdiArea.AreaOptions)
        QMdiArea.AreaOptions(int)
        QMdiArea.AreaOptions()
        """
        pass

    def background(self):  # real signature unknown; restored from __doc__
        """ QMdiArea.background() -> QBrush """
        return QBrush

    # real signature unknown; restored from __doc__
    def cascadeSubWindows(self):
        """ QMdiArea.cascadeSubWindows() """
        pass

    # real signature unknown; restored from __doc__
    def childEvent(self, QChildEvent):
        """ QMdiArea.childEvent(QChildEvent) """
        pass

    # real signature unknown; restored from __doc__
    def closeActiveSubWindow(self):
        """ QMdiArea.closeActiveSubWindow() """
        pass

    # real signature unknown; restored from __doc__
    def closeAllSubWindows(self):
        """ QMdiArea.closeAllSubWindows() """
        pass

    # real signature unknown; restored from __doc__
    def currentSubWindow(self):
        """ QMdiArea.currentSubWindow() -> QMdiSubWindow """
        return QMdiSubWindow

    def documentMode(self):  # real signature unknown; restored from __doc__
        """ QMdiArea.documentMode() -> bool """
        return False

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QMdiArea.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QMdiArea.eventFilter(QObject, QEvent) -> bool """
        return False

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QMdiArea.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QMdiArea.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def removeSubWindow(self, QWidget):
        """ QMdiArea.removeSubWindow(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QMdiArea.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def scrollContentsBy(self, p_int, p_int_1):
        """ QMdiArea.scrollContentsBy(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setActivationOrder(self, QMdiArea_WindowOrder):
        """ QMdiArea.setActivationOrder(QMdiArea.WindowOrder) """
        pass

    # real signature unknown; restored from __doc__
    def setActiveSubWindow(self, QMdiSubWindow):
        """ QMdiArea.setActiveSubWindow(QMdiSubWindow) """
        pass

    # real signature unknown; restored from __doc__
    def setBackground(self, QBrush):
        """ QMdiArea.setBackground(QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def setDocumentMode(self, bool):
        """ QMdiArea.setDocumentMode(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setOption(self, QMdiArea_AreaOption, bool_on=True):
        """ QMdiArea.setOption(QMdiArea.AreaOption, bool on=True) """
        pass

    # real signature unknown; restored from __doc__
    def setTabPosition(self, QTabWidget_TabPosition):
        """ QMdiArea.setTabPosition(QTabWidget.TabPosition) """
        pass

    # real signature unknown; restored from __doc__
    def setTabShape(self, QTabWidget_TabShape):
        """ QMdiArea.setTabShape(QTabWidget.TabShape) """
        pass

    # real signature unknown; restored from __doc__
    def setupViewport(self, QWidget):
        """ QMdiArea.setupViewport(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setViewMode(self, QMdiArea_ViewMode):
        """ QMdiArea.setViewMode(QMdiArea.ViewMode) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QMdiArea.showEvent(QShowEvent) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QMdiArea.sizeHint() -> QSize """
        pass

    def subWindowActivated(self, *args, **kwargs):  # real signature unknown
        """ QMdiArea.subWindowActivated[QMdiSubWindow] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def subWindowList(self, QMdiArea_WindowOrder_order=None):
        """ QMdiArea.subWindowList(QMdiArea.WindowOrder order=QMdiArea.CreationOrder) -> list-of-QMdiSubWindow """
        pass

    def tabPosition(self):  # real signature unknown; restored from __doc__
        """ QMdiArea.tabPosition() -> QTabWidget.TabPosition """
        pass

    def tabShape(self):  # real signature unknown; restored from __doc__
        """ QMdiArea.tabShape() -> QTabWidget.TabShape """
        pass

    # real signature unknown; restored from __doc__
    def testOption(self, QMdiArea_AreaOption):
        """ QMdiArea.testOption(QMdiArea.AreaOption) -> bool """
        return False

    def tileSubWindows(self):  # real signature unknown; restored from __doc__
        """ QMdiArea.tileSubWindows() """
        pass

    # real signature unknown; restored from __doc__
    def timerEvent(self, QTimerEvent):
        """ QMdiArea.timerEvent(QTimerEvent) """
        pass

    def ViewMode(self, *args, **kwargs):  # real signature unknown
        pass

    def viewMode(self):  # real signature unknown; restored from __doc__
        """ QMdiArea.viewMode() -> QMdiArea.ViewMode """
        pass

    # real signature unknown; restored from __doc__
    def viewportEvent(self, QEvent):
        """ QMdiArea.viewportEvent(QEvent) -> bool """
        return False

    def WindowOrder(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    ActivationHistoryOrder = 2
    CreationOrder = 0
    DontMaximizeSubWindowOnActivation = 1
    StackingOrder = 1
    SubWindowView = 0
    TabbedView = 1


class QMdiSubWindow(QWidget):

    """ QMdiSubWindow(QWidget parent=None, Qt.WindowFlags flags=0) """

    def aboutToActivate(self, *args, **kwargs):  # real signature unknown
        """ QMdiSubWindow.aboutToActivate[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QMdiSubWindow.changeEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def childEvent(self, QChildEvent):
        """ QMdiSubWindow.childEvent(QChildEvent) """
        pass

    # real signature unknown; restored from __doc__
    def closeEvent(self, QCloseEvent):
        """ QMdiSubWindow.closeEvent(QCloseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def contextMenuEvent(self, QContextMenuEvent):
        """ QMdiSubWindow.contextMenuEvent(QContextMenuEvent) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QMdiSubWindow.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QMdiSubWindow.eventFilter(QObject, QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QMdiSubWindow.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QMdiSubWindow.focusOutEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def hideEvent(self, QHideEvent):
        """ QMdiSubWindow.hideEvent(QHideEvent) """
        pass

    def isShaded(self):  # real signature unknown; restored from __doc__
        """ QMdiSubWindow.isShaded() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyboardPageStep(self):
        """ QMdiSubWindow.keyboardPageStep() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def keyboardSingleStep(self):
        """ QMdiSubWindow.keyboardSingleStep() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QMdiSubWindow.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def leaveEvent(self, QEvent):
        """ QMdiSubWindow.leaveEvent(QEvent) """
        pass

    def mdiArea(self):  # real signature unknown; restored from __doc__
        """ QMdiSubWindow.mdiArea() -> QMdiArea """
        return QMdiArea

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QMdiSubWindow.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def mouseDoubleClickEvent(self, QMouseEvent):
        """ QMdiSubWindow.mouseDoubleClickEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QMdiSubWindow.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QMdiSubWindow.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QMdiSubWindow.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def moveEvent(self, QMoveEvent):
        """ QMdiSubWindow.moveEvent(QMoveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QMdiSubWindow.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QMdiSubWindow.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setKeyboardPageStep(self, p_int):
        """ QMdiSubWindow.setKeyboardPageStep(int) """
        pass

    # real signature unknown; restored from __doc__
    def setKeyboardSingleStep(self, p_int):
        """ QMdiSubWindow.setKeyboardSingleStep(int) """
        pass

    # real signature unknown; restored from __doc__
    def setOption(self, QMdiSubWindow_SubWindowOption, bool_on=True):
        """ QMdiSubWindow.setOption(QMdiSubWindow.SubWindowOption, bool on=True) """
        pass

    # real signature unknown; restored from __doc__
    def setSystemMenu(self, QMenu):
        """ QMdiSubWindow.setSystemMenu(QMenu) """
        pass

    # real signature unknown; restored from __doc__
    def setWidget(self, QWidget):
        """ QMdiSubWindow.setWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QMdiSubWindow.showEvent(QShowEvent) """
        pass

    def showShaded(self):  # real signature unknown; restored from __doc__
        """ QMdiSubWindow.showShaded() """
        pass

    def showSystemMenu(self):  # real signature unknown; restored from __doc__
        """ QMdiSubWindow.showSystemMenu() """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QMdiSubWindow.sizeHint() -> QSize """
        pass

    def SubWindowOption(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def SubWindowOptions(self, *__args):
        """
        QMdiSubWindow.SubWindowOptions(QMdiSubWindow.SubWindowOptions)
        QMdiSubWindow.SubWindowOptions(int)
        QMdiSubWindow.SubWindowOptions()
        """
        pass

    def systemMenu(self):  # real signature unknown; restored from __doc__
        """ QMdiSubWindow.systemMenu() -> QMenu """
        return QMenu

    # real signature unknown; restored from __doc__
    def testOption(self, QMdiSubWindow_SubWindowOption):
        """ QMdiSubWindow.testOption(QMdiSubWindow.SubWindowOption) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def timerEvent(self, QTimerEvent):
        """ QMdiSubWindow.timerEvent(QTimerEvent) """
        pass

    def widget(self):  # real signature unknown; restored from __doc__
        """ QMdiSubWindow.widget() -> QWidget """
        return QWidget

    def windowStateChanged(self, *args, **kwargs):  # real signature unknown
        """ QMdiSubWindow.windowStateChanged[Qt.WindowStates, Qt.WindowStates] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None, Qt_WindowFlags_flags=0):
        pass

    RubberBandMove = 8
    RubberBandResize = 4


class QMenu(QWidget):

    """
    QMenu(QWidget parent=None)
    QMenu(QString, QWidget parent=None)
    """

    def aboutToHide(self, *args, **kwargs):  # real signature unknown
        """ QMenu.aboutToHide[] [signal] """
        pass

    def aboutToShow(self, *args, **kwargs):  # real signature unknown
        """ QMenu.aboutToShow[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def actionAt(self, QPoint):
        """ QMenu.actionAt(QPoint) -> QAction """
        return QAction

    # real signature unknown; restored from __doc__
    def actionEvent(self, QActionEvent):
        """ QMenu.actionEvent(QActionEvent) """
        pass

    # real signature unknown; restored from __doc__
    def actionGeometry(self, QAction):
        """ QMenu.actionGeometry(QAction) -> QRect """
        pass

    def activeAction(self):  # real signature unknown; restored from __doc__
        """ QMenu.activeAction() -> QAction """
        return QAction

    # real signature unknown; restored from __doc__ with multiple overloads
    def addAction(self, *__args):
        """
        QMenu.addAction(QAction)
        QMenu.addAction(QString) -> QAction
        QMenu.addAction(QIcon, QString) -> QAction
        QMenu.addAction(QString, QObject, SLOT(), QKeySequence shortcut=0) -> QAction
        QMenu.addAction(QString, callable, QKeySequence shortcut=0) -> QAction
        QMenu.addAction(QIcon, QString, QObject, SLOT(), QKeySequence shortcut=0) -> QAction
        QMenu.addAction(QIcon, QString, callable, QKeySequence shortcut=0) -> QAction
        """
        return QAction

    # real signature unknown; restored from __doc__ with multiple overloads
    def addMenu(self, *__args):
        """
        QMenu.addMenu(QMenu) -> QAction
        QMenu.addMenu(QString) -> QMenu
        QMenu.addMenu(QIcon, QString) -> QMenu
        """
        return QAction or QMenu

    def addSeparator(self):  # real signature unknown; restored from __doc__
        """ QMenu.addSeparator() -> QAction """
        return QAction

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QMenu.changeEvent(QEvent) """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QMenu.clear() """
        pass

    def columnCount(self):  # real signature unknown; restored from __doc__
        """ QMenu.columnCount() -> int """
        return 0

    def defaultAction(self):  # real signature unknown; restored from __doc__
        """ QMenu.defaultAction() -> QAction """
        return QAction

    # real signature unknown; restored from __doc__
    def enterEvent(self, QEvent):
        """ QMenu.enterEvent(QEvent) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QMenu.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def exec_(self, *__args):
        """
        QMenu.exec_() -> QAction
        QMenu.exec_(QPoint, QAction action=None) -> QAction
        QMenu.exec_(list-of-QAction, QPoint, QAction action=None) -> QAction
        QMenu.exec_(list-of-QAction, QPoint, QAction, QWidget) -> QAction
        """
        return QAction

    # real signature unknown; restored from __doc__
    def focusNextPrevChild(self, bool):
        """ QMenu.focusNextPrevChild(bool) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def hideEvent(self, QHideEvent):
        """ QMenu.hideEvent(QHideEvent) """
        pass

    def hideTearOffMenu(self):  # real signature unknown; restored from __doc__
        """ QMenu.hideTearOffMenu() """
        pass

    def hovered(self, *args, **kwargs):  # real signature unknown
        """ QMenu.hovered[QAction] [signal] """
        pass

    def icon(self):  # real signature unknown; restored from __doc__
        """ QMenu.icon() -> QIcon """
        return QIcon

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionMenuItem, QAction):
        """ QMenu.initStyleOption(QStyleOptionMenuItem, QAction) """
        pass

    # real signature unknown; restored from __doc__
    def insertMenu(self, QAction, QMenu):
        """ QMenu.insertMenu(QAction, QMenu) -> QAction """
        return QAction

    # real signature unknown; restored from __doc__
    def insertSeparator(self, QAction):
        """ QMenu.insertSeparator(QAction) -> QAction """
        return QAction

    def isEmpty(self):  # real signature unknown; restored from __doc__
        """ QMenu.isEmpty() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isTearOffEnabled(self):
        """ QMenu.isTearOffEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isTearOffMenuVisible(self):
        """ QMenu.isTearOffMenuVisible() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QMenu.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def leaveEvent(self, QEvent):
        """ QMenu.leaveEvent(QEvent) """
        pass

    def menuAction(self):  # real signature unknown; restored from __doc__
        """ QMenu.menuAction() -> QAction """
        return QAction

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QMenu.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QMenu.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QMenu.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QMenu.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def popup(self, QPoint, QAction_action=None):
        """ QMenu.popup(QPoint, QAction action=None) """
        pass

    # real signature unknown; restored from __doc__
    def separatorsCollapsible(self):
        """ QMenu.separatorsCollapsible() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setActiveAction(self, QAction):
        """ QMenu.setActiveAction(QAction) """
        pass

    # real signature unknown; restored from __doc__
    def setDefaultAction(self, QAction):
        """ QMenu.setDefaultAction(QAction) """
        pass

    def setIcon(self, QIcon):  # real signature unknown; restored from __doc__
        """ QMenu.setIcon(QIcon) """
        pass

    # real signature unknown; restored from __doc__
    def setNoReplayFor(self, QWidget):
        """ QMenu.setNoReplayFor(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setSeparatorsCollapsible(self, bool):
        """ QMenu.setSeparatorsCollapsible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setTearOffEnabled(self, bool):
        """ QMenu.setTearOffEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setTitle(self, QString):
        """ QMenu.setTitle(QString) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QMenu.sizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def timerEvent(self, QTimerEvent):
        """ QMenu.timerEvent(QTimerEvent) """
        pass

    def title(self):  # real signature unknown; restored from __doc__
        """ QMenu.title() -> QString """
        pass

    def triggered(self, *args, **kwargs):  # real signature unknown
        """ QMenu.triggered[QAction] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def wheelEvent(self, QWheelEvent):
        """ QMenu.wheelEvent(QWheelEvent) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QMenuBar(QWidget):

    """ QMenuBar(QWidget parent=None) """

    # real signature unknown; restored from __doc__
    def actionAt(self, QPoint):
        """ QMenuBar.actionAt(QPoint) -> QAction """
        return QAction

    # real signature unknown; restored from __doc__
    def actionEvent(self, QActionEvent):
        """ QMenuBar.actionEvent(QActionEvent) """
        pass

    # real signature unknown; restored from __doc__
    def actionGeometry(self, QAction):
        """ QMenuBar.actionGeometry(QAction) -> QRect """
        pass

    def activeAction(self):  # real signature unknown; restored from __doc__
        """ QMenuBar.activeAction() -> QAction """
        return QAction

    # real signature unknown; restored from __doc__ with multiple overloads
    def addAction(self, *__args):
        """
        QMenuBar.addAction(QAction)
        QMenuBar.addAction(QString) -> QAction
        QMenuBar.addAction(QString, QObject, SLOT()) -> QAction
        QMenuBar.addAction(QString, callable) -> QAction
        """
        return QAction

    # real signature unknown; restored from __doc__ with multiple overloads
    def addMenu(self, *__args):
        """
        QMenuBar.addMenu(QMenu) -> QAction
        QMenuBar.addMenu(QString) -> QMenu
        QMenuBar.addMenu(QIcon, QString) -> QMenu
        """
        return QAction or QMenu

    def addSeparator(self):  # real signature unknown; restored from __doc__
        """ QMenuBar.addSeparator() -> QAction """
        return QAction

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QMenuBar.changeEvent(QEvent) """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QMenuBar.clear() """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QMenuBar.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QMenuBar.eventFilter(QObject, QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QMenuBar.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QMenuBar.focusOutEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def heightForWidth(self, p_int):
        """ QMenuBar.heightForWidth(int) -> int """
        return 0

    def hovered(self, *args, **kwargs):  # real signature unknown
        """ QMenuBar.hovered[QAction] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionMenuItem, QAction):
        """ QMenuBar.initStyleOption(QStyleOptionMenuItem, QAction) """
        pass

    # real signature unknown; restored from __doc__
    def insertMenu(self, QAction, QMenu):
        """ QMenuBar.insertMenu(QAction, QMenu) -> QAction """
        return QAction

    # real signature unknown; restored from __doc__
    def insertSeparator(self, QAction):
        """ QMenuBar.insertSeparator(QAction) -> QAction """
        return QAction

    def isDefaultUp(self):  # real signature unknown; restored from __doc__
        """ QMenuBar.isDefaultUp() -> bool """
        return False

    def isNativeMenuBar(self):  # real signature unknown; restored from __doc__
        """ QMenuBar.isNativeMenuBar() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QMenuBar.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def leaveEvent(self, QEvent):
        """ QMenuBar.leaveEvent(QEvent) """
        pass

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QMenuBar.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QMenuBar.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QMenuBar.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QMenuBar.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QMenuBar.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QMenuBar.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setActiveAction(self, QAction):
        """ QMenuBar.setActiveAction(QAction) """
        pass

    # real signature unknown; restored from __doc__
    def setDefaultUp(self, bool):
        """ QMenuBar.setDefaultUp(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setNativeMenuBar(self, bool):
        """ QMenuBar.setNativeMenuBar(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QMenuBar.setVisible(bool) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QMenuBar.sizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def timerEvent(self, QTimerEvent):
        """ QMenuBar.timerEvent(QTimerEvent) """
        pass

    def triggered(self, *args, **kwargs):  # real signature unknown
        """ QMenuBar.triggered[QAction] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass


class QMessageBox(QDialog):

    """
    QMessageBox(QWidget parent=None)
    QMessageBox(QMessageBox.Icon, QString, QString, QMessageBox.StandardButtons buttons=QMessageBox.NoButton, QWidget parent=None, Qt.WindowFlags flags=Qt.Dialog|Qt.MSWindowsFixedSizeDialogHint)
    QMessageBox(QString, QString, QMessageBox.Icon, int, int, int, QWidget parent=None, Qt.WindowFlags flags=Qt.Dialog|Qt.MSWindowsFixedSizeDialogHint)
    """
    # real signature unknown; restored from __doc__

    def about(self, QWidget, QString, QString_1):
        """ QMessageBox.about(QWidget, QString, QString) """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def aboutQt(self, QWidget, QString_title=None, *args, **kwargs):
        """ QMessageBox.aboutQt(QWidget, QString title=QString()) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def addButton(self, *__args):
        """
        QMessageBox.addButton(QAbstractButton, QMessageBox.ButtonRole)
        QMessageBox.addButton(QString, QMessageBox.ButtonRole) -> QPushButton
        QMessageBox.addButton(QMessageBox.StandardButton) -> QPushButton
        """
        return QPushButton

    # real signature unknown; restored from __doc__
    def button(self, QMessageBox_StandardButton):
        """ QMessageBox.button(QMessageBox.StandardButton) -> QAbstractButton """
        return QAbstractButton

    def buttonClicked(self, *args, **kwargs):  # real signature unknown
        """ QMessageBox.buttonClicked[QAbstractButton] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def buttonRole(self, QAbstractButton):
        """ QMessageBox.buttonRole(QAbstractButton) -> QMessageBox.ButtonRole """
        pass

    def ButtonRole(self, *args, **kwargs):  # real signature unknown
        pass

    def buttons(self):  # real signature unknown; restored from __doc__
        """ QMessageBox.buttons() -> list-of-QAbstractButton """
        pass

    # real signature unknown; restored from __doc__
    def buttonText(self, p_int):
        """ QMessageBox.buttonText(int) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QMessageBox.changeEvent(QEvent) """
        pass

    def clickedButton(self):  # real signature unknown; restored from __doc__
        """ QMessageBox.clickedButton() -> QAbstractButton """
        return QAbstractButton

    # real signature unknown; restored from __doc__
    def closeEvent(self, QCloseEvent):
        """ QMessageBox.closeEvent(QCloseEvent) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def critical(self, QWidget, QString, QString_1, *__args):
        """
        QMessageBox.critical(QWidget, QString, QString, QMessageBox.StandardButtons buttons=QMessageBox.Ok, QMessageBox.StandardButton defaultButton=QMessageBox.NoButton) -> QMessageBox.StandardButton
        QMessageBox.critical(QWidget, QString, QString, int, int, int button2=0) -> int
        QMessageBox.critical(QWidget, QString, QString, QString, QString button1Text=QString(), QString button2Text=QString(), int defaultButtonNumber=0, int escapeButtonNumber=-1) -> int
        """
        return 0

    def defaultButton(self):  # real signature unknown; restored from __doc__
        """ QMessageBox.defaultButton() -> QPushButton """
        return QPushButton

    def detailedText(self):  # real signature unknown; restored from __doc__
        """ QMessageBox.detailedText() -> QString """
        pass

    def escapeButton(self):  # real signature unknown; restored from __doc__
        """ QMessageBox.escapeButton() -> QAbstractButton """
        return QAbstractButton

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QMessageBox.event(QEvent) -> bool """
        return False

    def icon(self):  # real signature unknown; restored from __doc__
        """ QMessageBox.icon() -> QMessageBox.Icon """
        pass

    def Icon(self, *args, **kwargs):  # real signature unknown
        pass

    def iconPixmap(self):  # real signature unknown; restored from __doc__
        """ QMessageBox.iconPixmap() -> QPixmap """
        return QPixmap

    # real signature unknown; restored from __doc__ with multiple overloads
    def information(self, QWidget, QString, QString_1, *__args):
        """
        QMessageBox.information(QWidget, QString, QString, QMessageBox.StandardButtons buttons=QMessageBox.Ok, QMessageBox.StandardButton defaultButton=QMessageBox.NoButton) -> QMessageBox.StandardButton
        QMessageBox.information(QWidget, QString, QString, int, int button1=0, int button2=0) -> int
        QMessageBox.information(QWidget, QString, QString, QString, QString button1Text=QString(), QString button2Text=QString(), int defaultButtonNumber=0, int escapeButtonNumber=-1) -> int
        """
        return 0

    def informativeText(self):  # real signature unknown; restored from __doc__
        """ QMessageBox.informativeText() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QMessageBox.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def open(self, *__args):
        """
        QMessageBox.open()
        QMessageBox.open(QObject, SLOT())
        QMessageBox.open(callable)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def question(self, QWidget, QString, QString_1, *__args):
        """
        QMessageBox.question(QWidget, QString, QString, QMessageBox.StandardButtons buttons=QMessageBox.Ok, QMessageBox.StandardButton defaultButton=QMessageBox.NoButton) -> QMessageBox.StandardButton
        QMessageBox.question(QWidget, QString, QString, int, int button1=0, int button2=0) -> int
        QMessageBox.question(QWidget, QString, QString, QString, QString button1Text=QString(), QString button2Text=QString(), int defaultButtonNumber=0, int escapeButtonNumber=-1) -> int
        """
        return 0

    # real signature unknown; restored from __doc__
    def removeButton(self, QAbstractButton):
        """ QMessageBox.removeButton(QAbstractButton) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QMessageBox.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setButtonText(self, p_int, QString):
        """ QMessageBox.setButtonText(int, QString) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setDefaultButton(self, *__args):
        """
        QMessageBox.setDefaultButton(QPushButton)
        QMessageBox.setDefaultButton(QMessageBox.StandardButton)
        """
        pass

    # real signature unknown; restored from __doc__
    def setDetailedText(self, QString):
        """ QMessageBox.setDetailedText(QString) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setEscapeButton(self, *__args):
        """
        QMessageBox.setEscapeButton(QAbstractButton)
        QMessageBox.setEscapeButton(QMessageBox.StandardButton)
        """
        pass

    # real signature unknown; restored from __doc__
    def setIcon(self, QMessageBox_Icon):
        """ QMessageBox.setIcon(QMessageBox.Icon) """
        pass

    # real signature unknown; restored from __doc__
    def setIconPixmap(self, QPixmap):
        """ QMessageBox.setIconPixmap(QPixmap) """
        pass

    # real signature unknown; restored from __doc__
    def setInformativeText(self, QString):
        """ QMessageBox.setInformativeText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setStandardButtons(self, QMessageBox_StandardButtons):
        """ QMessageBox.setStandardButtons(QMessageBox.StandardButtons) """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, QString):
        """ QMessageBox.setText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTextFormat(self, Qt_TextFormat):
        """ QMessageBox.setTextFormat(Qt.TextFormat) """
        pass

    # real signature unknown; restored from __doc__
    def setWindowModality(self, Qt_WindowModality):
        """ QMessageBox.setWindowModality(Qt.WindowModality) """
        pass

    # real signature unknown; restored from __doc__
    def setWindowTitle(self, QString):
        """ QMessageBox.setWindowTitle(QString) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QMessageBox.showEvent(QShowEvent) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QMessageBox.sizeHint() -> QSize """
        pass

    def StandardButton(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def standardButton(self, QAbstractButton):
        """ QMessageBox.standardButton(QAbstractButton) -> QMessageBox.StandardButton """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def StandardButtons(self, *__args):
        """
        QMessageBox.StandardButtons(QMessageBox.StandardButtons)
        QMessageBox.StandardButtons(int)
        QMessageBox.StandardButtons()
        """
        pass

    def standardButtons(self):  # real signature unknown; restored from __doc__
        """ QMessageBox.standardButtons() -> QMessageBox.StandardButtons """
        pass

    # real signature unknown; restored from __doc__
    def standardIcon(self, QMessageBox_Icon):
        """ QMessageBox.standardIcon(QMessageBox.Icon) -> QPixmap """
        return QPixmap

    def text(self):  # real signature unknown; restored from __doc__
        """ QMessageBox.text() -> QString """
        pass

    def textFormat(self):  # real signature unknown; restored from __doc__
        """ QMessageBox.textFormat() -> Qt.TextFormat """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def warning(self, QWidget, QString, QString_1, *__args):
        """
        QMessageBox.warning(QWidget, QString, QString, QMessageBox.StandardButtons buttons=QMessageBox.Ok, QMessageBox.StandardButton defaultButton=QMessageBox.NoButton) -> QMessageBox.StandardButton
        QMessageBox.warning(QWidget, QString, QString, int, int, int button2=0) -> int
        QMessageBox.warning(QWidget, QString, QString, QString, QString button1Text=QString(), QString button2Text=QString(), int defaultButtonNumber=0, int escapeButtonNumber=-1) -> int
        """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    Abort = 262144
    AcceptRole = 0
    ActionRole = 3
    Apply = 33554432
    ApplyRole = 8
    ButtonMask = -769
    Cancel = 4194304
    Close = 2097152
    Critical = 3
    Default = 256
    DestructiveRole = 2
    Discard = 8388608
    Escape = 512
    FirstButton = 1024
    FlagMask = 768
    Help = 16777216
    HelpRole = 4
    Ignore = 1048576
    Information = 1
    InvalidRole = -1
    LastButton = 134217728
    No = 65536
    NoAll = 131072
    NoButton = 0
    NoIcon = 0
    NoRole = 6
    NoToAll = 131072
    Ok = 1024
    Open = 8192
    Question = 4
    RejectRole = 1
    Reset = 67108864
    ResetRole = 7
    RestoreDefaults = 134217728
    Retry = 524288
    Save = 2048
    SaveAll = 4096
    Warning = 2
    Yes = 16384
    YesAll = 32768
    YesRole = 5
    YesToAll = 32768


class QMouseEvent(QInputEvent):

    """
    QMouseEvent(QEvent.Type, QPoint, Qt.MouseButton, Qt.MouseButtons, Qt.KeyboardModifiers)
    QMouseEvent(QEvent.Type, QPoint, QPoint, Qt.MouseButton, Qt.MouseButtons, Qt.KeyboardModifiers)
    QMouseEvent(QMouseEvent)
    """

    def button(self):  # real signature unknown; restored from __doc__
        """ QMouseEvent.button() -> Qt.MouseButton """
        pass

    def buttons(self):  # real signature unknown; restored from __doc__
        """ QMouseEvent.buttons() -> Qt.MouseButtons """
        pass

    def globalPos(self):  # real signature unknown; restored from __doc__
        """ QMouseEvent.globalPos() -> QPoint """
        pass

    def globalX(self):  # real signature unknown; restored from __doc__
        """ QMouseEvent.globalX() -> int """
        return 0

    def globalY(self):  # real signature unknown; restored from __doc__
        """ QMouseEvent.globalY() -> int """
        return 0

    def hasExtendedInfo(self):  # real signature unknown; restored from __doc__
        """ QMouseEvent.hasExtendedInfo() -> bool """
        return False

    def pos(self):  # real signature unknown; restored from __doc__
        """ QMouseEvent.pos() -> QPoint """
        pass

    def posF(self):  # real signature unknown; restored from __doc__
        """ QMouseEvent.posF() -> QPointF """
        pass

    def x(self):  # real signature unknown; restored from __doc__
        """ QMouseEvent.x() -> int """
        return 0

    def y(self):  # real signature unknown; restored from __doc__
        """ QMouseEvent.y() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QMouseEventTransition(__PyQt4_QtCore.QEventTransition):

    """
    QMouseEventTransition(QState sourceState=None)
    QMouseEventTransition(QObject, QEvent.Type, Qt.MouseButton, QState sourceState=None)
    """

    def button(self):  # real signature unknown; restored from __doc__
        """ QMouseEventTransition.button() -> Qt.MouseButton """
        pass

    # real signature unknown; restored from __doc__
    def eventTest(self, QEvent):
        """ QMouseEventTransition.eventTest(QEvent) -> bool """
        return False

    def hitTestPath(self):  # real signature unknown; restored from __doc__
        """ QMouseEventTransition.hitTestPath() -> QPainterPath """
        return QPainterPath

    def modifierMask(self):  # real signature unknown; restored from __doc__
        """ QMouseEventTransition.modifierMask() -> Qt.KeyboardModifiers """
        pass

    # real signature unknown; restored from __doc__
    def onTransition(self, QEvent):
        """ QMouseEventTransition.onTransition(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setButton(self, Qt_MouseButton):
        """ QMouseEventTransition.setButton(Qt.MouseButton) """
        pass

    # real signature unknown; restored from __doc__
    def setHitTestPath(self, QPainterPath):
        """ QMouseEventTransition.setHitTestPath(QPainterPath) """
        pass

    # real signature unknown; restored from __doc__
    def setModifierMask(self, Qt_KeyboardModifiers):
        """ QMouseEventTransition.setModifierMask(Qt.KeyboardModifiers) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QMoveEvent(__PyQt4_QtCore.QEvent):

    """
    QMoveEvent(QPoint, QPoint)
    QMoveEvent(QMoveEvent)
    """

    def oldPos(self):  # real signature unknown; restored from __doc__
        """ QMoveEvent.oldPos() -> QPoint """
        pass

    def pos(self):  # real signature unknown; restored from __doc__
        """ QMoveEvent.pos() -> QPoint """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QMovie(__PyQt4_QtCore.QObject):

    """
    QMovie(QObject parent=None)
    QMovie(QIODevice, QByteArray format=QByteArray(), QObject parent=None)
    QMovie(QString, QByteArray format=QByteArray(), QObject parent=None)
    """

    def backgroundColor(self):  # real signature unknown; restored from __doc__
        """ QMovie.backgroundColor() -> QColor """
        return QColor

    def CacheMode(self, *args, **kwargs):  # real signature unknown
        pass

    def cacheMode(self):  # real signature unknown; restored from __doc__
        """ QMovie.cacheMode() -> QMovie.CacheMode """
        pass

    # real signature unknown; restored from __doc__
    def currentFrameNumber(self):
        """ QMovie.currentFrameNumber() -> int """
        return 0

    def currentImage(self):  # real signature unknown; restored from __doc__
        """ QMovie.currentImage() -> QImage """
        return QImage

    def currentPixmap(self):  # real signature unknown; restored from __doc__
        """ QMovie.currentPixmap() -> QPixmap """
        return QPixmap

    def device(self):  # real signature unknown; restored from __doc__
        """ QMovie.device() -> QIODevice """
        pass

    def error(self, *args, **kwargs):  # real signature unknown
        """ QMovie.error[QImageReader.ImageReaderError] [signal] """
        pass

    def fileName(self):  # real signature unknown; restored from __doc__
        """ QMovie.fileName() -> QString """
        pass

    def finished(self, *args, **kwargs):  # real signature unknown
        """ QMovie.finished[] [signal] """
        pass

    def format(self):  # real signature unknown; restored from __doc__
        """ QMovie.format() -> QByteArray """
        pass

    def frameChanged(self, *args, **kwargs):  # real signature unknown
        """ QMovie.frameChanged[int] [signal] """
        pass

    def frameCount(self):  # real signature unknown; restored from __doc__
        """ QMovie.frameCount() -> int """
        return 0

    def frameRect(self):  # real signature unknown; restored from __doc__
        """ QMovie.frameRect() -> QRect """
        pass

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QMovie.isValid() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def jumpToFrame(self, p_int):
        """ QMovie.jumpToFrame(int) -> bool """
        return False

    def jumpToNextFrame(self):  # real signature unknown; restored from __doc__
        """ QMovie.jumpToNextFrame() -> bool """
        return False

    def loopCount(self):  # real signature unknown; restored from __doc__
        """ QMovie.loopCount() -> int """
        return 0

    def MovieState(self, *args, **kwargs):  # real signature unknown
        pass

    def nextFrameDelay(self):  # real signature unknown; restored from __doc__
        """ QMovie.nextFrameDelay() -> int """
        return 0

    def resized(self, *args, **kwargs):  # real signature unknown
        """ QMovie.resized[QSize] [signal] """
        pass

    def scaledSize(self):  # real signature unknown; restored from __doc__
        """ QMovie.scaledSize() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def setBackgroundColor(self, QColor):
        """ QMovie.setBackgroundColor(QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setCacheMode(self, QMovie_CacheMode):
        """ QMovie.setCacheMode(QMovie.CacheMode) """
        pass

    # real signature unknown; restored from __doc__
    def setDevice(self, QIODevice):
        """ QMovie.setDevice(QIODevice) """
        pass

    # real signature unknown; restored from __doc__
    def setFileName(self, QString):
        """ QMovie.setFileName(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setFormat(self, QByteArray):
        """ QMovie.setFormat(QByteArray) """
        pass

    def setPaused(self, bool):  # real signature unknown; restored from __doc__
        """ QMovie.setPaused(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setScaledSize(self, QSize):
        """ QMovie.setScaledSize(QSize) """
        pass

    def setSpeed(self, p_int):  # real signature unknown; restored from __doc__
        """ QMovie.setSpeed(int) """
        pass

    def speed(self):  # real signature unknown; restored from __doc__
        """ QMovie.speed() -> int """
        return 0

    def start(self):  # real signature unknown; restored from __doc__
        """ QMovie.start() """
        pass

    def started(self, *args, **kwargs):  # real signature unknown
        """ QMovie.started[] [signal] """
        pass

    def state(self):  # real signature unknown; restored from __doc__
        """ QMovie.state() -> QMovie.MovieState """
        pass

    def stateChanged(self, *args, **kwargs):  # real signature unknown
        """ QMovie.stateChanged[QMovie.MovieState] [signal] """
        pass

    def stop(self):  # real signature unknown; restored from __doc__
        """ QMovie.stop() """
        pass

    # real signature unknown; restored from __doc__
    def supportedFormats(self):
        """ QMovie.supportedFormats() -> list-of-QByteArray """
        pass

    def updated(self, *args, **kwargs):  # real signature unknown
        """ QMovie.updated[QRect] [signal] """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    CacheAll = 1
    CacheNone = 0
    NotRunning = 0
    Paused = 1
    Running = 2


class QPageSetupDialog(QDialog):

    """
    QPageSetupDialog(QWidget parent=None)
    QPageSetupDialog(QPrinter, QWidget parent=None)
    """
    # real signature unknown; restored from __doc__

    def addEnabledOption(self, QPageSetupDialog_PageSetupDialogOption):
        """ QPageSetupDialog.addEnabledOption(QPageSetupDialog.PageSetupDialogOption) """
        pass

    def enabledOptions(self):  # real signature unknown; restored from __doc__
        """ QPageSetupDialog.enabledOptions() -> QPageSetupDialog.PageSetupDialogOptions """
        pass

    def exec_(self):  # real signature unknown; restored from __doc__
        """ QPageSetupDialog.exec_() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def isOptionEnabled(self, QPageSetupDialog_PageSetupDialogOption):
        """ QPageSetupDialog.isOptionEnabled(QPageSetupDialog.PageSetupDialogOption) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def open(self, *__args):
        """
        QPageSetupDialog.open()
        QPageSetupDialog.open(QObject, SLOT())
        QPageSetupDialog.open(callable)
        """
        pass

    def options(self):  # real signature unknown; restored from __doc__
        """ QPageSetupDialog.options() -> QPageSetupDialog.PageSetupDialogOptions """
        pass

    def PageSetupDialogOption(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def PageSetupDialogOptions(self, *__args):
        """
        QPageSetupDialog.PageSetupDialogOptions(QPageSetupDialog.PageSetupDialogOptions)
        QPageSetupDialog.PageSetupDialogOptions(int)
        QPageSetupDialog.PageSetupDialogOptions()
        """
        pass

    def printer(self):  # real signature unknown; restored from __doc__
        """ QPageSetupDialog.printer() -> QPrinter """
        return QPrinter

    # real signature unknown; restored from __doc__
    def setEnabledOptions(self, QPageSetupDialog_PageSetupDialogOptions):
        """ QPageSetupDialog.setEnabledOptions(QPageSetupDialog.PageSetupDialogOptions) """
        pass

    # real signature unknown; restored from __doc__
    def setOption(self, QPageSetupDialog_PageSetupDialogOption, bool_on=True):
        """ QPageSetupDialog.setOption(QPageSetupDialog.PageSetupDialogOption, bool on=True) """
        pass

    # real signature unknown; restored from __doc__
    def setOptions(self, QPageSetupDialog_PageSetupDialogOptions):
        """ QPageSetupDialog.setOptions(QPageSetupDialog.PageSetupDialogOptions) """
        pass

    # real signature unknown; restored from __doc__
    def testOption(self, QPageSetupDialog_PageSetupDialogOption):
        """ QPageSetupDialog.testOption(QPageSetupDialog.PageSetupDialogOption) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    DontUseSheet = 1
    None = 0


class QPaintEngine():  # skipped bases: <type 'sip.simplewrapper'>

    """ QPaintEngine(QPaintEngine.PaintEngineFeatures features=0) """
    # real signature unknown; restored from __doc__

    def begin(self, QPaintDevice):
        """ QPaintEngine.begin(QPaintDevice) -> bool """
        return False

    def DirtyFlag(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def DirtyFlags(self, *__args):
        """
        QPaintEngine.DirtyFlags(QPaintEngine.DirtyFlags)
        QPaintEngine.DirtyFlags(int)
        QPaintEngine.DirtyFlags()
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawEllipse(self, *__args):
        """
        QPaintEngine.drawEllipse(QRectF)
        QPaintEngine.drawEllipse(QRect)
        """
        pass

    # real signature unknown; restored from __doc__
    def drawImage(self, QRectF, QImage, QRectF_1, Qt_ImageConversionFlags_flags=None):
        """ QPaintEngine.drawImage(QRectF, QImage, QRectF, Qt.ImageConversionFlags flags=Qt.AutoColor) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawLines(self, *__args):
        """
        QPaintEngine.drawLines(QLine)
        QPaintEngine.drawLines(QLineF)
        """
        pass

    # real signature unknown; restored from __doc__
    def drawPath(self, QPainterPath):
        """ QPaintEngine.drawPath(QPainterPath) """
        pass

    # real signature unknown; restored from __doc__
    def drawPixmap(self, QRectF, QPixmap, QRectF_1):
        """ QPaintEngine.drawPixmap(QRectF, QPixmap, QRectF) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawPoints(self, *__args):
        """
        QPaintEngine.drawPoints(QPointF)
        QPaintEngine.drawPoints(QPoint)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawPolygon(self, *__args):
        """
        QPaintEngine.drawPolygon(QPointF, QPaintEngine.PolygonDrawMode)
        QPaintEngine.drawPolygon(QPoint, QPaintEngine.PolygonDrawMode)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawRects(self, *__args):
        """
        QPaintEngine.drawRects(QRect)
        QPaintEngine.drawRects(QRectF)
        """
        pass

    # real signature unknown; restored from __doc__
    def drawTextItem(self, QPointF, QTextItem):
        """ QPaintEngine.drawTextItem(QPointF, QTextItem) """
        pass

    # real signature unknown; restored from __doc__
    def drawTiledPixmap(self, QRectF, QPixmap, QPointF):
        """ QPaintEngine.drawTiledPixmap(QRectF, QPixmap, QPointF) """
        pass

    def end(self):  # real signature unknown; restored from __doc__
        """ QPaintEngine.end() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def hasFeature(self, QPaintEngine_PaintEngineFeatures):
        """ QPaintEngine.hasFeature(QPaintEngine.PaintEngineFeatures) -> bool """
        return False

    def isActive(self):  # real signature unknown; restored from __doc__
        """ QPaintEngine.isActive() -> bool """
        return False

    def paintDevice(self):  # real signature unknown; restored from __doc__
        """ QPaintEngine.paintDevice() -> QPaintDevice """
        return QPaintDevice

    def PaintEngineFeature(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def PaintEngineFeatures(self, *__args):
        """
        QPaintEngine.PaintEngineFeatures(QPaintEngine.PaintEngineFeatures)
        QPaintEngine.PaintEngineFeatures(int)
        QPaintEngine.PaintEngineFeatures()
        """
        pass

    def painter(self):  # real signature unknown; restored from __doc__
        """ QPaintEngine.painter() -> QPainter """
        return QPainter

    def PolygonDrawMode(self, *args, **kwargs):  # real signature unknown
        pass

    def setActive(self, bool):  # real signature unknown; restored from __doc__
        """ QPaintEngine.setActive(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setPaintDevice(self, QPaintDevice):
        """ QPaintEngine.setPaintDevice(QPaintDevice) """
        pass

    def Type(self, *args, **kwargs):  # real signature unknown
        pass

    def type(self):  # real signature unknown; restored from __doc__
        """ QPaintEngine.type() -> QPaintEngine.Type """
        pass

    # real signature unknown; restored from __doc__
    def updateState(self, QPaintEngineState):
        """ QPaintEngine.updateState(QPaintEngineState) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QPaintEngine_PaintEngineFeatures_features=0):
        pass

    __weakref__ = property(lambda self: object())  # default

    AllDirty = 65535
    AllFeatures = -1
    AlphaBlend = 128
    Antialiasing = 1024
    BlendModes = 32768
    BrushStroke = 2048
    ConicalGradientFill = 64
    ConstantOpacity = 4096
    ConvexMode = 2
    CoreGraphics = 3
    Direct3D = 11
    DirtyBackground = 16
    DirtyBackgroundMode = 32
    DirtyBrush = 2
    DirtyBrushOrigin = 4
    DirtyClipEnabled = 2048
    DirtyClipPath = 256
    DirtyClipRegion = 128
    DirtyCompositionMode = 1024
    DirtyFont = 8
    DirtyHints = 512
    DirtyOpacity = 4096
    DirtyPen = 1
    DirtyTransform = 64
    LinearGradientFill = 16
    MacPrinter = 4
    MaskedBrush = 8192
    MaxUser = 100
    ObjectBoundingModeGradients = 65536
    OddEvenMode = 0
    OpenGL = 7
    OpenGL2 = 14
    OpenVG = 13
    PaintBuffer = 15
    PainterPaths = 512
    PaintOutsidePaintEvent = 536870912
    PatternBrush = 8
    PatternTransform = 2
    Pdf = 12
    PerspectiveTransform = 16384
    Picture = 8
    PixmapTransform = 4
    PolylineMode = 3
    PorterDuff = 256
    PostScript = 6
    PrimitiveTransform = 1
    QuickDraw = 2
    QWindowSystem = 5
    RadialGradientFill = 32
    Raster = 10
    RasterOpModes = 131072
    SVG = 9
    User = 50
    WindingMode = 1
    Windows = 1
    X11 = 0


class QPaintEngineState():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QPaintEngineState()
    QPaintEngineState(QPaintEngineState)
    """

    def backgroundBrush(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.backgroundBrush() -> QBrush """
        return QBrush

    def backgroundMode(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.backgroundMode() -> Qt.BGMode """
        pass

    def brush(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.brush() -> QBrush """
        return QBrush

    # real signature unknown; restored from __doc__
    def brushNeedsResolving(self):
        """ QPaintEngineState.brushNeedsResolving() -> bool """
        return False

    def brushOrigin(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.brushOrigin() -> QPointF """
        pass

    def clipOperation(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.clipOperation() -> Qt.ClipOperation """
        pass

    def clipPath(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.clipPath() -> QPainterPath """
        return QPainterPath

    def clipRegion(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.clipRegion() -> QRegion """
        return QRegion

    def compositionMode(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.compositionMode() -> QPainter.CompositionMode """
        pass

    def font(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.font() -> QFont """
        return QFont

    def isClipEnabled(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.isClipEnabled() -> bool """
        return False

    def matrix(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.matrix() -> QMatrix """
        return QMatrix

    def opacity(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.opacity() -> float """
        return 0.0

    def painter(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.painter() -> QPainter """
        return QPainter

    def pen(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.pen() -> QPen """
        return QPen

    # real signature unknown; restored from __doc__
    def penNeedsResolving(self):
        """ QPaintEngineState.penNeedsResolving() -> bool """
        return False

    def renderHints(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.renderHints() -> QPainter.RenderHints """
        pass

    def state(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.state() -> QPaintEngine.DirtyFlags """
        pass

    def transform(self):  # real signature unknown; restored from __doc__
        """ QPaintEngineState.transform() -> QTransform """
        return QTransform

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QPaintEngineState=None):
        pass

    __weakref__ = property(lambda self: object())  # default


class QPainter():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QPainter()
    QPainter(QPaintDevice)
    """

    def background(self):  # real signature unknown; restored from __doc__
        """ QPainter.background() -> QBrush """
        return QBrush

    def backgroundMode(self):  # real signature unknown; restored from __doc__
        """ QPainter.backgroundMode() -> Qt.BGMode """
        pass

    # real signature unknown; restored from __doc__
    def begin(self, QPaintDevice):
        """ QPainter.begin(QPaintDevice) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def beginNativePainting(self):
        """ QPainter.beginNativePainting() """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def boundingRect(self, *__args):
        """
        QPainter.boundingRect(QRectF, int, QString) -> QRectF
        QPainter.boundingRect(QRect, int, QString) -> QRect
        QPainter.boundingRect(QRectF, QString, QTextOption option=QTextOption()) -> QRectF
        QPainter.boundingRect(int, int, int, int, int, QString) -> QRect
        """
        pass

    def brush(self):  # real signature unknown; restored from __doc__
        """ QPainter.brush() -> QBrush """
        return QBrush

    def brushOrigin(self):  # real signature unknown; restored from __doc__
        """ QPainter.brushOrigin() -> QPoint """
        pass

    def clipPath(self):  # real signature unknown; restored from __doc__
        """ QPainter.clipPath() -> QPainterPath """
        return QPainterPath

    def clipRegion(self):  # real signature unknown; restored from __doc__
        """ QPainter.clipRegion() -> QRegion """
        return QRegion

    def combinedMatrix(self):  # real signature unknown; restored from __doc__
        """ QPainter.combinedMatrix() -> QMatrix """
        return QMatrix

    # real signature unknown; restored from __doc__
    def combinedTransform(self):
        """ QPainter.combinedTransform() -> QTransform """
        return QTransform

    def compositionMode(self):  # real signature unknown; restored from __doc__
        """ QPainter.compositionMode() -> QPainter.CompositionMode """
        pass

    def CompositionMode(self, *args, **kwargs):  # real signature unknown
        pass

    def device(self):  # real signature unknown; restored from __doc__
        """ QPainter.device() -> QPaintDevice """
        return QPaintDevice

    def deviceMatrix(self):  # real signature unknown; restored from __doc__
        """ QPainter.deviceMatrix() -> QMatrix """
        return QMatrix

    def deviceTransform(self):  # real signature unknown; restored from __doc__
        """ QPainter.deviceTransform() -> QTransform """
        return QTransform

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawArc(self, *__args):
        """
        QPainter.drawArc(QRectF, int, int)
        QPainter.drawArc(QRect, int, int)
        QPainter.drawArc(int, int, int, int, int, int)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawChord(self, *__args):
        """
        QPainter.drawChord(QRectF, int, int)
        QPainter.drawChord(QRect, int, int)
        QPainter.drawChord(int, int, int, int, int, int)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawConvexPolygon(self, *__args):
        """
        QPainter.drawConvexPolygon(QPointF, ...)
        QPainter.drawConvexPolygon(QPolygonF)
        QPainter.drawConvexPolygon(QPoint, ...)
        QPainter.drawConvexPolygon(QPolygon)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawEllipse(self, *__args):
        """
        QPainter.drawEllipse(QRectF)
        QPainter.drawEllipse(QRect)
        QPainter.drawEllipse(int, int, int, int)
        QPainter.drawEllipse(QPointF, float, float)
        QPainter.drawEllipse(QPoint, int, int)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawImage(self, *__args):
        """
        QPainter.drawImage(QRectF, QImage, QRectF, Qt.ImageConversionFlags flags=Qt.AutoColor)
        QPainter.drawImage(QRect, QImage, QRect, Qt.ImageConversionFlags flags=Qt.AutoColor)
        QPainter.drawImage(QPointF, QImage, QRectF, Qt.ImageConversionFlags flags=Qt.AutoColor)
        QPainter.drawImage(QPoint, QImage, QRect, Qt.ImageConversionFlags flags=Qt.AutoColor)
        QPainter.drawImage(QRectF, QImage)
        QPainter.drawImage(QRect, QImage)
        QPainter.drawImage(QPointF, QImage)
        QPainter.drawImage(QPoint, QImage)
        QPainter.drawImage(int, int, QImage, int sx=0, int sy=0, int sw=-1, int sh=-1, Qt.ImageConversionFlags flags=Qt.AutoColor)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawLine(self, *__args):
        """
        QPainter.drawLine(QLineF)
        QPainter.drawLine(QLine)
        QPainter.drawLine(int, int, int, int)
        QPainter.drawLine(QPoint, QPoint)
        QPainter.drawLine(QPointF, QPointF)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawLines(self, *__args):
        """
        QPainter.drawLines(QLineF, ...)
        QPainter.drawLines(list-of-QLineF)
        QPainter.drawLines(QPointF, ...)
        QPainter.drawLines(list-of-QPointF)
        QPainter.drawLines(QLine, ...)
        QPainter.drawLines(list-of-QLine)
        QPainter.drawLines(QPoint, ...)
        QPainter.drawLines(list-of-QPoint)
        """
        pass

    # real signature unknown; restored from __doc__
    def drawPath(self, QPainterPath):
        """ QPainter.drawPath(QPainterPath) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawPicture(self, *__args):
        """
        QPainter.drawPicture(QPointF, QPicture)
        QPainter.drawPicture(int, int, QPicture)
        QPainter.drawPicture(QPoint, QPicture)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawPie(self, *__args):
        """
        QPainter.drawPie(QRectF, int, int)
        QPainter.drawPie(QRect, int, int)
        QPainter.drawPie(int, int, int, int, int, int)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawPixmap(self, *__args):
        """
        QPainter.drawPixmap(QRectF, QPixmap, QRectF)
        QPainter.drawPixmap(QRect, QPixmap, QRect)
        QPainter.drawPixmap(QPointF, QPixmap)
        QPainter.drawPixmap(QPoint, QPixmap)
        QPainter.drawPixmap(QRect, QPixmap)
        QPainter.drawPixmap(int, int, QPixmap)
        QPainter.drawPixmap(int, int, int, int, QPixmap)
        QPainter.drawPixmap(int, int, int, int, QPixmap, int, int, int, int)
        QPainter.drawPixmap(int, int, QPixmap, int, int, int, int)
        QPainter.drawPixmap(QPointF, QPixmap, QRectF)
        QPainter.drawPixmap(QPoint, QPixmap, QRect)
        """
        pass

    # real signature unknown; restored from __doc__
    def drawPixmapFragments(self, p_list, QPixmap, QPainter_PixmapFragmentHints_hints=0):
        """ QPainter.drawPixmapFragments(list, QPixmap, QPainter.PixmapFragmentHints hints=0) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawPoint(self, *__args):
        """
        QPainter.drawPoint(QPointF)
        QPainter.drawPoint(int, int)
        QPainter.drawPoint(QPoint)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawPoints(self, *__args):
        """
        QPainter.drawPoints(QPointF, ...)
        QPainter.drawPoints(QPolygonF)
        QPainter.drawPoints(QPoint, ...)
        QPainter.drawPoints(QPolygon)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawPolygon(self, *__args):
        """
        QPainter.drawPolygon(QPointF, ...)
        QPainter.drawPolygon(QPolygonF, Qt.FillRule fillRule=Qt.OddEvenFill)
        QPainter.drawPolygon(QPoint, ...)
        QPainter.drawPolygon(QPolygon, Qt.FillRule fillRule=Qt.OddEvenFill)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawPolyline(self, *__args):
        """
        QPainter.drawPolyline(QPointF, ...)
        QPainter.drawPolyline(QPolygonF)
        QPainter.drawPolyline(QPoint, ...)
        QPainter.drawPolyline(QPolygon)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawRect(self, *__args):
        """
        QPainter.drawRect(QRectF)
        QPainter.drawRect(int, int, int, int)
        QPainter.drawRect(QRect)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawRects(self, *__args):
        """
        QPainter.drawRects(QRectF, ...)
        QPainter.drawRects(list-of-QRectF)
        QPainter.drawRects(QRect, ...)
        QPainter.drawRects(list-of-QRect)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawRoundedRect(self, *__args):
        """
        QPainter.drawRoundedRect(QRectF, float, float, Qt.SizeMode mode=Qt.AbsoluteSize)
        QPainter.drawRoundedRect(int, int, int, int, float, float, Qt.SizeMode mode=Qt.AbsoluteSize)
        QPainter.drawRoundedRect(QRect, float, float, Qt.SizeMode mode=Qt.AbsoluteSize)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawRoundRect(self, *__args):
        """
        QPainter.drawRoundRect(QRectF, int xRound=25, int yRound=25)
        QPainter.drawRoundRect(int, int, int, int, int xRound=25, int yRound=25)
        QPainter.drawRoundRect(QRect, int xRound=25, int yRound=25)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawStaticText(self, *__args):
        """
        QPainter.drawStaticText(QPointF, QStaticText)
        QPainter.drawStaticText(QPoint, QStaticText)
        QPainter.drawStaticText(int, int, QStaticText)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawText(self, *__args):
        """
        QPainter.drawText(QPointF, QString)
        QPainter.drawText(QRectF, int, QString) -> QRectF
        QPainter.drawText(QRect, int, QString) -> QRect
        QPainter.drawText(QRectF, QString, QTextOption option=QTextOption())
        QPainter.drawText(QPoint, QString)
        QPainter.drawText(int, int, int, int, int, QString) -> QRect
        QPainter.drawText(int, int, QString)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawTiledPixmap(self, *__args):
        """
        QPainter.drawTiledPixmap(QRectF, QPixmap, QPointF pos=QPointF())
        QPainter.drawTiledPixmap(QRect, QPixmap, QPoint pos=QPoint())
        QPainter.drawTiledPixmap(int, int, int, int, QPixmap, int sx=0, int sy=0)
        """
        pass

    def end(self):  # real signature unknown; restored from __doc__
        """ QPainter.end() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def endNativePainting(self):
        """ QPainter.endNativePainting() """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def eraseRect(self, *__args):
        """
        QPainter.eraseRect(QRectF)
        QPainter.eraseRect(QRect)
        QPainter.eraseRect(int, int, int, int)
        """
        pass

    # real signature unknown; restored from __doc__
    def fillPath(self, QPainterPath, QBrush):
        """ QPainter.fillPath(QPainterPath, QBrush) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def fillRect(self, *__args):
        """
        QPainter.fillRect(QRectF, QBrush)
        QPainter.fillRect(QRect, QBrush)
        QPainter.fillRect(int, int, int, int, QBrush)
        QPainter.fillRect(QRectF, QColor)
        QPainter.fillRect(QRect, QColor)
        QPainter.fillRect(int, int, int, int, QColor)
        QPainter.fillRect(int, int, int, int, Qt.GlobalColor)
        QPainter.fillRect(QRect, Qt.GlobalColor)
        QPainter.fillRect(QRectF, Qt.GlobalColor)
        QPainter.fillRect(int, int, int, int, Qt.BrushStyle)
        QPainter.fillRect(QRect, Qt.BrushStyle)
        QPainter.fillRect(QRectF, Qt.BrushStyle)
        """
        pass

    def font(self):  # real signature unknown; restored from __doc__
        """ QPainter.font() -> QFont """
        return QFont

    def fontInfo(self):  # real signature unknown; restored from __doc__
        """ QPainter.fontInfo() -> QFontInfo """
        return QFontInfo

    def fontMetrics(self):  # real signature unknown; restored from __doc__
        """ QPainter.fontMetrics() -> QFontMetrics """
        return QFontMetrics

    def hasClipping(self):  # real signature unknown; restored from __doc__
        """ QPainter.hasClipping() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def initFrom(self, QWidget):
        """ QPainter.initFrom(QWidget) """
        pass

    def isActive(self):  # real signature unknown; restored from __doc__
        """ QPainter.isActive() -> bool """
        return False

    def layoutDirection(self):  # real signature unknown; restored from __doc__
        """ QPainter.layoutDirection() -> Qt.LayoutDirection """
        pass

    def matrix(self):  # real signature unknown; restored from __doc__
        """ QPainter.matrix() -> QMatrix """
        return QMatrix

    def matrixEnabled(self):  # real signature unknown; restored from __doc__
        """ QPainter.matrixEnabled() -> bool """
        return False

    def opacity(self):  # real signature unknown; restored from __doc__
        """ QPainter.opacity() -> float """
        return 0.0

    def paintEngine(self):  # real signature unknown; restored from __doc__
        """ QPainter.paintEngine() -> QPaintEngine """
        return QPaintEngine

    def pen(self):  # real signature unknown; restored from __doc__
        """ QPainter.pen() -> QPen """
        return QPen

    # real signature unknown; restored from __doc__ with multiple overloads
    def PixmapFragment(self, QPainter_PixmapFragment=None):
        """
        QPainter.PixmapFragment()
        QPainter.PixmapFragment(QPainter.PixmapFragment)
        """
        pass

    def PixmapFragmentHint(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def PixmapFragmentHints(self, *__args):
        """
        QPainter.PixmapFragmentHints(QPainter.PixmapFragmentHints)
        QPainter.PixmapFragmentHints(int)
        QPainter.PixmapFragmentHints()
        """
        pass

    # real signature unknown; restored from __doc__
    def redirected(self, QPaintDevice, QPoint_offset=None):
        """ QPainter.redirected(QPaintDevice, QPoint offset=None) -> QPaintDevice """
        return QPaintDevice

    def RenderHint(self, *args, **kwargs):  # real signature unknown
        pass

    def renderHints(self):  # real signature unknown; restored from __doc__
        """ QPainter.renderHints() -> QPainter.RenderHints """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def RenderHints(self, *__args):
        """
        QPainter.RenderHints(QPainter.RenderHints)
        QPainter.RenderHints(int)
        QPainter.RenderHints()
        """
        pass

    def resetMatrix(self):  # real signature unknown; restored from __doc__
        """ QPainter.resetMatrix() """
        pass

    def resetTransform(self):  # real signature unknown; restored from __doc__
        """ QPainter.resetTransform() """
        pass

    def restore(self):  # real signature unknown; restored from __doc__
        """ QPainter.restore() """
        pass

    # real signature unknown; restored from __doc__
    def restoreRedirected(self, QPaintDevice):
        """ QPainter.restoreRedirected(QPaintDevice) """
        pass

    def rotate(self, p_float):  # real signature unknown; restored from __doc__
        """ QPainter.rotate(float) """
        pass

    def save(self):  # real signature unknown; restored from __doc__
        """ QPainter.save() """
        pass

    # real signature unknown; restored from __doc__
    def scale(self, p_float, p_float_1):
        """ QPainter.scale(float, float) """
        pass

    # real signature unknown; restored from __doc__
    def setBackground(self, QBrush):
        """ QPainter.setBackground(QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def setBackgroundMode(self, Qt_BGMode):
        """ QPainter.setBackgroundMode(Qt.BGMode) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setBrush(self, *__args):
        """
        QPainter.setBrush(QBrush)
        QPainter.setBrush(Qt.BrushStyle)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setBrushOrigin(self, *__args):
        """
        QPainter.setBrushOrigin(QPointF)
        QPainter.setBrushOrigin(int, int)
        QPainter.setBrushOrigin(QPoint)
        """
        pass

    # real signature unknown; restored from __doc__
    def setClipPath(self, QPainterPath, Qt_ClipOperation_operation=None):
        """ QPainter.setClipPath(QPainterPath, Qt.ClipOperation operation=Qt.ReplaceClip) """
        pass

    # real signature unknown; restored from __doc__
    def setClipping(self, bool):
        """ QPainter.setClipping(bool) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setClipRect(self, *__args):
        """
        QPainter.setClipRect(QRectF, Qt.ClipOperation operation=Qt.ReplaceClip)
        QPainter.setClipRect(int, int, int, int, Qt.ClipOperation operation=Qt.ReplaceClip)
        QPainter.setClipRect(QRect, Qt.ClipOperation operation=Qt.ReplaceClip)
        """
        pass

    # real signature unknown; restored from __doc__
    def setClipRegion(self, QRegion, Qt_ClipOperation_operation=None):
        """ QPainter.setClipRegion(QRegion, Qt.ClipOperation operation=Qt.ReplaceClip) """
        pass

    # real signature unknown; restored from __doc__
    def setCompositionMode(self, QPainter_CompositionMode):
        """ QPainter.setCompositionMode(QPainter.CompositionMode) """
        pass

    def setFont(self, QFont):  # real signature unknown; restored from __doc__
        """ QPainter.setFont(QFont) """
        pass

    # real signature unknown; restored from __doc__
    def setLayoutDirection(self, Qt_LayoutDirection):
        """ QPainter.setLayoutDirection(Qt.LayoutDirection) """
        pass

    # real signature unknown; restored from __doc__
    def setMatrix(self, QMatrix, bool_combine=False):
        """ QPainter.setMatrix(QMatrix, bool combine=False) """
        pass

    # real signature unknown; restored from __doc__
    def setMatrixEnabled(self, bool):
        """ QPainter.setMatrixEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setOpacity(self, p_float):
        """ QPainter.setOpacity(float) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setPen(self, *__args):
        """
        QPainter.setPen(QColor)
        QPainter.setPen(QPen)
        QPainter.setPen(Qt.PenStyle)
        """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def setRedirected(self, QPaintDevice, QPaintDevice_1, QPoint_offset=None, *args, **kwargs):
        """ QPainter.setRedirected(QPaintDevice, QPaintDevice, QPoint offset=QPoint()) """
        pass

    # real signature unknown; restored from __doc__
    def setRenderHint(self, QPainter_RenderHint, bool_on=True):
        """ QPainter.setRenderHint(QPainter.RenderHint, bool on=True) """
        pass

    # real signature unknown; restored from __doc__
    def setRenderHints(self, QPainter_RenderHints, bool_on=True):
        """ QPainter.setRenderHints(QPainter.RenderHints, bool on=True) """
        pass

    # real signature unknown; restored from __doc__
    def setTransform(self, QTransform, bool_combine=False):
        """ QPainter.setTransform(QTransform, bool combine=False) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setViewport(self, *__args):
        """
        QPainter.setViewport(QRect)
        QPainter.setViewport(int, int, int, int)
        """
        pass

    # real signature unknown; restored from __doc__
    def setViewTransformEnabled(self, bool):
        """ QPainter.setViewTransformEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setWindow(self, *__args):
        """
        QPainter.setWindow(QRect)
        QPainter.setWindow(int, int, int, int)
        """
        pass

    # real signature unknown; restored from __doc__
    def setWorldMatrix(self, QMatrix, bool_combine=False):
        """ QPainter.setWorldMatrix(QMatrix, bool combine=False) """
        pass

    # real signature unknown; restored from __doc__
    def setWorldMatrixEnabled(self, bool):
        """ QPainter.setWorldMatrixEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setWorldTransform(self, QTransform, bool_combine=False):
        """ QPainter.setWorldTransform(QTransform, bool combine=False) """
        pass

    # real signature unknown; restored from __doc__
    def shear(self, p_float, p_float_1):
        """ QPainter.shear(float, float) """
        pass

    # real signature unknown; restored from __doc__
    def strokePath(self, QPainterPath, QPen):
        """ QPainter.strokePath(QPainterPath, QPen) """
        pass

    # real signature unknown; restored from __doc__
    def testRenderHint(self, QPainter_RenderHint):
        """ QPainter.testRenderHint(QPainter.RenderHint) -> bool """
        return False

    def transform(self):  # real signature unknown; restored from __doc__
        """ QPainter.transform() -> QTransform """
        return QTransform

    # real signature unknown; restored from __doc__ with multiple overloads
    def translate(self, *__args):
        """
        QPainter.translate(QPointF)
        QPainter.translate(float, float)
        QPainter.translate(QPoint)
        """
        pass

    def viewport(self):  # real signature unknown; restored from __doc__
        """ QPainter.viewport() -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def viewTransformEnabled(self):
        """ QPainter.viewTransformEnabled() -> bool """
        return False

    def window(self):  # real signature unknown; restored from __doc__
        """ QPainter.window() -> QRect """
        pass

    def worldMatrix(self):  # real signature unknown; restored from __doc__
        """ QPainter.worldMatrix() -> QMatrix """
        return QMatrix

    # real signature unknown; restored from __doc__
    def worldMatrixEnabled(self):
        """ QPainter.worldMatrixEnabled() -> bool """
        return False

    def worldTransform(self):  # real signature unknown; restored from __doc__
        """ QPainter.worldTransform() -> QTransform """
        return QTransform

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QPaintDevice=None):
        pass

    __weakref__ = property(lambda self: object())  # default

    Antialiasing = 1
    CompositionMode_Clear = 2
    CompositionMode_ColorBurn = 19
    CompositionMode_ColorDodge = 18
    CompositionMode_Darken = 16
    CompositionMode_Destination = 4
    CompositionMode_DestinationAtop = 10
    CompositionMode_DestinationIn = 6
    CompositionMode_DestinationOut = 8
    CompositionMode_DestinationOver = 1
    CompositionMode_Difference = 22
    CompositionMode_Exclusion = 23
    CompositionMode_HardLight = 20
    CompositionMode_Lighten = 17
    CompositionMode_Multiply = 13
    CompositionMode_Overlay = 15
    CompositionMode_Plus = 12
    CompositionMode_Screen = 14
    CompositionMode_SoftLight = 21
    CompositionMode_Source = 3
    CompositionMode_SourceAtop = 9
    CompositionMode_SourceIn = 5
    CompositionMode_SourceOut = 7
    CompositionMode_SourceOver = 0
    CompositionMode_Xor = 11
    HighQualityAntialiasing = 8
    NonCosmeticDefaultPen = 16
    OpaqueHint = 1
    RasterOp_NotSource = 30
    RasterOp_NotSourceAndDestination = 31
    RasterOp_NotSourceAndNotDestination = 27
    RasterOp_NotSourceOrNotDestination = 28
    RasterOp_NotSourceXorDestination = 29
    RasterOp_SourceAndDestination = 25
    RasterOp_SourceAndNotDestination = 32
    RasterOp_SourceOrDestination = 24
    RasterOp_SourceXorDestination = 26
    SmoothPixmapTransform = 4
    TextAntialiasing = 2


class QPainterPath():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QPainterPath()
    QPainterPath(QPointF)
    QPainterPath(QPainterPath)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def addEllipse(self, *__args):
        """
        QPainterPath.addEllipse(QRectF)
        QPainterPath.addEllipse(float, float, float, float)
        QPainterPath.addEllipse(QPointF, float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def addPath(self, QPainterPath):
        """ QPainterPath.addPath(QPainterPath) """
        pass

    # real signature unknown; restored from __doc__
    def addPolygon(self, QPolygonF):
        """ QPainterPath.addPolygon(QPolygonF) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def addRect(self, *__args):
        """
        QPainterPath.addRect(QRectF)
        QPainterPath.addRect(float, float, float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def addRegion(self, QRegion):
        """ QPainterPath.addRegion(QRegion) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def addRoundedRect(self, *__args):
        """
        QPainterPath.addRoundedRect(QRectF, float, float, Qt.SizeMode mode=Qt.AbsoluteSize)
        QPainterPath.addRoundedRect(float, float, float, float, float, float, Qt.SizeMode mode=Qt.AbsoluteSize)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def addRoundRect(self, *__args):
        """
        QPainterPath.addRoundRect(QRectF, int, int)
        QPainterPath.addRoundRect(float, float, float, float, int, int)
        QPainterPath.addRoundRect(QRectF, int)
        QPainterPath.addRoundRect(float, float, float, float, int)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def addText(self, *__args):
        """
        QPainterPath.addText(QPointF, QFont, QString)
        QPainterPath.addText(float, float, QFont, QString)
        """
        pass

    # real signature unknown; restored from __doc__
    def angleAtPercent(self, p_float):
        """ QPainterPath.angleAtPercent(float) -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def arcMoveTo(self, *__args):
        """
        QPainterPath.arcMoveTo(QRectF, float)
        QPainterPath.arcMoveTo(float, float, float, float, float)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def arcTo(self, *__args):
        """
        QPainterPath.arcTo(QRectF, float, float)
        QPainterPath.arcTo(float, float, float, float, float, float)
        """
        pass

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QPainterPath.boundingRect() -> QRectF """
        pass

    def closeSubpath(self):  # real signature unknown; restored from __doc__
        """ QPainterPath.closeSubpath() """
        pass

    # real signature unknown; restored from __doc__
    def connectPath(self, QPainterPath):
        """ QPainterPath.connectPath(QPainterPath) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def contains(self, *__args):
        """
        QPainterPath.contains(QPointF) -> bool
        QPainterPath.contains(QRectF) -> bool
        QPainterPath.contains(QPainterPath) -> bool
        """
        return False

    # real signature unknown; restored from __doc__
    def controlPointRect(self):
        """ QPainterPath.controlPointRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def cubicTo(self, *__args):
        """
        QPainterPath.cubicTo(QPointF, QPointF, QPointF)
        QPainterPath.cubicTo(float, float, float, float, float, float)
        """
        pass

    def currentPosition(self):  # real signature unknown; restored from __doc__
        """ QPainterPath.currentPosition() -> QPointF """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def Element(self, QPainterPath_Element=None):
        """
        QPainterPath.Element()
        QPainterPath.Element(QPainterPath.Element)
        """
        pass

    # real signature unknown; restored from __doc__
    def elementAt(self, p_int):
        """ QPainterPath.elementAt(int) -> QPainterPath.Element """
        pass

    def elementCount(self):  # real signature unknown; restored from __doc__
        """ QPainterPath.elementCount() -> int """
        return 0

    def ElementType(self, *args, **kwargs):  # real signature unknown
        pass

    def fillRule(self):  # real signature unknown; restored from __doc__
        """ QPainterPath.fillRule() -> Qt.FillRule """
        pass

    # real signature unknown; restored from __doc__
    def intersected(self, QPainterPath):
        """ QPainterPath.intersected(QPainterPath) -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__ with multiple overloads
    def intersects(self, *__args):
        """
        QPainterPath.intersects(QRectF) -> bool
        QPainterPath.intersects(QPainterPath) -> bool
        """
        return False

    def isEmpty(self):  # real signature unknown; restored from __doc__
        """ QPainterPath.isEmpty() -> bool """
        return False

    def length(self):  # real signature unknown; restored from __doc__
        """ QPainterPath.length() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def lineTo(self, *__args):
        """
        QPainterPath.lineTo(QPointF)
        QPainterPath.lineTo(float, float)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def moveTo(self, *__args):
        """
        QPainterPath.moveTo(QPointF)
        QPainterPath.moveTo(float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def percentAtLength(self, p_float):
        """ QPainterPath.percentAtLength(float) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def pointAtPercent(self, p_float):
        """ QPainterPath.pointAtPercent(float) -> QPointF """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def quadTo(self, *__args):
        """
        QPainterPath.quadTo(QPointF, QPointF)
        QPainterPath.quadTo(float, float, float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def setElementPositionAt(self, p_int, p_float, p_float_1):
        """ QPainterPath.setElementPositionAt(int, float, float) """
        pass

    # real signature unknown; restored from __doc__
    def setFillRule(self, Qt_FillRule):
        """ QPainterPath.setFillRule(Qt.FillRule) """
        pass

    def simplified(self):  # real signature unknown; restored from __doc__
        """ QPainterPath.simplified() -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def slopeAtPercent(self, p_float):
        """ QPainterPath.slopeAtPercent(float) -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def subtracted(self, QPainterPath):
        """ QPainterPath.subtracted(QPainterPath) -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def subtractedInverted(self, QPainterPath):
        """ QPainterPath.subtractedInverted(QPainterPath) -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__ with multiple overloads
    def toFillPolygon(self, *__args):
        """
        QPainterPath.toFillPolygon(QMatrix matrix=QMatrix()) -> QPolygonF
        QPainterPath.toFillPolygon(QTransform) -> QPolygonF
        """
        return QPolygonF

    # real signature unknown; restored from __doc__ with multiple overloads
    def toFillPolygons(self, *__args):
        """
        QPainterPath.toFillPolygons(QMatrix matrix=QMatrix()) -> list-of-QPolygonF
        QPainterPath.toFillPolygons(QTransform) -> list-of-QPolygonF
        """
        pass

    def toReversed(self):  # real signature unknown; restored from __doc__
        """ QPainterPath.toReversed() -> QPainterPath """
        return QPainterPath

    # real signature unknown; restored from __doc__ with multiple overloads
    def toSubpathPolygons(self, *__args):
        """
        QPainterPath.toSubpathPolygons(QMatrix matrix=QMatrix()) -> list-of-QPolygonF
        QPainterPath.toSubpathPolygons(QTransform) -> list-of-QPolygonF
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def translate(self, *__args):
        """
        QPainterPath.translate(float, float)
        QPainterPath.translate(QPointF)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def translated(self, *__args):
        """
        QPainterPath.translated(float, float) -> QPainterPath
        QPainterPath.translated(QPointF) -> QPainterPath
        """
        return QPainterPath

    # real signature unknown; restored from __doc__
    def united(self, QPainterPath):
        """ QPainterPath.united(QPainterPath) -> QPainterPath """
        return QPainterPath

    def __add__(self, y):  # real signature unknown; restored from __doc__
        """ x.__add__(y) <==> x+y """
        pass

    def __and__(self, y):  # real signature unknown; restored from __doc__
        """ x.__and__(y) <==> x&y """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    def __iand__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iand__(y) <==> x&y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __ior__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ior__(y) <==> x|y """
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __mul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__mul__(y) <==> x*y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __or__(self, y):  # real signature unknown; restored from __doc__
        """ x.__or__(y) <==> x|y """
        pass

    def __radd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__radd__(y) <==> y+x """
        pass

    def __rand__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rand__(y) <==> y&x """
        pass

    def __rmul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rmul__(y) <==> y*x """
        pass

    def __ror__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ror__(y) <==> y|x """
        pass

    def __rsub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rsub__(y) <==> y-x """
        pass

    def __sub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__sub__(y) <==> x-y """
        pass

    __weakref__ = property(lambda self: object())  # default

    CurveToDataElement = 3
    CurveToElement = 2
    LineToElement = 1
    MoveToElement = 0


class QPainterPathStroker():  # skipped bases: <type 'sip.simplewrapper'>

    """ QPainterPathStroker() """

    def capStyle(self):  # real signature unknown; restored from __doc__
        """ QPainterPathStroker.capStyle() -> Qt.PenCapStyle """
        pass

    # real signature unknown; restored from __doc__
    def createStroke(self, QPainterPath):
        """ QPainterPathStroker.createStroke(QPainterPath) -> QPainterPath """
        return QPainterPath

    def curveThreshold(self):  # real signature unknown; restored from __doc__
        """ QPainterPathStroker.curveThreshold() -> float """
        return 0.0

    def dashOffset(self):  # real signature unknown; restored from __doc__
        """ QPainterPathStroker.dashOffset() -> float """
        return 0.0

    def dashPattern(self):  # real signature unknown; restored from __doc__
        """ QPainterPathStroker.dashPattern() -> list-of-float """
        pass

    def joinStyle(self):  # real signature unknown; restored from __doc__
        """ QPainterPathStroker.joinStyle() -> Qt.PenJoinStyle """
        pass

    def miterLimit(self):  # real signature unknown; restored from __doc__
        """ QPainterPathStroker.miterLimit() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def setCapStyle(self, Qt_PenCapStyle):
        """ QPainterPathStroker.setCapStyle(Qt.PenCapStyle) """
        pass

    # real signature unknown; restored from __doc__
    def setCurveThreshold(self, p_float):
        """ QPainterPathStroker.setCurveThreshold(float) """
        pass

    # real signature unknown; restored from __doc__
    def setDashOffset(self, p_float):
        """ QPainterPathStroker.setDashOffset(float) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setDashPattern(self, *__args):
        """
        QPainterPathStroker.setDashPattern(Qt.PenStyle)
        QPainterPathStroker.setDashPattern(list-of-float)
        """
        pass

    # real signature unknown; restored from __doc__
    def setJoinStyle(self, Qt_PenJoinStyle):
        """ QPainterPathStroker.setJoinStyle(Qt.PenJoinStyle) """
        pass

    # real signature unknown; restored from __doc__
    def setMiterLimit(self, p_float):
        """ QPainterPathStroker.setMiterLimit(float) """
        pass

    # real signature unknown; restored from __doc__
    def setWidth(self, p_float):
        """ QPainterPathStroker.setWidth(float) """
        pass

    def width(self):  # real signature unknown; restored from __doc__
        """ QPainterPathStroker.width() -> float """
        return 0.0

    def __init__(self):  # real signature unknown; restored from __doc__
        pass

    __weakref__ = property(lambda self: object())  # default


class QPaintEvent(__PyQt4_QtCore.QEvent):

    """
    QPaintEvent(QRegion)
    QPaintEvent(QRect)
    QPaintEvent(QPaintEvent)
    """

    def rect(self):  # real signature unknown; restored from __doc__
        """ QPaintEvent.rect() -> QRect """
        pass

    def region(self):  # real signature unknown; restored from __doc__
        """ QPaintEvent.region() -> QRegion """
        return QRegion

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QPalette():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QPalette()
    QPalette(QColor)
    QPalette(Qt.GlobalColor)
    QPalette(QColor, QColor)
    QPalette(QBrush, QBrush, QBrush, QBrush, QBrush, QBrush, QBrush, QBrush, QBrush)
    QPalette(QColor, QColor, QColor, QColor, QColor, QColor, QColor)
    QPalette(QPalette)
    QPalette(QVariant)
    """

    def alternateBase(self):  # real signature unknown; restored from __doc__
        """ QPalette.alternateBase() -> QBrush """
        return QBrush

    def background(self):  # real signature unknown; restored from __doc__
        """ QPalette.background() -> QBrush """
        return QBrush

    def base(self):  # real signature unknown; restored from __doc__
        """ QPalette.base() -> QBrush """
        return QBrush

    def brightText(self):  # real signature unknown; restored from __doc__
        """ QPalette.brightText() -> QBrush """
        return QBrush

    # real signature unknown; restored from __doc__ with multiple overloads
    def brush(self, *__args):
        """
        QPalette.brush(QPalette.ColorGroup, QPalette.ColorRole) -> QBrush
        QPalette.brush(QPalette.ColorRole) -> QBrush
        """
        return QBrush

    def button(self):  # real signature unknown; restored from __doc__
        """ QPalette.button() -> QBrush """
        return QBrush

    def buttonText(self):  # real signature unknown; restored from __doc__
        """ QPalette.buttonText() -> QBrush """
        return QBrush

    def cacheKey(self):  # real signature unknown; restored from __doc__
        """ QPalette.cacheKey() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def color(self, *__args):
        """
        QPalette.color(QPalette.ColorGroup, QPalette.ColorRole) -> QColor
        QPalette.color(QPalette.ColorRole) -> QColor
        """
        return QColor

    def ColorGroup(self, *args, **kwargs):  # real signature unknown
        pass

    def ColorRole(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def currentColorGroup(self):
        """ QPalette.currentColorGroup() -> QPalette.ColorGroup """
        pass

    def dark(self):  # real signature unknown; restored from __doc__
        """ QPalette.dark() -> QBrush """
        return QBrush

    def foreground(self):  # real signature unknown; restored from __doc__
        """ QPalette.foreground() -> QBrush """
        return QBrush

    def highlight(self):  # real signature unknown; restored from __doc__
        """ QPalette.highlight() -> QBrush """
        return QBrush

    def highlightedText(self):  # real signature unknown; restored from __doc__
        """ QPalette.highlightedText() -> QBrush """
        return QBrush

    # real signature unknown; restored from __doc__
    def isBrushSet(self, QPalette_ColorGroup, QPalette_ColorRole):
        """ QPalette.isBrushSet(QPalette.ColorGroup, QPalette.ColorRole) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isCopyOf(self, QPalette):
        """ QPalette.isCopyOf(QPalette) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isEqual(self, QPalette_ColorGroup, QPalette_ColorGroup_1):
        """ QPalette.isEqual(QPalette.ColorGroup, QPalette.ColorGroup) -> bool """
        return False

    def light(self):  # real signature unknown; restored from __doc__
        """ QPalette.light() -> QBrush """
        return QBrush

    def link(self):  # real signature unknown; restored from __doc__
        """ QPalette.link() -> QBrush """
        return QBrush

    def linkVisited(self):  # real signature unknown; restored from __doc__
        """ QPalette.linkVisited() -> QBrush """
        return QBrush

    def mid(self):  # real signature unknown; restored from __doc__
        """ QPalette.mid() -> QBrush """
        return QBrush

    def midlight(self):  # real signature unknown; restored from __doc__
        """ QPalette.midlight() -> QBrush """
        return QBrush

    # real signature unknown; restored from __doc__ with multiple overloads
    def resolve(self, *__args):
        """
        QPalette.resolve(QPalette) -> QPalette
        QPalette.resolve() -> int
        QPalette.resolve(int)
        """
        return QPalette or 0

    def serialNumber(self):  # real signature unknown; restored from __doc__
        """ QPalette.serialNumber() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def setBrush(self, *__args):
        """
        QPalette.setBrush(QPalette.ColorGroup, QPalette.ColorRole, QBrush)
        QPalette.setBrush(QPalette.ColorRole, QBrush)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setColor(self, *__args):
        """
        QPalette.setColor(QPalette.ColorGroup, QPalette.ColorRole, QColor)
        QPalette.setColor(QPalette.ColorRole, QColor)
        """
        pass

    # real signature unknown; restored from __doc__
    def setColorGroup(self, QPalette_ColorGroup, QBrush, QBrush_1, QBrush_2, QBrush_3, QBrush_4, QBrush_5, QBrush_6, QBrush_7, QBrush_8):
        """ QPalette.setColorGroup(QPalette.ColorGroup, QBrush, QBrush, QBrush, QBrush, QBrush, QBrush, QBrush, QBrush, QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentColorGroup(self, QPalette_ColorGroup):
        """ QPalette.setCurrentColorGroup(QPalette.ColorGroup) """
        pass

    def shadow(self):  # real signature unknown; restored from __doc__
        """ QPalette.shadow() -> QBrush """
        return QBrush

    def text(self):  # real signature unknown; restored from __doc__
        """ QPalette.text() -> QBrush """
        return QBrush

    def toolTipBase(self):  # real signature unknown; restored from __doc__
        """ QPalette.toolTipBase() -> QBrush """
        return QBrush

    def toolTipText(self):  # real signature unknown; restored from __doc__
        """ QPalette.toolTipText() -> QBrush """
        return QBrush

    def window(self):  # real signature unknown; restored from __doc__
        """ QPalette.window() -> QBrush """
        return QBrush

    def windowText(self):  # real signature unknown; restored from __doc__
        """ QPalette.windowText() -> QBrush """
        return QBrush

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default

    Active = 0
    All = 5
    AlternateBase = 16
    Background = 10
    Base = 9
    BrightText = 7
    Button = 1
    ButtonText = 8
    Current = 4
    Dark = 4
    Disabled = 1
    Foreground = 0
    Highlight = 12
    HighlightedText = 13
    Inactive = 2
    Light = 2
    Link = 14
    LinkVisited = 15
    Mid = 5
    Midlight = 3
    NColorGroups = 3
    NColorRoles = 20
    Normal = 0
    NoRole = 17
    Shadow = 11
    Text = 6
    ToolTipBase = 18
    ToolTipText = 19
    Window = 10
    WindowText = 0


class QPanGesture(QGesture):

    """ QPanGesture(QObject parent=None) """

    def acceleration(self):  # real signature unknown; restored from __doc__
        """ QPanGesture.acceleration() -> float """
        return 0.0

    def delta(self):  # real signature unknown; restored from __doc__
        """ QPanGesture.delta() -> QPointF """
        pass

    def lastOffset(self):  # real signature unknown; restored from __doc__
        """ QPanGesture.lastOffset() -> QPointF """
        pass

    def offset(self):  # real signature unknown; restored from __doc__
        """ QPanGesture.offset() -> QPointF """
        pass

    # real signature unknown; restored from __doc__
    def setAcceleration(self, p_float):
        """ QPanGesture.setAcceleration(float) """
        pass

    # real signature unknown; restored from __doc__
    def setLastOffset(self, QPointF):
        """ QPanGesture.setLastOffset(QPointF) """
        pass

    # real signature unknown; restored from __doc__
    def setOffset(self, QPointF):
        """ QPanGesture.setOffset(QPointF) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QPen():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QPen()
    QPen(Qt.PenStyle)
    QPen(QColor)
    QPen(QBrush, float, Qt.PenStyle style=Qt.SolidLine, Qt.PenCapStyle cap=Qt.SquareCap, Qt.PenJoinStyle join=Qt.BevelJoin)
    QPen(QPen)
    QPen(QVariant)
    """

    def brush(self):  # real signature unknown; restored from __doc__
        """ QPen.brush() -> QBrush """
        return QBrush

    def capStyle(self):  # real signature unknown; restored from __doc__
        """ QPen.capStyle() -> Qt.PenCapStyle """
        pass

    def color(self):  # real signature unknown; restored from __doc__
        """ QPen.color() -> QColor """
        return QColor

    def dashOffset(self):  # real signature unknown; restored from __doc__
        """ QPen.dashOffset() -> float """
        return 0.0

    def dashPattern(self):  # real signature unknown; restored from __doc__
        """ QPen.dashPattern() -> list-of-float """
        pass

    def isCosmetic(self):  # real signature unknown; restored from __doc__
        """ QPen.isCosmetic() -> bool """
        return False

    def isSolid(self):  # real signature unknown; restored from __doc__
        """ QPen.isSolid() -> bool """
        return False

    def joinStyle(self):  # real signature unknown; restored from __doc__
        """ QPen.joinStyle() -> Qt.PenJoinStyle """
        pass

    def miterLimit(self):  # real signature unknown; restored from __doc__
        """ QPen.miterLimit() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def setBrush(self, QBrush):
        """ QPen.setBrush(QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def setCapStyle(self, Qt_PenCapStyle):
        """ QPen.setCapStyle(Qt.PenCapStyle) """
        pass

    # real signature unknown; restored from __doc__
    def setColor(self, QColor):
        """ QPen.setColor(QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setCosmetic(self, bool):
        """ QPen.setCosmetic(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setDashOffset(self, p_float):
        """ QPen.setDashOffset(float) """
        pass

    # real signature unknown; restored from __doc__
    def setDashPattern(self, list_of_float):
        """ QPen.setDashPattern(list-of-float) """
        pass

    # real signature unknown; restored from __doc__
    def setJoinStyle(self, Qt_PenJoinStyle):
        """ QPen.setJoinStyle(Qt.PenJoinStyle) """
        pass

    # real signature unknown; restored from __doc__
    def setMiterLimit(self, p_float):
        """ QPen.setMiterLimit(float) """
        pass

    # real signature unknown; restored from __doc__
    def setStyle(self, Qt_PenStyle):
        """ QPen.setStyle(Qt.PenStyle) """
        pass

    def setWidth(self, p_int):  # real signature unknown; restored from __doc__
        """ QPen.setWidth(int) """
        pass

    # real signature unknown; restored from __doc__
    def setWidthF(self, p_float):
        """ QPen.setWidthF(float) """
        pass

    def style(self):  # real signature unknown; restored from __doc__
        """ QPen.style() -> Qt.PenStyle """
        pass

    def width(self):  # real signature unknown; restored from __doc__
        """ QPen.width() -> int """
        return 0

    def widthF(self):  # real signature unknown; restored from __doc__
        """ QPen.widthF() -> float """
        return 0.0

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QPicture(QPaintDevice):

    """
    QPicture(int formatVersion=-1)
    QPicture(QPicture)
    """

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QPicture.boundingRect() -> QRect """
        pass

    def data(self):  # real signature unknown; restored from __doc__
        """ QPicture.data() -> str """
        return ""

    def detach(self):  # real signature unknown; restored from __doc__
        """ QPicture.detach() """
        pass

    def devType(self):  # real signature unknown; restored from __doc__
        """ QPicture.devType() -> int """
        return 0

    def inputFormatList(self):  # real signature unknown; restored from __doc__
        """ QPicture.inputFormatList() -> QStringList """
        pass

    def inputFormats(self):  # real signature unknown; restored from __doc__
        """ QPicture.inputFormats() -> list-of-QByteArray """
        pass

    def isDetached(self):  # real signature unknown; restored from __doc__
        """ QPicture.isDetached() -> bool """
        return False

    def isNull(self):  # real signature unknown; restored from __doc__
        """ QPicture.isNull() -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def load(self, *__args):
        """
        QPicture.load(QIODevice, str format=None) -> bool
        QPicture.load(QString, str format=None) -> bool
        """
        return False

    # real signature unknown; restored from __doc__
    def metric(self, QPaintDevice_PaintDeviceMetric):
        """ QPicture.metric(QPaintDevice.PaintDeviceMetric) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def outputFormatList(self):
        """ QPicture.outputFormatList() -> QStringList """
        pass

    def outputFormats(self):  # real signature unknown; restored from __doc__
        """ QPicture.outputFormats() -> list-of-QByteArray """
        pass

    def paintEngine(self):  # real signature unknown; restored from __doc__
        """ QPicture.paintEngine() -> QPaintEngine """
        return QPaintEngine

    # real signature unknown; restored from __doc__
    def pictureFormat(self, QString):
        """ QPicture.pictureFormat(QString) -> str """
        return ""

    def play(self, QPainter):  # real signature unknown; restored from __doc__
        """ QPicture.play(QPainter) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def save(self, *__args):
        """
        QPicture.save(QIODevice, str format=None) -> bool
        QPicture.save(QString, str format=None) -> bool
        """
        return False

    # real signature unknown; restored from __doc__
    def setBoundingRect(self, QRect):
        """ QPicture.setBoundingRect(QRect) """
        pass

    def setData(self, p_str):  # real signature unknown; restored from __doc__
        """ QPicture.setData(str) """
        pass

    def size(self):  # real signature unknown; restored from __doc__
        """ QPicture.size() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QPictureIO():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QPictureIO()
    QPictureIO(QIODevice, str)
    QPictureIO(QString, str)
    """
    # real signature unknown; restored from __doc__

    def defineIOHandler(self, p_str, p_str_1, p_str_2, callable, callable_1):
        """ QPictureIO.defineIOHandler(str, str, str, callable, callable) """
        pass

    def description(self):  # real signature unknown; restored from __doc__
        """ QPictureIO.description() -> QString """
        pass

    def fileName(self):  # real signature unknown; restored from __doc__
        """ QPictureIO.fileName() -> QString """
        pass

    def format(self):  # real signature unknown; restored from __doc__
        """ QPictureIO.format() -> str """
        return ""

    def gamma(self):  # real signature unknown; restored from __doc__
        """ QPictureIO.gamma() -> float """
        return 0.0

    def inputFormats(self):  # real signature unknown; restored from __doc__
        """ QPictureIO.inputFormats() -> list-of-QByteArray """
        pass

    def ioDevice(self):  # real signature unknown; restored from __doc__
        """ QPictureIO.ioDevice() -> QIODevice """
        pass

    def outputFormats(self):  # real signature unknown; restored from __doc__
        """ QPictureIO.outputFormats() -> list-of-QByteArray """
        pass

    def parameters(self):  # real signature unknown; restored from __doc__
        """ QPictureIO.parameters() -> str """
        return ""

    def picture(self):  # real signature unknown; restored from __doc__
        """ QPictureIO.picture() -> QPicture """
        return QPicture

    # real signature unknown; restored from __doc__ with multiple overloads
    def pictureFormat(self, *__args):
        """
        QPictureIO.pictureFormat(QString) -> QByteArray
        QPictureIO.pictureFormat(QIODevice) -> QByteArray
        """
        pass

    def quality(self):  # real signature unknown; restored from __doc__
        """ QPictureIO.quality() -> int """
        return 0

    def read(self):  # real signature unknown; restored from __doc__
        """ QPictureIO.read() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setDescription(self, QString):
        """ QPictureIO.setDescription(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setFileName(self, QString):
        """ QPictureIO.setFileName(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setFormat(self, p_str):
        """ QPictureIO.setFormat(str) """
        pass

    # real signature unknown; restored from __doc__
    def setGamma(self, p_float):
        """ QPictureIO.setGamma(float) """
        pass

    # real signature unknown; restored from __doc__
    def setIODevice(self, QIODevice):
        """ QPictureIO.setIODevice(QIODevice) """
        pass

    # real signature unknown; restored from __doc__
    def setParameters(self, p_str):
        """ QPictureIO.setParameters(str) """
        pass

    # real signature unknown; restored from __doc__
    def setPicture(self, QPicture):
        """ QPictureIO.setPicture(QPicture) """
        pass

    # real signature unknown; restored from __doc__
    def setQuality(self, p_int):
        """ QPictureIO.setQuality(int) """
        pass

    # real signature unknown; restored from __doc__
    def setStatus(self, p_int):
        """ QPictureIO.setStatus(int) """
        pass

    def status(self):  # real signature unknown; restored from __doc__
        """ QPictureIO.status() -> int """
        return 0

    def write(self):  # real signature unknown; restored from __doc__
        """ QPictureIO.write() -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    __weakref__ = property(lambda self: object())  # default


class QPinchGesture(QGesture):

    """ QPinchGesture(QObject parent=None) """

    def centerPoint(self):  # real signature unknown; restored from __doc__
        """ QPinchGesture.centerPoint() -> QPointF """
        pass

    def ChangeFlag(self, *args, **kwargs):  # real signature unknown
        pass

    def changeFlags(self):  # real signature unknown; restored from __doc__
        """ QPinchGesture.changeFlags() -> QPinchGesture.ChangeFlags """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def ChangeFlags(self, *__args):
        """
        QPinchGesture.ChangeFlags(QPinchGesture.ChangeFlags)
        QPinchGesture.ChangeFlags(int)
        QPinchGesture.ChangeFlags()
        """
        pass

    def lastCenterPoint(self):  # real signature unknown; restored from __doc__
        """ QPinchGesture.lastCenterPoint() -> QPointF """
        pass

    # real signature unknown; restored from __doc__
    def lastRotationAngle(self):
        """ QPinchGesture.lastRotationAngle() -> float """
        return 0.0

    def lastScaleFactor(self):  # real signature unknown; restored from __doc__
        """ QPinchGesture.lastScaleFactor() -> float """
        return 0.0

    def rotationAngle(self):  # real signature unknown; restored from __doc__
        """ QPinchGesture.rotationAngle() -> float """
        return 0.0

    def scaleFactor(self):  # real signature unknown; restored from __doc__
        """ QPinchGesture.scaleFactor() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def setCenterPoint(self, QPointF):
        """ QPinchGesture.setCenterPoint(QPointF) """
        pass

    # real signature unknown; restored from __doc__
    def setChangeFlags(self, QPinchGesture_ChangeFlags):
        """ QPinchGesture.setChangeFlags(QPinchGesture.ChangeFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setLastCenterPoint(self, QPointF):
        """ QPinchGesture.setLastCenterPoint(QPointF) """
        pass

    # real signature unknown; restored from __doc__
    def setLastRotationAngle(self, p_float):
        """ QPinchGesture.setLastRotationAngle(float) """
        pass

    # real signature unknown; restored from __doc__
    def setLastScaleFactor(self, p_float):
        """ QPinchGesture.setLastScaleFactor(float) """
        pass

    # real signature unknown; restored from __doc__
    def setRotationAngle(self, p_float):
        """ QPinchGesture.setRotationAngle(float) """
        pass

    # real signature unknown; restored from __doc__
    def setScaleFactor(self, p_float):
        """ QPinchGesture.setScaleFactor(float) """
        pass

    # real signature unknown; restored from __doc__
    def setStartCenterPoint(self, QPointF):
        """ QPinchGesture.setStartCenterPoint(QPointF) """
        pass

    # real signature unknown; restored from __doc__
    def setTotalChangeFlags(self, QPinchGesture_ChangeFlags):
        """ QPinchGesture.setTotalChangeFlags(QPinchGesture.ChangeFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setTotalRotationAngle(self, p_float):
        """ QPinchGesture.setTotalRotationAngle(float) """
        pass

    # real signature unknown; restored from __doc__
    def setTotalScaleFactor(self, p_float):
        """ QPinchGesture.setTotalScaleFactor(float) """
        pass

    # real signature unknown; restored from __doc__
    def startCenterPoint(self):
        """ QPinchGesture.startCenterPoint() -> QPointF """
        pass

    # real signature unknown; restored from __doc__
    def totalChangeFlags(self):
        """ QPinchGesture.totalChangeFlags() -> QPinchGesture.ChangeFlags """
        pass

    # real signature unknown; restored from __doc__
    def totalRotationAngle(self):
        """ QPinchGesture.totalRotationAngle() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def totalScaleFactor(self):
        """ QPinchGesture.totalScaleFactor() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass

    CenterPointChanged = 4
    RotationAngleChanged = 2
    ScaleFactorChanged = 1


class QPixmapCache():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QPixmapCache()
    QPixmapCache(QPixmapCache)
    """

    def cacheLimit(self):  # real signature unknown; restored from __doc__
        """ QPixmapCache.cacheLimit() -> int """
        return 0

    def clear(self):  # real signature unknown; restored from __doc__
        """ QPixmapCache.clear() """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def find(self, *__args):
        """
        QPixmapCache.find(QString) -> QPixmap
        QPixmapCache.find(QString, QPixmap) -> bool
        QPixmapCache.find(QPixmapCache.Key, QPixmap) -> bool
        """
        return QPixmap or False

    # real signature unknown; restored from __doc__ with multiple overloads
    def insert(self, *__args):
        """
        QPixmapCache.insert(QString, QPixmap) -> bool
        QPixmapCache.insert(QPixmap) -> QPixmapCache.Key
        """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def Key(self, QPixmapCache_Key=None):
        """
        QPixmapCache.Key()
        QPixmapCache.Key(QPixmapCache.Key)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def remove(self, *__args):
        """
        QPixmapCache.remove(QString)
        QPixmapCache.remove(QPixmapCache.Key)
        """
        pass

    # real signature unknown; restored from __doc__
    def replace(self, QPixmapCache_Key, QPixmap):
        """ QPixmapCache.replace(QPixmapCache.Key, QPixmap) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setCacheLimit(self, p_int):
        """ QPixmapCache.setCacheLimit(int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QPixmapCache=None):
        pass

    __weakref__ = property(lambda self: object())  # default


class QPlainTextDocumentLayout(QAbstractTextDocumentLayout):

    """ QPlainTextDocumentLayout(QTextDocument) """
    # real signature unknown; restored from __doc__

    def blockBoundingRect(self, QTextBlock):
        """ QPlainTextDocumentLayout.blockBoundingRect(QTextBlock) -> QRectF """
        pass

    def cursorWidth(self):  # real signature unknown; restored from __doc__
        """ QPlainTextDocumentLayout.cursorWidth() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def documentChanged(self, p_int, p_int_1, p_int_2):
        """ QPlainTextDocumentLayout.documentChanged(int, int, int) """
        pass

    def documentSize(self):  # real signature unknown; restored from __doc__
        """ QPlainTextDocumentLayout.documentSize() -> QSizeF """
        pass

    # real signature unknown; restored from __doc__
    def draw(self, QPainter, QAbstractTextDocumentLayout_PaintContext):
        """ QPlainTextDocumentLayout.draw(QPainter, QAbstractTextDocumentLayout.PaintContext) """
        pass

    # real signature unknown; restored from __doc__
    def ensureBlockLayout(self, QTextBlock):
        """ QPlainTextDocumentLayout.ensureBlockLayout(QTextBlock) """
        pass

    # real signature unknown; restored from __doc__
    def frameBoundingRect(self, QTextFrame):
        """ QPlainTextDocumentLayout.frameBoundingRect(QTextFrame) -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def hitTest(self, QPointF, Qt_HitTestAccuracy):
        """ QPlainTextDocumentLayout.hitTest(QPointF, Qt.HitTestAccuracy) -> int """
        return 0

    def pageCount(self):  # real signature unknown; restored from __doc__
        """ QPlainTextDocumentLayout.pageCount() -> int """
        return 0

    def requestUpdate(self):  # real signature unknown; restored from __doc__
        """ QPlainTextDocumentLayout.requestUpdate() """
        pass

    # real signature unknown; restored from __doc__
    def setCursorWidth(self, p_int):
        """ QPlainTextDocumentLayout.setCursorWidth(int) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QTextDocument):
        pass


class QPlainTextEdit(QAbstractScrollArea):

    """
    QPlainTextEdit(QWidget parent=None)
    QPlainTextEdit(QString, QWidget parent=None)
    """

    # real signature unknown; restored from __doc__
    def anchorAt(self, QPoint):
        """ QPlainTextEdit.anchorAt(QPoint) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def appendHtml(self, QString):
        """ QPlainTextEdit.appendHtml(QString) """
        pass

    # real signature unknown; restored from __doc__
    def appendPlainText(self, QString):
        """ QPlainTextEdit.appendPlainText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def backgroundVisible(self):
        """ QPlainTextEdit.backgroundVisible() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def blockBoundingGeometry(self, QTextBlock):
        """ QPlainTextEdit.blockBoundingGeometry(QTextBlock) -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def blockBoundingRect(self, QTextBlock):
        """ QPlainTextEdit.blockBoundingRect(QTextBlock) -> QRectF """
        pass

    def blockCount(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.blockCount() -> int """
        return 0

    def blockCountChanged(self, *args, **kwargs):  # real signature unknown
        """ QPlainTextEdit.blockCountChanged[int] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def canInsertFromMimeData(self, QMimeData):
        """ QPlainTextEdit.canInsertFromMimeData(QMimeData) -> bool """
        return False

    def canPaste(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.canPaste() -> bool """
        return False

    def centerCursor(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.centerCursor() """
        pass

    def centerOnScroll(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.centerOnScroll() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QPlainTextEdit.changeEvent(QEvent) """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.clear() """
        pass

    def contentOffset(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.contentOffset() -> QPointF """
        pass

    # real signature unknown; restored from __doc__
    def contextMenuEvent(self, QContextMenuEvent):
        """ QPlainTextEdit.contextMenuEvent(QContextMenuEvent) """
        pass

    def copy(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.copy() """
        pass

    def copyAvailable(self, *args, **kwargs):  # real signature unknown
        """ QPlainTextEdit.copyAvailable[bool] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def createMimeDataFromSelection(self):
        """ QPlainTextEdit.createMimeDataFromSelection() -> QMimeData """
        pass

    # real signature unknown; restored from __doc__
    def createStandardContextMenu(self):
        """ QPlainTextEdit.createStandardContextMenu() -> QMenu """
        return QMenu

    # real signature unknown; restored from __doc__
    def currentCharFormat(self):
        """ QPlainTextEdit.currentCharFormat() -> QTextCharFormat """
        return QTextCharFormat

    # real signature unknown; restored from __doc__
    def cursorForPosition(self, QPoint):
        """ QPlainTextEdit.cursorForPosition(QPoint) -> QTextCursor """
        return QTextCursor

    def cursorPositionChanged(self, *args, **kwargs):  # real signature unknown
        """ QPlainTextEdit.cursorPositionChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def cursorRect(self, QTextCursor=None):
        """
        QPlainTextEdit.cursorRect(QTextCursor) -> QRect
        QPlainTextEdit.cursorRect() -> QRect
        """
        pass

    def cursorWidth(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.cursorWidth() -> int """
        return 0

    def cut(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.cut() """
        pass

    def document(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.document() -> QTextDocument """
        return QTextDocument

    def documentTitle(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.documentTitle() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def dragEnterEvent(self, QDragEnterEvent):
        """ QPlainTextEdit.dragEnterEvent(QDragEnterEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragLeaveEvent(self, QDragLeaveEvent):
        """ QPlainTextEdit.dragLeaveEvent(QDragLeaveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragMoveEvent(self, QDragMoveEvent):
        """ QPlainTextEdit.dragMoveEvent(QDragMoveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dropEvent(self, QDropEvent):
        """ QPlainTextEdit.dropEvent(QDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def ensureCursorVisible(self):
        """ QPlainTextEdit.ensureCursorVisible() """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.event(QEvent) -> bool """
        return False

    def extraSelections(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.extraSelections() -> list-of-QTextEdit.ExtraSelection """
        pass

    # real signature unknown; restored from __doc__
    def find(self, QString, QTextDocument_FindFlags_options=0):
        """ QPlainTextEdit.find(QString, QTextDocument.FindFlags options=0) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def firstVisibleBlock(self):
        """ QPlainTextEdit.firstVisibleBlock() -> QTextBlock """
        return QTextBlock

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QPlainTextEdit.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusNextPrevChild(self, bool):
        """ QPlainTextEdit.focusNextPrevChild(bool) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QPlainTextEdit.focusOutEvent(QFocusEvent) """
        pass

    def getPaintContext(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.getPaintContext() -> QAbstractTextDocumentLayout.PaintContext """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodEvent(self, QInputMethodEvent):
        """ QPlainTextEdit.inputMethodEvent(QInputMethodEvent) """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodQuery(self, Qt_InputMethodQuery):
        """ QPlainTextEdit.inputMethodQuery(Qt.InputMethodQuery) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def insertFromMimeData(self, QMimeData):
        """ QPlainTextEdit.insertFromMimeData(QMimeData) """
        pass

    # real signature unknown; restored from __doc__
    def insertPlainText(self, QString):
        """ QPlainTextEdit.insertPlainText(QString) """
        pass

    def isReadOnly(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.isReadOnly() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isUndoRedoEnabled(self):
        """ QPlainTextEdit.isUndoRedoEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QPlainTextEdit.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def keyReleaseEvent(self, QKeyEvent):
        """ QPlainTextEdit.keyReleaseEvent(QKeyEvent) """
        pass

    def LineWrapMode(self, *args, **kwargs):  # real signature unknown
        pass

    def lineWrapMode(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.lineWrapMode() -> QPlainTextEdit.LineWrapMode """
        pass

    # real signature unknown; restored from __doc__
    def loadResource(self, p_int, QUrl):
        """ QPlainTextEdit.loadResource(int, QUrl) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def maximumBlockCount(self):
        """ QPlainTextEdit.maximumBlockCount() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def mergeCurrentCharFormat(self, QTextCharFormat):
        """ QPlainTextEdit.mergeCurrentCharFormat(QTextCharFormat) """
        pass

    def modificationChanged(self, *args, **kwargs):  # real signature unknown
        """ QPlainTextEdit.modificationChanged[bool] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def mouseDoubleClickEvent(self, QMouseEvent):
        """ QPlainTextEdit.mouseDoubleClickEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QPlainTextEdit.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QPlainTextEdit.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QPlainTextEdit.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def moveCursor(self, QTextCursor_MoveOperation, QTextCursor_MoveMode_mode=None):
        """ QPlainTextEdit.moveCursor(QTextCursor.MoveOperation, QTextCursor.MoveMode mode=QTextCursor.MoveAnchor) """
        pass

    def overwriteMode(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.overwriteMode() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QPlainTextEdit.paintEvent(QPaintEvent) """
        pass

    def paste(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.paste() """
        pass

    # real signature unknown; restored from __doc__
    def print_(self, QPrinter):
        """ QPlainTextEdit.print_(QPrinter) """
        pass

    def redo(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.redo() """
        pass

    def redoAvailable(self, *args, **kwargs):  # real signature unknown
        """ QPlainTextEdit.redoAvailable[bool] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QPlainTextEdit.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def scrollContentsBy(self, p_int, p_int_1):
        """ QPlainTextEdit.scrollContentsBy(int, int) """
        pass

    def selectAll(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.selectAll() """
        pass

    def selectionChanged(self, *args, **kwargs):  # real signature unknown
        """ QPlainTextEdit.selectionChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def setBackgroundVisible(self, bool):
        """ QPlainTextEdit.setBackgroundVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setCenterOnScroll(self, bool):
        """ QPlainTextEdit.setCenterOnScroll(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentCharFormat(self, QTextCharFormat):
        """ QPlainTextEdit.setCurrentCharFormat(QTextCharFormat) """
        pass

    # real signature unknown; restored from __doc__
    def setCursorWidth(self, p_int):
        """ QPlainTextEdit.setCursorWidth(int) """
        pass

    # real signature unknown; restored from __doc__
    def setDocument(self, QTextDocument):
        """ QPlainTextEdit.setDocument(QTextDocument) """
        pass

    # real signature unknown; restored from __doc__
    def setDocumentTitle(self, QString):
        """ QPlainTextEdit.setDocumentTitle(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setExtraSelections(self, list_of_QTextEdit_ExtraSelection):
        """ QPlainTextEdit.setExtraSelections(list-of-QTextEdit.ExtraSelection) """
        pass

    # real signature unknown; restored from __doc__
    def setLineWrapMode(self, QPlainTextEdit_LineWrapMode):
        """ QPlainTextEdit.setLineWrapMode(QPlainTextEdit.LineWrapMode) """
        pass

    # real signature unknown; restored from __doc__
    def setMaximumBlockCount(self, p_int):
        """ QPlainTextEdit.setMaximumBlockCount(int) """
        pass

    # real signature unknown; restored from __doc__
    def setOverwriteMode(self, bool):
        """ QPlainTextEdit.setOverwriteMode(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setPlainText(self, QString):
        """ QPlainTextEdit.setPlainText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setReadOnly(self, bool):
        """ QPlainTextEdit.setReadOnly(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setTabChangesFocus(self, bool):
        """ QPlainTextEdit.setTabChangesFocus(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setTabStopWidth(self, p_int):
        """ QPlainTextEdit.setTabStopWidth(int) """
        pass

    # real signature unknown; restored from __doc__
    def setTextCursor(self, QTextCursor):
        """ QPlainTextEdit.setTextCursor(QTextCursor) """
        pass

    # real signature unknown; restored from __doc__
    def setTextInteractionFlags(self, Qt_TextInteractionFlags):
        """ QPlainTextEdit.setTextInteractionFlags(Qt.TextInteractionFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setUndoRedoEnabled(self, bool):
        """ QPlainTextEdit.setUndoRedoEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setWordWrapMode(self, QTextOption_WrapMode):
        """ QPlainTextEdit.setWordWrapMode(QTextOption.WrapMode) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QPlainTextEdit.showEvent(QShowEvent) """
        pass

    def tabChangesFocus(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.tabChangesFocus() -> bool """
        return False

    def tabStopWidth(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.tabStopWidth() -> int """
        return 0

    def textChanged(self, *args, **kwargs):  # real signature unknown
        """ QPlainTextEdit.textChanged[] [signal] """
        pass

    def textCursor(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.textCursor() -> QTextCursor """
        return QTextCursor

    # real signature unknown; restored from __doc__
    def textInteractionFlags(self):
        """ QPlainTextEdit.textInteractionFlags() -> Qt.TextInteractionFlags """
        pass

    # real signature unknown; restored from __doc__
    def timerEvent(self, QTimerEvent):
        """ QPlainTextEdit.timerEvent(QTimerEvent) """
        pass

    def toPlainText(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.toPlainText() -> QString """
        pass

    def undo(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.undo() """
        pass

    def undoAvailable(self, *args, **kwargs):  # real signature unknown
        """ QPlainTextEdit.undoAvailable[bool] [signal] """
        pass

    def updateRequest(self, *args, **kwargs):  # real signature unknown
        """ QPlainTextEdit.updateRequest[QRect, int] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def wheelEvent(self, QWheelEvent):
        """ QPlainTextEdit.wheelEvent(QWheelEvent) """
        pass

    def wordWrapMode(self):  # real signature unknown; restored from __doc__
        """ QPlainTextEdit.wordWrapMode() -> QTextOption.WrapMode """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    NoWrap = 0
    WidgetWidth = 1


class QPolygon():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QPolygon()
    QPolygon(QPolygon)
    QPolygon(list-of-QPoint)
    QPolygon(QRect, bool closed=False)
    QPolygon(int)
    QPolygon(list-of-int)
    QPolygon(QVariant)
    """

    def append(self, QPoint):  # real signature unknown; restored from __doc__
        """ QPolygon.append(QPoint) """
        pass

    def at(self, p_int):  # real signature unknown; restored from __doc__
        """ QPolygon.at(int) -> QPoint """
        pass

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QPolygon.boundingRect() -> QRect """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QPolygon.clear() """
        pass

    # real signature unknown; restored from __doc__
    def contains(self, QPoint):
        """ QPolygon.contains(QPoint) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def containsPoint(self, QPoint, Qt_FillRule):
        """ QPolygon.containsPoint(QPoint, Qt.FillRule) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def count(self, QPoint=None):
        """
        QPolygon.count(QPoint) -> int
        QPolygon.count() -> int
        """
        return 0

    def data(self):  # real signature unknown; restored from __doc__
        """ QPolygon.data() -> sip.voidptr """
        pass

    # real signature unknown; restored from __doc__
    def fill(self, QPoint, int_size=-1):
        """ QPolygon.fill(QPoint, int size=-1) """
        pass

    def first(self):  # real signature unknown; restored from __doc__
        """ QPolygon.first() -> QPoint """
        pass

    # real signature unknown; restored from __doc__
    def indexOf(self, QPoint, int_from=0):
        """ QPolygon.indexOf(QPoint, int from=0) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def insert(self, p_int, QPoint):
        """ QPolygon.insert(int, QPoint) """
        pass

    # real signature unknown; restored from __doc__
    def intersected(self, QPolygon):
        """ QPolygon.intersected(QPolygon) -> QPolygon """
        return QPolygon

    def isEmpty(self):  # real signature unknown; restored from __doc__
        """ QPolygon.isEmpty() -> bool """
        return False

    def last(self):  # real signature unknown; restored from __doc__
        """ QPolygon.last() -> QPoint """
        pass

    # real signature unknown; restored from __doc__
    def lastIndexOf(self, QPoint, int_from=-1):
        """ QPolygon.lastIndexOf(QPoint, int from=-1) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def mid(self, p_int, int_length=-1):
        """ QPolygon.mid(int, int length=-1) -> QPolygon """
        return QPolygon

    def point(self, p_int):  # real signature unknown; restored from __doc__
        """ QPolygon.point(int) -> QPoint """
        pass

    def prepend(self, QPoint):  # real signature unknown; restored from __doc__
        """ QPolygon.prepend(QPoint) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def putPoints(self, p_int, p_int_1, *__args):
        """
        QPolygon.putPoints(int, int, int, ...)
        QPolygon.putPoints(int, int, QPolygon, int from=0)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def remove(self, p_int, p_int_1=None):
        """
        QPolygon.remove(int)
        QPolygon.remove(int, int)
        """
        pass

    # real signature unknown; restored from __doc__
    def replace(self, p_int, QPoint):
        """ QPolygon.replace(int, QPoint) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setPoint(self, p_int, *__args):
        """
        QPolygon.setPoint(int, QPoint)
        QPolygon.setPoint(int, int, int)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setPoints(self, *__args):
        """
        QPolygon.setPoints(list-of-int)
        QPolygon.setPoints(int, int, ...)
        """
        pass

    def size(self):  # real signature unknown; restored from __doc__
        """ QPolygon.size() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def subtracted(self, QPolygon):
        """ QPolygon.subtracted(QPolygon) -> QPolygon """
        return QPolygon

    # real signature unknown; restored from __doc__ with multiple overloads
    def translate(self, *__args):
        """
        QPolygon.translate(int, int)
        QPolygon.translate(QPoint)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def translated(self, *__args):
        """
        QPolygon.translated(int, int) -> QPolygon
        QPolygon.translated(QPoint) -> QPolygon
        """
        return QPolygon

    # real signature unknown; restored from __doc__
    def united(self, QPolygon):
        """ QPolygon.united(QPolygon) -> QPolygon """
        return QPolygon

    # real signature unknown; restored from __doc__ with multiple overloads
    def value(self, p_int, QPoint=None):
        """
        QPolygon.value(int) -> QPoint
        QPolygon.value(int, QPoint) -> QPoint
        """
        pass

    def __add__(self, y):  # real signature unknown; restored from __doc__
        """ x.__add__(y) <==> x+y """
        pass

    def __contains__(self, y):  # real signature unknown; restored from __doc__
        """ x.__contains__(y) <==> y in x """
        pass

    def __delitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__delitem__(y) <==> del x[y] """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __getitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+=y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lshift__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lshift__(y) <==> x<<y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __mul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__mul__(y) <==> x*y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    def __rlshift__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rlshift__(y) <==> y<<x """
        pass

    def __rmul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rmul__(y) <==> y*x """
        pass

    # real signature unknown; restored from __doc__
    def __setitem__(self, i, y):
        """ x.__setitem__(i, y) <==> x[i]=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QPolygonF():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QPolygonF()
    QPolygonF(QPolygonF)
    QPolygonF(list-of-QPointF)
    QPolygonF(QRectF)
    QPolygonF(QPolygon)
    QPolygonF(int)
    """

    def append(self, QPointF):  # real signature unknown; restored from __doc__
        """ QPolygonF.append(QPointF) """
        pass

    def at(self, p_int):  # real signature unknown; restored from __doc__
        """ QPolygonF.at(int) -> QPointF """
        pass

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QPolygonF.boundingRect() -> QRectF """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QPolygonF.clear() """
        pass

    # real signature unknown; restored from __doc__
    def contains(self, QPointF):
        """ QPolygonF.contains(QPointF) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def containsPoint(self, QPointF, Qt_FillRule):
        """ QPolygonF.containsPoint(QPointF, Qt.FillRule) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def count(self, QPointF=None):
        """
        QPolygonF.count(QPointF) -> int
        QPolygonF.count() -> int
        """
        return 0

    def data(self):  # real signature unknown; restored from __doc__
        """ QPolygonF.data() -> sip.voidptr """
        pass

    # real signature unknown; restored from __doc__
    def fill(self, QPointF, int_size=-1):
        """ QPolygonF.fill(QPointF, int size=-1) """
        pass

    def first(self):  # real signature unknown; restored from __doc__
        """ QPolygonF.first() -> QPointF """
        pass

    # real signature unknown; restored from __doc__
    def indexOf(self, QPointF, int_from=0):
        """ QPolygonF.indexOf(QPointF, int from=0) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def insert(self, p_int, QPointF):
        """ QPolygonF.insert(int, QPointF) """
        pass

    # real signature unknown; restored from __doc__
    def intersected(self, QPolygonF):
        """ QPolygonF.intersected(QPolygonF) -> QPolygonF """
        return QPolygonF

    def isClosed(self):  # real signature unknown; restored from __doc__
        """ QPolygonF.isClosed() -> bool """
        return False

    def isEmpty(self):  # real signature unknown; restored from __doc__
        """ QPolygonF.isEmpty() -> bool """
        return False

    def last(self):  # real signature unknown; restored from __doc__
        """ QPolygonF.last() -> QPointF """
        pass

    # real signature unknown; restored from __doc__
    def lastIndexOf(self, QPointF, int_from=-1):
        """ QPolygonF.lastIndexOf(QPointF, int from=-1) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def mid(self, p_int, int_length=-1):
        """ QPolygonF.mid(int, int length=-1) -> QPolygonF """
        return QPolygonF

    # real signature unknown; restored from __doc__
    def prepend(self, QPointF):
        """ QPolygonF.prepend(QPointF) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def remove(self, p_int, p_int_1=None):
        """
        QPolygonF.remove(int)
        QPolygonF.remove(int, int)
        """
        pass

    # real signature unknown; restored from __doc__
    def replace(self, p_int, QPointF):
        """ QPolygonF.replace(int, QPointF) """
        pass

    def size(self):  # real signature unknown; restored from __doc__
        """ QPolygonF.size() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def subtracted(self, QPolygonF):
        """ QPolygonF.subtracted(QPolygonF) -> QPolygonF """
        return QPolygonF

    def toPolygon(self):  # real signature unknown; restored from __doc__
        """ QPolygonF.toPolygon() -> QPolygon """
        return QPolygon

    # real signature unknown; restored from __doc__ with multiple overloads
    def translate(self, *__args):
        """
        QPolygonF.translate(QPointF)
        QPolygonF.translate(float, float)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def translated(self, *__args):
        """
        QPolygonF.translated(QPointF) -> QPolygonF
        QPolygonF.translated(float, float) -> QPolygonF
        """
        return QPolygonF

    # real signature unknown; restored from __doc__
    def united(self, QPolygonF):
        """ QPolygonF.united(QPolygonF) -> QPolygonF """
        return QPolygonF

    # real signature unknown; restored from __doc__ with multiple overloads
    def value(self, p_int, QPointF=None):
        """
        QPolygonF.value(int) -> QPointF
        QPolygonF.value(int, QPointF) -> QPointF
        """
        pass

    def __add__(self, y):  # real signature unknown; restored from __doc__
        """ x.__add__(y) <==> x+y """
        pass

    def __contains__(self, y):  # real signature unknown; restored from __doc__
        """ x.__contains__(y) <==> y in x """
        pass

    def __delitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__delitem__(y) <==> del x[y] """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __getitem__(self, y):  # real signature unknown; restored from __doc__
        """ x.__getitem__(y) <==> x[y] """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+=y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lshift__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lshift__(y) <==> x<<y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __mul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__mul__(y) <==> x*y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __rlshift__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rlshift__(y) <==> y<<x """
        pass

    def __rmul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rmul__(y) <==> y*x """
        pass

    # real signature unknown; restored from __doc__
    def __setitem__(self, i, y):
        """ x.__setitem__(i, y) <==> x[i]=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QPrintDialog(QAbstractPrintDialog):

    """
    QPrintDialog(QPrinter, QWidget parent=None)
    QPrintDialog(QWidget parent=None)
    """

    def accept(self):  # real signature unknown; restored from __doc__
        """ QPrintDialog.accept() """
        pass

    def accepted(self):  # real signature unknown; restored from __doc__
        """
        QPrintDialog.accepted()
        QPrintDialog.accepted[QPrinter] [signal]
        """
        pass

    def done(self, p_int):  # real signature unknown; restored from __doc__
        """ QPrintDialog.done(int) """
        pass

    def exec_(self):  # real signature unknown; restored from __doc__
        """ QPrintDialog.exec_() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def open(self, *__args):
        """
        QPrintDialog.open()
        QPrintDialog.open(QObject, SLOT())
        QPrintDialog.open(callable)
        """
        pass

    def options(self):  # real signature unknown; restored from __doc__
        """ QPrintDialog.options() -> QAbstractPrintDialog.PrintDialogOptions """
        pass

    # real signature unknown; restored from __doc__
    def setOption(self, QAbstractPrintDialog_PrintDialogOption, bool_on=True):
        """ QPrintDialog.setOption(QAbstractPrintDialog.PrintDialogOption, bool on=True) """
        pass

    # real signature unknown; restored from __doc__
    def setOptions(self, QAbstractPrintDialog_PrintDialogOptions):
        """ QPrintDialog.setOptions(QAbstractPrintDialog.PrintDialogOptions) """
        pass

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QPrintDialog.setVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def testOption(self, QAbstractPrintDialog_PrintDialogOption):
        """ QPrintDialog.testOption(QAbstractPrintDialog.PrintDialogOption) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QPrintEngine():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QPrintEngine()
    QPrintEngine(QPrintEngine)
    """

    def abort(self):  # real signature unknown; restored from __doc__
        """ QPrintEngine.abort() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def metric(self, QPaintDevice_PaintDeviceMetric):
        """ QPrintEngine.metric(QPaintDevice.PaintDeviceMetric) -> int """
        return 0

    def newPage(self):  # real signature unknown; restored from __doc__
        """ QPrintEngine.newPage() -> bool """
        return False

    # real signature unknown
    def PrintEnginePropertyKey(self, *args, **kwargs):
        pass

    def printerState(self):  # real signature unknown; restored from __doc__
        """ QPrintEngine.printerState() -> QPrinter.PrinterState """
        pass

    # real signature unknown; restored from __doc__
    def property(self, QPrintEngine_PrintEnginePropertyKey):
        """ QPrintEngine.property(QPrintEngine.PrintEnginePropertyKey) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def setProperty(self, QPrintEngine_PrintEnginePropertyKey, QVariant):
        """ QPrintEngine.setProperty(QPrintEngine.PrintEnginePropertyKey, QVariant) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QPrintEngine=None):
        pass

    __weakref__ = property(lambda self: object())  # default

    PPK_CollateCopies = 0
    PPK_ColorMode = 1
    PPK_CopyCount = 25
    PPK_Creator = 2
    PPK_CustomBase = 65280
    PPK_CustomPaperSize = 23
    PPK_DocumentName = 3
    PPK_Duplex = 21
    PPK_FontEmbedding = 19
    PPK_FullPage = 4
    PPK_NumberOfCopies = 5
    PPK_Orientation = 6
    PPK_OutputFileName = 7
    PPK_PageMargins = 24
    PPK_PageOrder = 8
    PPK_PageRect = 9
    PPK_PageSize = 10
    PPK_PaperRect = 11
    PPK_PaperSize = 10
    PPK_PaperSource = 12
    PPK_PaperSources = 22
    PPK_PrinterName = 13
    PPK_PrinterProgram = 14
    PPK_Resolution = 15
    PPK_SelectionOption = 16
    PPK_SupportedResolutions = 17
    PPK_SupportsMultipleCopies = 26
    PPK_SuppressSystemPrintStatus = 20
    PPK_WindowsPageSize = 18


class QPrinter(QPaintDevice):

    """
    QPrinter(QPrinter.PrinterMode mode=QPrinter.ScreenResolution)
    QPrinter(QPrinterInfo, QPrinter.PrinterMode mode=QPrinter.ScreenResolution)
    """

    def abort(self):  # real signature unknown; restored from __doc__
        """ QPrinter.abort() -> bool """
        return False

    def actualNumCopies(self):  # real signature unknown; restored from __doc__
        """ QPrinter.actualNumCopies() -> int """
        return 0

    def collateCopies(self):  # real signature unknown; restored from __doc__
        """ QPrinter.collateCopies() -> bool """
        return False

    def ColorMode(self, *args, **kwargs):  # real signature unknown
        pass

    def colorMode(self):  # real signature unknown; restored from __doc__
        """ QPrinter.colorMode() -> QPrinter.ColorMode """
        pass

    def copyCount(self):  # real signature unknown; restored from __doc__
        """ QPrinter.copyCount() -> int """
        return 0

    def creator(self):  # real signature unknown; restored from __doc__
        """ QPrinter.creator() -> QString """
        pass

    def devType(self):  # real signature unknown; restored from __doc__
        """ QPrinter.devType() -> int """
        return 0

    def docName(self):  # real signature unknown; restored from __doc__
        """ QPrinter.docName() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def doubleSidedPrinting(self):
        """ QPrinter.doubleSidedPrinting() -> bool """
        return False

    def duplex(self):  # real signature unknown; restored from __doc__
        """ QPrinter.duplex() -> QPrinter.DuplexMode """
        pass

    def DuplexMode(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def fontEmbeddingEnabled(self):
        """ QPrinter.fontEmbeddingEnabled() -> bool """
        return False

    def fromPage(self):  # real signature unknown; restored from __doc__
        """ QPrinter.fromPage() -> int """
        return 0

    def fullPage(self):  # real signature unknown; restored from __doc__
        """ QPrinter.fullPage() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def getPageMargins(self, QPrinter_Unit):
        """ QPrinter.getPageMargins(QPrinter.Unit) -> (float, float, float, float) """
        pass

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QPrinter.isValid() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def metric(self, QPaintDevice_PaintDeviceMetric):
        """ QPrinter.metric(QPaintDevice.PaintDeviceMetric) -> int """
        return 0

    def newPage(self):  # real signature unknown; restored from __doc__
        """ QPrinter.newPage() -> bool """
        return False

    def numCopies(self):  # real signature unknown; restored from __doc__
        """ QPrinter.numCopies() -> int """
        return 0

    def orientation(self):  # real signature unknown; restored from __doc__
        """ QPrinter.orientation() -> QPrinter.Orientation """
        pass

    def Orientation(self, *args, **kwargs):  # real signature unknown
        pass

    def outputFileName(self):  # real signature unknown; restored from __doc__
        """ QPrinter.outputFileName() -> QString """
        pass

    def OutputFormat(self, *args, **kwargs):  # real signature unknown
        pass

    def outputFormat(self):  # real signature unknown; restored from __doc__
        """ QPrinter.outputFormat() -> QPrinter.OutputFormat """
        pass

    def PageOrder(self, *args, **kwargs):  # real signature unknown
        pass

    def pageOrder(self):  # real signature unknown; restored from __doc__
        """ QPrinter.pageOrder() -> QPrinter.PageOrder """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def pageRect(self, QPrinter_Unit=None):
        """
        QPrinter.pageRect() -> QRect
        QPrinter.pageRect(QPrinter.Unit) -> QRectF
        """
        pass

    def pageSize(self):  # real signature unknown; restored from __doc__
        """ QPrinter.pageSize() -> QPrinter.PageSize """
        pass

    def PageSize(self, *args, **kwargs):  # real signature unknown
        pass

    def paintEngine(self):  # real signature unknown; restored from __doc__
        """ QPrinter.paintEngine() -> QPaintEngine """
        return QPaintEngine

    # real signature unknown; restored from __doc__ with multiple overloads
    def paperRect(self, QPrinter_Unit=None):
        """
        QPrinter.paperRect() -> QRect
        QPrinter.paperRect(QPrinter.Unit) -> QRectF
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def paperSize(self, QPrinter_Unit=None):
        """
        QPrinter.paperSize() -> QPrinter.PageSize
        QPrinter.paperSize(QPrinter.Unit) -> QSizeF
        """
        pass

    def paperSource(self):  # real signature unknown; restored from __doc__
        """ QPrinter.paperSource() -> QPrinter.PaperSource """
        pass

    def PaperSource(self, *args, **kwargs):  # real signature unknown
        pass

    def printEngine(self):  # real signature unknown; restored from __doc__
        """ QPrinter.printEngine() -> QPrintEngine """
        return QPrintEngine

    def PrinterMode(self, *args, **kwargs):  # real signature unknown
        pass

    def printerName(self):  # real signature unknown; restored from __doc__
        """ QPrinter.printerName() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def printerSelectionOption(self):
        """ QPrinter.printerSelectionOption() -> QString """
        pass

    def printerState(self):  # real signature unknown; restored from __doc__
        """ QPrinter.printerState() -> QPrinter.PrinterState """
        pass

    def PrinterState(self, *args, **kwargs):  # real signature unknown
        pass

    def printProgram(self):  # real signature unknown; restored from __doc__
        """ QPrinter.printProgram() -> QString """
        pass

    def PrintRange(self, *args, **kwargs):  # real signature unknown
        pass

    def printRange(self):  # real signature unknown; restored from __doc__
        """ QPrinter.printRange() -> QPrinter.PrintRange """
        pass

    def resolution(self):  # real signature unknown; restored from __doc__
        """ QPrinter.resolution() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setCollateCopies(self, bool):
        """ QPrinter.setCollateCopies(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setColorMode(self, QPrinter_ColorMode):
        """ QPrinter.setColorMode(QPrinter.ColorMode) """
        pass

    # real signature unknown; restored from __doc__
    def setCopyCount(self, p_int):
        """ QPrinter.setCopyCount(int) """
        pass

    # real signature unknown; restored from __doc__
    def setCreator(self, QString):
        """ QPrinter.setCreator(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setDocName(self, QString):
        """ QPrinter.setDocName(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setDoubleSidedPrinting(self, bool):
        """ QPrinter.setDoubleSidedPrinting(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setDuplex(self, QPrinter_DuplexMode):
        """ QPrinter.setDuplex(QPrinter.DuplexMode) """
        pass

    # real signature unknown; restored from __doc__
    def setEngines(self, QPrintEngine, QPaintEngine):
        """ QPrinter.setEngines(QPrintEngine, QPaintEngine) """
        pass

    # real signature unknown; restored from __doc__
    def setFontEmbeddingEnabled(self, bool):
        """ QPrinter.setFontEmbeddingEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFromTo(self, p_int, p_int_1):
        """ QPrinter.setFromTo(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setFullPage(self, bool):
        """ QPrinter.setFullPage(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setNumCopies(self, p_int):
        """ QPrinter.setNumCopies(int) """
        pass

    # real signature unknown; restored from __doc__
    def setOrientation(self, QPrinter_Orientation):
        """ QPrinter.setOrientation(QPrinter.Orientation) """
        pass

    # real signature unknown; restored from __doc__
    def setOutputFileName(self, QString):
        """ QPrinter.setOutputFileName(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setOutputFormat(self, QPrinter_OutputFormat):
        """ QPrinter.setOutputFormat(QPrinter.OutputFormat) """
        pass

    # real signature unknown; restored from __doc__
    def setPageMargins(self, p_float, p_float_1, p_float_2, p_float_3, QPrinter_Unit):
        """ QPrinter.setPageMargins(float, float, float, float, QPrinter.Unit) """
        pass

    # real signature unknown; restored from __doc__
    def setPageOrder(self, QPrinter_PageOrder):
        """ QPrinter.setPageOrder(QPrinter.PageOrder) """
        pass

    # real signature unknown; restored from __doc__
    def setPageSize(self, QPrinter_PageSize):
        """ QPrinter.setPageSize(QPrinter.PageSize) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setPaperSize(self, *__args):
        """
        QPrinter.setPaperSize(QPrinter.PageSize)
        QPrinter.setPaperSize(QSizeF, QPrinter.Unit)
        """
        pass

    # real signature unknown; restored from __doc__
    def setPaperSource(self, QPrinter_PaperSource):
        """ QPrinter.setPaperSource(QPrinter.PaperSource) """
        pass

    # real signature unknown; restored from __doc__
    def setPrinterName(self, QString):
        """ QPrinter.setPrinterName(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setPrinterSelectionOption(self, QString):
        """ QPrinter.setPrinterSelectionOption(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setPrintProgram(self, QString):
        """ QPrinter.setPrintProgram(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setPrintRange(self, QPrinter_PrintRange):
        """ QPrinter.setPrintRange(QPrinter.PrintRange) """
        pass

    # real signature unknown; restored from __doc__
    def setResolution(self, p_int):
        """ QPrinter.setResolution(int) """
        pass

    # real signature unknown; restored from __doc__
    def supportedResolutions(self):
        """ QPrinter.supportedResolutions() -> list-of-int """
        pass

    # real signature unknown; restored from __doc__
    def supportsMultipleCopies(self):
        """ QPrinter.supportsMultipleCopies() -> bool """
        return False

    def toPage(self):  # real signature unknown; restored from __doc__
        """ QPrinter.toPage() -> int """
        return 0

    def Unit(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    A0 = 5
    A1 = 6
    A2 = 7
    A3 = 8
    A4 = 0
    A5 = 9
    A6 = 10
    A7 = 11
    A8 = 12
    A9 = 13
    Aborted = 2
    Active = 1
    AllPages = 0
    Auto = 6
    B0 = 14
    B1 = 15
    B10 = 16
    B2 = 17
    B3 = 18
    B4 = 19
    B5 = 1
    B6 = 20
    B7 = 21
    B8 = 22
    B9 = 23
    C5E = 24
    Cassette = 11
    Cicero = 5
    Color = 1
    Comm10E = 25
    CurrentPage = 3
    Custom = 30
    DevicePixel = 6
    Didot = 4
    DLE = 26
    DuplexAuto = 1
    DuplexLongSide = 2
    DuplexNone = 0
    DuplexShortSide = 3
    Envelope = 4
    EnvelopeManual = 5
    Error = 3
    Executive = 4
    FirstPageFirst = 0
    Folio = 27
    FormSource = 12
    GrayScale = 0
    HighResolution = 2
    Idle = 0
    Inch = 2
    Landscape = 1
    LargeCapacity = 10
    LargeFormat = 9
    LastPageFirst = 1
    Ledger = 28
    Legal = 3
    Letter = 2
    Lower = 1
    Manual = 3
    MaxPageSource = 13
    Middle = 2
    Millimeter = 0
    NativeFormat = 0
    OnlyOne = 0
    PageRange = 2
    PdfFormat = 1
    Pica = 3
    Point = 1
    Portrait = 0
    PostScriptFormat = 2
    PrinterResolution = 1
    ScreenResolution = 0
    Selection = 1
    SmallFormat = 8
    Tabloid = 29
    Tractor = 7


class QPrinterInfo():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QPrinterInfo()
    QPrinterInfo(QPrinterInfo)
    QPrinterInfo(QPrinter)
    """
    # real signature unknown; restored from __doc__

    def availablePrinters(self):
        """ QPrinterInfo.availablePrinters() -> list-of-QPrinterInfo """
        pass

    def defaultPrinter(self):  # real signature unknown; restored from __doc__
        """ QPrinterInfo.defaultPrinter() -> QPrinterInfo """
        return QPrinterInfo

    def isDefault(self):  # real signature unknown; restored from __doc__
        """ QPrinterInfo.isDefault() -> bool """
        return False

    def isNull(self):  # real signature unknown; restored from __doc__
        """ QPrinterInfo.isNull() -> bool """
        return False

    def printerName(self):  # real signature unknown; restored from __doc__
        """ QPrinterInfo.printerName() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def supportedPaperSizes(self):
        """ QPrinterInfo.supportedPaperSizes() -> list-of-QPrinter.PageSize """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    __weakref__ = property(lambda self: object())  # default


class QPrintPreviewDialog(QDialog):

    """
    QPrintPreviewDialog(QWidget parent=None, Qt.WindowFlags flags=0)
    QPrintPreviewDialog(QPrinter, QWidget parent=None, Qt.WindowFlags flags=0)
    """

    def done(self, p_int):  # real signature unknown; restored from __doc__
        """ QPrintPreviewDialog.done(int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def open(self, *__args):
        """
        QPrintPreviewDialog.open()
        QPrintPreviewDialog.open(QObject, SLOT())
        QPrintPreviewDialog.open(callable)
        """
        pass

    def paintRequested(self, *args, **kwargs):  # real signature unknown
        """ QPrintPreviewDialog.paintRequested[QPrinter] [signal] """
        pass

    def printer(self):  # real signature unknown; restored from __doc__
        """ QPrintPreviewDialog.printer() -> QPrinter """
        return QPrinter

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QPrintPreviewDialog.setVisible(bool) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QPrintPreviewWidget(QWidget):

    """
    QPrintPreviewWidget(QPrinter, QWidget parent=None, Qt.WindowFlags flags=0)
    QPrintPreviewWidget(QWidget parent=None, Qt.WindowFlags flags=0)
    """

    def currentPage(self):  # real signature unknown; restored from __doc__
        """ QPrintPreviewWidget.currentPage() -> int """
        return 0

    def fitInView(self):  # real signature unknown; restored from __doc__
        """ QPrintPreviewWidget.fitInView() """
        pass

    def fitToWidth(self):  # real signature unknown; restored from __doc__
        """ QPrintPreviewWidget.fitToWidth() """
        pass

    def numPages(self):  # real signature unknown; restored from __doc__
        """ QPrintPreviewWidget.numPages() -> int """
        return 0

    def orientation(self):  # real signature unknown; restored from __doc__
        """ QPrintPreviewWidget.orientation() -> QPrinter.Orientation """
        pass

    def pageCount(self):  # real signature unknown; restored from __doc__
        """ QPrintPreviewWidget.pageCount() -> int """
        return 0

    def paintRequested(self, *args, **kwargs):  # real signature unknown
        """ QPrintPreviewWidget.paintRequested[QPrinter] [signal] """
        pass

    def previewChanged(self, *args, **kwargs):  # real signature unknown
        """ QPrintPreviewWidget.previewChanged[] [signal] """
        pass

    def print_(self):  # real signature unknown; restored from __doc__
        """ QPrintPreviewWidget.print_() """
        pass

    # real signature unknown; restored from __doc__
    def setAllPagesViewMode(self):
        """ QPrintPreviewWidget.setAllPagesViewMode() """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentPage(self, p_int):
        """ QPrintPreviewWidget.setCurrentPage(int) """
        pass

    # real signature unknown; restored from __doc__
    def setFacingPagesViewMode(self):
        """ QPrintPreviewWidget.setFacingPagesViewMode() """
        pass

    # real signature unknown; restored from __doc__
    def setLandscapeOrientation(self):
        """ QPrintPreviewWidget.setLandscapeOrientation() """
        pass

    # real signature unknown; restored from __doc__
    def setOrientation(self, QPrinter_Orientation):
        """ QPrintPreviewWidget.setOrientation(QPrinter.Orientation) """
        pass

    # real signature unknown; restored from __doc__
    def setPortraitOrientation(self):
        """ QPrintPreviewWidget.setPortraitOrientation() """
        pass

    # real signature unknown; restored from __doc__
    def setSinglePageViewMode(self):
        """ QPrintPreviewWidget.setSinglePageViewMode() """
        pass

    # real signature unknown; restored from __doc__
    def setViewMode(self, QPrintPreviewWidget_ViewMode):
        """ QPrintPreviewWidget.setViewMode(QPrintPreviewWidget.ViewMode) """
        pass

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QPrintPreviewWidget.setVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setZoomFactor(self, p_float):
        """ QPrintPreviewWidget.setZoomFactor(float) """
        pass

    # real signature unknown; restored from __doc__
    def setZoomMode(self, QPrintPreviewWidget_ZoomMode):
        """ QPrintPreviewWidget.setZoomMode(QPrintPreviewWidget.ZoomMode) """
        pass

    def updatePreview(self):  # real signature unknown; restored from __doc__
        """ QPrintPreviewWidget.updatePreview() """
        pass

    def ViewMode(self, *args, **kwargs):  # real signature unknown
        pass

    def viewMode(self):  # real signature unknown; restored from __doc__
        """ QPrintPreviewWidget.viewMode() -> QPrintPreviewWidget.ViewMode """
        pass

    def zoomFactor(self):  # real signature unknown; restored from __doc__
        """ QPrintPreviewWidget.zoomFactor() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def zoomIn(self, float_factor=1.1):
        """ QPrintPreviewWidget.zoomIn(float factor=1.1) """
        pass

    def ZoomMode(self, *args, **kwargs):  # real signature unknown
        pass

    def zoomMode(self):  # real signature unknown; restored from __doc__
        """ QPrintPreviewWidget.zoomMode() -> QPrintPreviewWidget.ZoomMode """
        pass

    # real signature unknown; restored from __doc__
    def zoomOut(self, float_factor=1.1):
        """ QPrintPreviewWidget.zoomOut(float factor=1.1) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    AllPagesView = 2
    CustomZoom = 0
    FacingPagesView = 1
    FitInView = 2
    FitToWidth = 1
    SinglePageView = 0


class QProgressBar(QWidget):

    """ QProgressBar(QWidget parent=None) """

    def alignment(self):  # real signature unknown; restored from __doc__
        """ QProgressBar.alignment() -> Qt.Alignment """
        pass

    def Direction(self, *args, **kwargs):  # real signature unknown
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QProgressBar.event(QEvent) -> bool """
        return False

    def format(self):  # real signature unknown; restored from __doc__
        """ QProgressBar.format() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionProgressBar):
        """ QProgressBar.initStyleOption(QStyleOptionProgressBar) """
        pass

    # real signature unknown; restored from __doc__
    def invertedAppearance(self):
        """ QProgressBar.invertedAppearance() -> bool """
        return False

    def isTextVisible(self):  # real signature unknown; restored from __doc__
        """ QProgressBar.isTextVisible() -> bool """
        return False

    def maximum(self):  # real signature unknown; restored from __doc__
        """ QProgressBar.maximum() -> int """
        return 0

    def minimum(self):  # real signature unknown; restored from __doc__
        """ QProgressBar.minimum() -> int """
        return 0

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QProgressBar.minimumSizeHint() -> QSize """
        pass

    def orientation(self):  # real signature unknown; restored from __doc__
        """ QProgressBar.orientation() -> Qt.Orientation """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QProgressBar.paintEvent(QPaintEvent) """
        pass

    def reset(self):  # real signature unknown; restored from __doc__
        """ QProgressBar.reset() """
        pass

    # real signature unknown; restored from __doc__
    def setAlignment(self, Qt_Alignment):
        """ QProgressBar.setAlignment(Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setFormat(self, QString):
        """ QProgressBar.setFormat(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setInvertedAppearance(self, bool):
        """ QProgressBar.setInvertedAppearance(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setMaximum(self, p_int):
        """ QProgressBar.setMaximum(int) """
        pass

    # real signature unknown; restored from __doc__
    def setMinimum(self, p_int):
        """ QProgressBar.setMinimum(int) """
        pass

    # real signature unknown; restored from __doc__
    def setOrientation(self, Qt_Orientation):
        """ QProgressBar.setOrientation(Qt.Orientation) """
        pass

    # real signature unknown; restored from __doc__
    def setRange(self, p_int, p_int_1):
        """ QProgressBar.setRange(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setTextDirection(self, QProgressBar_Direction):
        """ QProgressBar.setTextDirection(QProgressBar.Direction) """
        pass

    # real signature unknown; restored from __doc__
    def setTextVisible(self, bool):
        """ QProgressBar.setTextVisible(bool) """
        pass

    def setValue(self, p_int):  # real signature unknown; restored from __doc__
        """ QProgressBar.setValue(int) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QProgressBar.sizeHint() -> QSize """
        pass

    def text(self):  # real signature unknown; restored from __doc__
        """ QProgressBar.text() -> QString """
        pass

    def textDirection(self):  # real signature unknown; restored from __doc__
        """ QProgressBar.textDirection() -> QProgressBar.Direction """
        pass

    def value(self):  # real signature unknown; restored from __doc__
        """ QProgressBar.value() -> int """
        return 0

    def valueChanged(self, *args, **kwargs):  # real signature unknown
        """ QProgressBar.valueChanged[int] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    BottomToTop = 1
    TopToBottom = 0


class QProgressDialog(QDialog):

    """
    QProgressDialog(QWidget parent=None, Qt.WindowFlags flags=0)
    QProgressDialog(QString, QString, int, int, QWidget parent=None, Qt.WindowFlags flags=0)
    """

    def autoClose(self):  # real signature unknown; restored from __doc__
        """ QProgressDialog.autoClose() -> bool """
        return False

    def autoReset(self):  # real signature unknown; restored from __doc__
        """ QProgressDialog.autoReset() -> bool """
        return False

    def cancel(self):  # real signature unknown; restored from __doc__
        """ QProgressDialog.cancel() """
        pass

    def canceled(self, *args, **kwargs):  # real signature unknown
        """ QProgressDialog.canceled[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QProgressDialog.changeEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def closeEvent(self, QCloseEvent):
        """ QProgressDialog.closeEvent(QCloseEvent) """
        pass

    def forceShow(self):  # real signature unknown; restored from __doc__
        """ QProgressDialog.forceShow() """
        pass

    def labelText(self):  # real signature unknown; restored from __doc__
        """ QProgressDialog.labelText() -> QString """
        pass

    def maximum(self):  # real signature unknown; restored from __doc__
        """ QProgressDialog.maximum() -> int """
        return 0

    def minimum(self):  # real signature unknown; restored from __doc__
        """ QProgressDialog.minimum() -> int """
        return 0

    def minimumDuration(self):  # real signature unknown; restored from __doc__
        """ QProgressDialog.minimumDuration() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def open(self, *__args):
        """
        QProgressDialog.open()
        QProgressDialog.open(QObject, SLOT())
        QProgressDialog.open(callable)
        """
        pass

    def reset(self):  # real signature unknown; restored from __doc__
        """ QProgressDialog.reset() """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QProgressDialog.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setAutoClose(self, bool):
        """ QProgressDialog.setAutoClose(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setAutoReset(self, bool):
        """ QProgressDialog.setAutoReset(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setBar(self, QProgressBar):
        """ QProgressDialog.setBar(QProgressBar) """
        pass

    # real signature unknown; restored from __doc__
    def setCancelButton(self, QPushButton):
        """ QProgressDialog.setCancelButton(QPushButton) """
        pass

    # real signature unknown; restored from __doc__
    def setCancelButtonText(self, QString):
        """ QProgressDialog.setCancelButtonText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setLabel(self, QLabel):
        """ QProgressDialog.setLabel(QLabel) """
        pass

    # real signature unknown; restored from __doc__
    def setLabelText(self, QString):
        """ QProgressDialog.setLabelText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setMaximum(self, p_int):
        """ QProgressDialog.setMaximum(int) """
        pass

    # real signature unknown; restored from __doc__
    def setMinimum(self, p_int):
        """ QProgressDialog.setMinimum(int) """
        pass

    # real signature unknown; restored from __doc__
    def setMinimumDuration(self, p_int):
        """ QProgressDialog.setMinimumDuration(int) """
        pass

    # real signature unknown; restored from __doc__
    def setRange(self, p_int, p_int_1):
        """ QProgressDialog.setRange(int, int) """
        pass

    def setValue(self, p_int):  # real signature unknown; restored from __doc__
        """ QProgressDialog.setValue(int) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QProgressDialog.showEvent(QShowEvent) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QProgressDialog.sizeHint() -> QSize """
        pass

    def value(self):  # real signature unknown; restored from __doc__
        """ QProgressDialog.value() -> int """
        return 0

    def wasCanceled(self):  # real signature unknown; restored from __doc__
        """ QProgressDialog.wasCanceled() -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QProxyModel(__PyQt4_QtCore.QAbstractItemModel):

    """ QProxyModel(QObject parent=None) """
    # real signature unknown; NOTE: unreliably restored from __doc__

    def columnCount(self, QModelIndex_parent=None, *args, **kwargs):
        """ QProxyModel.columnCount(QModelIndex parent=QModelIndex()) -> int """
        pass

    # real signature unknown; restored from __doc__
    def data(self, QModelIndex, int_role=None):
        """ QProxyModel.data(QModelIndex, int role=Qt.DisplayRole) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def dropMimeData(self, QMimeData, Qt_DropAction, p_int, p_int_1, QModelIndex):
        """ QProxyModel.dropMimeData(QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def fetchMore(self, QModelIndex):
        """ QProxyModel.fetchMore(QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def flags(self, QModelIndex):
        """ QProxyModel.flags(QModelIndex) -> Qt.ItemFlags """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def hasChildren(self, QModelIndex_parent=None, *args, **kwargs):
        """ QProxyModel.hasChildren(QModelIndex parent=QModelIndex()) -> bool """
        pass

    # real signature unknown; restored from __doc__
    def headerData(self, p_int, Qt_Orientation, int_role=None):
        """ QProxyModel.headerData(int, Qt.Orientation, int role=Qt.DisplayRole) -> QVariant """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def index(self, p_int, p_int_1, QModelIndex_parent=None, *args, **kwargs):
        """ QProxyModel.index(int, int, QModelIndex parent=QModelIndex()) -> QModelIndex """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def insertColumns(self, p_int, p_int_1, QModelIndex_parent=None, *args, **kwargs):
        """ QProxyModel.insertColumns(int, int, QModelIndex parent=QModelIndex()) -> bool """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def insertRows(self, p_int, p_int_1, QModelIndex_parent=None, *args, **kwargs):
        """ QProxyModel.insertRows(int, int, QModelIndex parent=QModelIndex()) -> bool """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def match(self, QModelIndex, p_int, QVariant, int_hits=1, Qt_MatchFlags_flags=None, *args, **kwargs):
        """ QProxyModel.match(QModelIndex, int, QVariant, int hits=1, Qt.MatchFlags flags=Qt.MatchFlags(Qt.MatchStartsWith|Qt.MatchWrap)) -> list-of-QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def mimeData(self, list_of_QModelIndex):
        """ QProxyModel.mimeData(list-of-QModelIndex) -> QMimeData """
        pass

    def mimeTypes(self):  # real signature unknown; restored from __doc__
        """ QProxyModel.mimeTypes() -> QStringList """
        pass

    def model(self):  # real signature unknown; restored from __doc__
        """ QProxyModel.model() -> QAbstractItemModel """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def parent(self, QModelIndex=None):
        """
        QProxyModel.parent(QModelIndex) -> QModelIndex
        QProxyModel.parent() -> QObject
        """
        pass

    def revert(self):  # real signature unknown; restored from __doc__
        """ QProxyModel.revert() """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def rowCount(self, QModelIndex_parent=None, *args, **kwargs):
        """ QProxyModel.rowCount(QModelIndex parent=QModelIndex()) -> int """
        pass

    # real signature unknown; restored from __doc__
    def setData(self, QModelIndex, QVariant, int_role=None):
        """ QProxyModel.setData(QModelIndex, QVariant, int role=Qt.EditRole) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setHeaderData(self, p_int, Qt_Orientation, QVariant, int_role=None):
        """ QProxyModel.setHeaderData(int, Qt.Orientation, QVariant, int role=Qt.EditRole) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setModel(self, QAbstractItemModel):
        """ QProxyModel.setModel(QAbstractItemModel) """
        pass

    # real signature unknown; restored from __doc__
    def sort(self, p_int, Qt_SortOrder_order=None):
        """ QProxyModel.sort(int, Qt.SortOrder order=Qt.AscendingOrder) """
        pass

    # real signature unknown; restored from __doc__
    def span(self, QModelIndex):
        """ QProxyModel.span(QModelIndex) -> QSize """
        pass

    def submit(self):  # real signature unknown; restored from __doc__
        """ QProxyModel.submit() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def supportedDropActions(self):
        """ QProxyModel.supportedDropActions() -> Qt.DropActions """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QTextObjectInterface():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QTextObjectInterface()
    QTextObjectInterface(QTextObjectInterface)
    """
    # real signature unknown; restored from __doc__

    def drawObject(self, QPainter, QRectF, QTextDocument, p_int, QTextFormat):
        """ QTextObjectInterface.drawObject(QPainter, QRectF, QTextDocument, int, QTextFormat) """
        pass

    # real signature unknown; restored from __doc__
    def intrinsicSize(self, QTextDocument, p_int, QTextFormat):
        """ QTextObjectInterface.intrinsicSize(QTextDocument, int, QTextFormat) -> QSizeF """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QTextObjectInterface=None):
        pass

    __weakref__ = property(lambda self: object())  # default


class QPyTextObject(__PyQt4_QtCore.QObject, QTextObjectInterface):

    """ QPyTextObject(QObject parent=None) """
    # real signature unknown; restored from __doc__

    def __init__(self, QObject_parent=None):
        pass


class QQuaternion():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QQuaternion()
    QQuaternion(float, float, float, float)
    QQuaternion(float, QVector3D)
    QQuaternion(QVector4D)
    QQuaternion(QQuaternion)
    """

    def conjugate(self):  # real signature unknown; restored from __doc__
        """ QQuaternion.conjugate() -> QQuaternion """
        return QQuaternion

    # real signature unknown; restored from __doc__ with multiple overloads
    def fromAxisAndAngle(self, *__args):
        """
        QQuaternion.fromAxisAndAngle(QVector3D, float) -> QQuaternion
        QQuaternion.fromAxisAndAngle(float, float, float, float) -> QQuaternion
        """
        return QQuaternion

    def isIdentity(self):  # real signature unknown; restored from __doc__
        """ QQuaternion.isIdentity() -> bool """
        return False

    def isNull(self):  # real signature unknown; restored from __doc__
        """ QQuaternion.isNull() -> bool """
        return False

    def length(self):  # real signature unknown; restored from __doc__
        """ QQuaternion.length() -> float """
        return 0.0

    def lengthSquared(self):  # real signature unknown; restored from __doc__
        """ QQuaternion.lengthSquared() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def nlerp(self, QQuaternion, QQuaternion_1, p_float):
        """ QQuaternion.nlerp(QQuaternion, QQuaternion, float) -> QQuaternion """
        return QQuaternion

    def normalize(self):  # real signature unknown; restored from __doc__
        """ QQuaternion.normalize() """
        pass

    def normalized(self):  # real signature unknown; restored from __doc__
        """ QQuaternion.normalized() -> QQuaternion """
        return QQuaternion

    # real signature unknown; restored from __doc__
    def rotatedVector(self, QVector3D):
        """ QQuaternion.rotatedVector(QVector3D) -> QVector3D """
        return QVector3D

    def scalar(self):  # real signature unknown; restored from __doc__
        """ QQuaternion.scalar() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def setScalar(self, p_float):
        """ QQuaternion.setScalar(float) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setVector(self, *__args):
        """
        QQuaternion.setVector(QVector3D)
        QQuaternion.setVector(float, float, float)
        """
        pass

    def setX(self, p_float):  # real signature unknown; restored from __doc__
        """ QQuaternion.setX(float) """
        pass

    def setY(self, p_float):  # real signature unknown; restored from __doc__
        """ QQuaternion.setY(float) """
        pass

    def setZ(self, p_float):  # real signature unknown; restored from __doc__
        """ QQuaternion.setZ(float) """
        pass

    # real signature unknown; restored from __doc__
    def slerp(self, QQuaternion, QQuaternion_1, p_float):
        """ QQuaternion.slerp(QQuaternion, QQuaternion, float) -> QQuaternion """
        return QQuaternion

    def toVector4D(self):  # real signature unknown; restored from __doc__
        """ QQuaternion.toVector4D() -> QVector4D """
        return QVector4D

    def vector(self):  # real signature unknown; restored from __doc__
        """ QQuaternion.vector() -> QVector3D """
        return QVector3D

    def x(self):  # real signature unknown; restored from __doc__
        """ QQuaternion.x() -> float """
        return 0.0

    def y(self):  # real signature unknown; restored from __doc__
        """ QQuaternion.y() -> float """
        return 0.0

    def z(self):  # real signature unknown; restored from __doc__
        """ QQuaternion.z() -> float """
        return 0.0

    def __add__(self, y):  # real signature unknown; restored from __doc__
        """ x.__add__(y) <==> x+y """
        pass

    def __div__(self, y):  # real signature unknown; restored from __doc__
        """ x.__div__(y) <==> x/y """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    def __idiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__idiv__(y) <==> x/y """
        pass

    def __imul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__imul__(y) <==> x*y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    def __itruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__itruediv__(y) <==> x/y """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __mul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__mul__(y) <==> x*y """
        pass

    def __neg__(self):  # real signature unknown; restored from __doc__
        """ x.__neg__() <==> -x """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __radd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__radd__(y) <==> y+x """
        pass

    def __rdiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rdiv__(y) <==> y/x """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    def __repr__(self):  # real signature unknown; restored from __doc__
        """ x.__repr__() <==> repr(x) """
        pass

    def __rmul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rmul__(y) <==> y*x """
        pass

    def __rsub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rsub__(y) <==> y-x """
        pass

    def __rtruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rtruediv__(y) <==> y/x """
        pass

    def __sub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__sub__(y) <==> x-y """
        pass

    def __truediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__truediv__(y) <==> x/y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QRadialGradient(QGradient):

    """
    QRadialGradient()
    QRadialGradient(QPointF, float, QPointF)
    QRadialGradient(QPointF, float)
    QRadialGradient(float, float, float, float, float)
    QRadialGradient(float, float, float)
    QRadialGradient(QRadialGradient)
    """

    def center(self):  # real signature unknown; restored from __doc__
        """ QRadialGradient.center() -> QPointF """
        pass

    def focalPoint(self):  # real signature unknown; restored from __doc__
        """ QRadialGradient.focalPoint() -> QPointF """
        pass

    def radius(self):  # real signature unknown; restored from __doc__
        """ QRadialGradient.radius() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def setCenter(self, *__args):
        """
        QRadialGradient.setCenter(QPointF)
        QRadialGradient.setCenter(float, float)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setFocalPoint(self, *__args):
        """
        QRadialGradient.setFocalPoint(QPointF)
        QRadialGradient.setFocalPoint(float, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def setRadius(self, p_float):
        """ QRadialGradient.setRadius(float) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QRadioButton(QAbstractButton):

    """
    QRadioButton(QWidget parent=None)
    QRadioButton(QString, QWidget parent=None)
    """

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QRadioButton.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def hitButton(self, QPoint):
        """ QRadioButton.hitButton(QPoint) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionButton):
        """ QRadioButton.initStyleOption(QStyleOptionButton) """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QRadioButton.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QRadioButton.paintEvent(QPaintEvent) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QRadioButton.sizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QRegExpValidator(QValidator):

    """
    QRegExpValidator(QObject parent=None)
    QRegExpValidator(QRegExp, QObject)
    """

    def regExp(self):  # real signature unknown; restored from __doc__
        """ QRegExpValidator.regExp() -> QRegExp """
        pass

    # real signature unknown; restored from __doc__
    def setRegExp(self, QRegExp):
        """ QRegExpValidator.setRegExp(QRegExp) """
        pass

    # real signature unknown; restored from __doc__
    def validate(self, QString, p_int):
        """ QRegExpValidator.validate(QString, int) -> (QValidator.State, int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QRegion():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QRegion()
    QRegion(int, int, int, int, QRegion.RegionType type=QRegion.Rectangle)
    QRegion(QRect, QRegion.RegionType type=QRegion.Rectangle)
    QRegion(QPolygon, Qt.FillRule fillRule=Qt.OddEvenFill)
    QRegion(QBitmap)
    QRegion(QRegion)
    QRegion(QVariant)
    """

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QRegion.boundingRect() -> QRect """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def contains(self, *__args):
        """
        QRegion.contains(QPoint) -> bool
        QRegion.contains(QRect) -> bool
        """
        return False

    def eor(self, QRegion):  # real signature unknown; restored from __doc__
        """ QRegion.eor(QRegion) -> QRegion """
        return QRegion

    # real signature unknown; restored from __doc__
    def intersect(self, QRegion):
        """ QRegion.intersect(QRegion) -> QRegion """
        return QRegion

    # real signature unknown; restored from __doc__ with multiple overloads
    def intersected(self, *__args):
        """
        QRegion.intersected(QRegion) -> QRegion
        QRegion.intersected(QRect) -> QRegion
        """
        return QRegion

    # real signature unknown; restored from __doc__ with multiple overloads
    def intersects(self, *__args):
        """
        QRegion.intersects(QRegion) -> bool
        QRegion.intersects(QRect) -> bool
        """
        return False

    def isEmpty(self):  # real signature unknown; restored from __doc__
        """ QRegion.isEmpty() -> bool """
        return False

    def numRects(self):  # real signature unknown; restored from __doc__
        """ QRegion.numRects() -> int """
        return 0

    def rectCount(self):  # real signature unknown; restored from __doc__
        """ QRegion.rectCount() -> int """
        return 0

    def rects(self):  # real signature unknown; restored from __doc__
        """ QRegion.rects() -> list-of-QRect """
        pass

    def RegionType(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def subtract(self, QRegion):
        """ QRegion.subtract(QRegion) -> QRegion """
        return QRegion

    # real signature unknown; restored from __doc__
    def subtracted(self, QRegion):
        """ QRegion.subtracted(QRegion) -> QRegion """
        return QRegion

    # real signature unknown; restored from __doc__ with multiple overloads
    def translate(self, *__args):
        """
        QRegion.translate(int, int)
        QRegion.translate(QPoint)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def translated(self, *__args):
        """
        QRegion.translated(int, int) -> QRegion
        QRegion.translated(QPoint) -> QRegion
        """
        return QRegion

    def unite(self, QRegion):  # real signature unknown; restored from __doc__
        """ QRegion.unite(QRegion) -> QRegion """
        return QRegion

    # real signature unknown; restored from __doc__ with multiple overloads
    def united(self, *__args):
        """
        QRegion.united(QRegion) -> QRegion
        QRegion.united(QRect) -> QRegion
        """
        return QRegion

    def xored(self, QRegion):  # real signature unknown; restored from __doc__
        """ QRegion.xored(QRegion) -> QRegion """
        return QRegion

    def __add__(self, y):  # real signature unknown; restored from __doc__
        """ x.__add__(y) <==> x+y """
        pass

    def __and__(self, y):  # real signature unknown; restored from __doc__
        """ x.__and__(y) <==> x&y """
        pass

    def __contains__(self, y):  # real signature unknown; restored from __doc__
        """ x.__contains__(y) <==> y in x """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    def __iand__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iand__(y) <==> x&y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __ior__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ior__(y) <==> x|y """
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    def __ixor__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ixor__(y) <==> x^y """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __mul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__mul__(y) <==> x*y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __nonzero__(self):  # real signature unknown; restored from __doc__
        """ x.__nonzero__() <==> x != 0 """
        pass

    def __or__(self, y):  # real signature unknown; restored from __doc__
        """ x.__or__(y) <==> x|y """
        pass

    def __radd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__radd__(y) <==> y+x """
        pass

    def __rand__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rand__(y) <==> y&x """
        pass

    def __rmul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rmul__(y) <==> y*x """
        pass

    def __ror__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ror__(y) <==> y|x """
        pass

    def __rsub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rsub__(y) <==> y-x """
        pass

    def __rxor__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rxor__(y) <==> y^x """
        pass

    def __sub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__sub__(y) <==> x-y """
        pass

    def __xor__(self, y):  # real signature unknown; restored from __doc__
        """ x.__xor__(y) <==> x^y """
        pass

    __weakref__ = property(lambda self: object())  # default

    Ellipse = 1
    Rectangle = 0


class QResizeEvent(__PyQt4_QtCore.QEvent):

    """
    QResizeEvent(QSize, QSize)
    QResizeEvent(QResizeEvent)
    """

    def oldSize(self):  # real signature unknown; restored from __doc__
        """ QResizeEvent.oldSize() -> QSize """
        pass

    def size(self):  # real signature unknown; restored from __doc__
        """ QResizeEvent.size() -> QSize """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QRubberBand(QWidget):

    """ QRubberBand(QRubberBand.Shape, QWidget parent=None) """
    # real signature unknown; restored from __doc__

    def changeEvent(self, QEvent):
        """ QRubberBand.changeEvent(QEvent) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QRubberBand.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionRubberBand):
        """ QRubberBand.initStyleOption(QStyleOptionRubberBand) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def move(self, *__args):
        """
        QRubberBand.move(QPoint)
        QRubberBand.move(int, int)
        """
        pass

    # real signature unknown; restored from __doc__
    def moveEvent(self, QMoveEvent):
        """ QRubberBand.moveEvent(QMoveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QRubberBand.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def resize(self, *__args):
        """
        QRubberBand.resize(int, int)
        QRubberBand.resize(QSize)
        """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QRubberBand.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setGeometry(self, *__args):
        """
        QRubberBand.setGeometry(QRect)
        QRubberBand.setGeometry(int, int, int, int)
        """
        pass

    def Shape(self, *args, **kwargs):  # real signature unknown
        pass

    def shape(self):  # real signature unknown; restored from __doc__
        """ QRubberBand.shape() -> QRubberBand.Shape """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QRubberBand.showEvent(QShowEvent) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QRubberBand_Shape, QWidget_parent=None):
        pass

    Line = 0
    Rectangle = 1


class QScrollArea(QAbstractScrollArea):

    """ QScrollArea(QWidget parent=None) """

    def alignment(self):  # real signature unknown; restored from __doc__
        """ QScrollArea.alignment() -> Qt.Alignment """
        pass

    # real signature unknown; restored from __doc__
    def ensureVisible(self, p_int, p_int_1, int_xMargin=50, int_yMargin=50):
        """ QScrollArea.ensureVisible(int, int, int xMargin=50, int yMargin=50) """
        pass

    # real signature unknown; restored from __doc__
    def ensureWidgetVisible(self, QWidget, int_xMargin=50, int_yMargin=50):
        """ QScrollArea.ensureWidgetVisible(QWidget, int xMargin=50, int yMargin=50) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QScrollArea.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QScrollArea.eventFilter(QObject, QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusNextPrevChild(self, bool):
        """ QScrollArea.focusNextPrevChild(bool) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QScrollArea.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def scrollContentsBy(self, p_int, p_int_1):
        """ QScrollArea.scrollContentsBy(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setAlignment(self, Qt_Alignment):
        """ QScrollArea.setAlignment(Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setWidget(self, QWidget):
        """ QScrollArea.setWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setWidgetResizable(self, bool):
        """ QScrollArea.setWidgetResizable(bool) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QScrollArea.sizeHint() -> QSize """
        pass

    def takeWidget(self):  # real signature unknown; restored from __doc__
        """ QScrollArea.takeWidget() -> QWidget """
        return QWidget

    def widget(self):  # real signature unknown; restored from __doc__
        """ QScrollArea.widget() -> QWidget """
        return QWidget

    def widgetResizable(self):  # real signature unknown; restored from __doc__
        """ QScrollArea.widgetResizable() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass


class QScrollBar(QAbstractSlider):

    """
    QScrollBar(QWidget parent=None)
    QScrollBar(Qt.Orientation, QWidget parent=None)
    """
    # real signature unknown; restored from __doc__

    def contextMenuEvent(self, QContextMenuEvent):
        """ QScrollBar.contextMenuEvent(QContextMenuEvent) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QScrollBar.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def hideEvent(self, QHideEvent):
        """ QScrollBar.hideEvent(QHideEvent) """
        pass

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionSlider):
        """ QScrollBar.initStyleOption(QStyleOptionSlider) """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QScrollBar.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QScrollBar.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QScrollBar.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QScrollBar.paintEvent(QPaintEvent) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QScrollBar.sizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def sliderChange(self, QAbstractSlider_SliderChange):
        """ QScrollBar.sliderChange(QAbstractSlider.SliderChange) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QSessionManager(__PyQt4_QtCore.QObject):
    # no doc
    # real signature unknown; restored from __doc__

    def allowsErrorInteraction(self):
        """ QSessionManager.allowsErrorInteraction() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def allowsInteraction(self):
        """ QSessionManager.allowsInteraction() -> bool """
        return False

    def cancel(self):  # real signature unknown; restored from __doc__
        """ QSessionManager.cancel() """
        pass

    def discardCommand(self):  # real signature unknown; restored from __doc__
        """ QSessionManager.discardCommand() -> QStringList """
        pass

    def isPhase2(self):  # real signature unknown; restored from __doc__
        """ QSessionManager.isPhase2() -> bool """
        return False

    def release(self):  # real signature unknown; restored from __doc__
        """ QSessionManager.release() """
        pass

    def requestPhase2(self):  # real signature unknown; restored from __doc__
        """ QSessionManager.requestPhase2() """
        pass

    def restartCommand(self):  # real signature unknown; restored from __doc__
        """ QSessionManager.restartCommand() -> QStringList """
        pass

    def RestartHint(self, *args, **kwargs):  # real signature unknown
        pass

    def restartHint(self):  # real signature unknown; restored from __doc__
        """ QSessionManager.restartHint() -> QSessionManager.RestartHint """
        pass

    def sessionId(self):  # real signature unknown; restored from __doc__
        """ QSessionManager.sessionId() -> QString """
        pass

    def sessionKey(self):  # real signature unknown; restored from __doc__
        """ QSessionManager.sessionKey() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def setDiscardCommand(self, QStringList):
        """ QSessionManager.setDiscardCommand(QStringList) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setManagerProperty(self, QString, *__args):
        """
        QSessionManager.setManagerProperty(QString, QString)
        QSessionManager.setManagerProperty(QString, QStringList)
        """
        pass

    # real signature unknown; restored from __doc__
    def setRestartCommand(self, QStringList):
        """ QSessionManager.setRestartCommand(QStringList) """
        pass

    # real signature unknown; restored from __doc__
    def setRestartHint(self, QSessionManager_RestartHint):
        """ QSessionManager.setRestartHint(QSessionManager.RestartHint) """
        pass

    def __init__(self, *args, **kwargs):  # real signature unknown
        pass

    RestartAnyway = 1
    RestartIfRunning = 0
    RestartImmediately = 2
    RestartNever = 3


class QShortcut(__PyQt4_QtCore.QObject):

    """
    QShortcut(QWidget)
    QShortcut(QKeySequence, QWidget, SLOT() member=0, SLOT() ambiguousMember=0, Qt.ShortcutContext context=Qt.WindowShortcut)
    """

    def activated(self, *args, **kwargs):  # real signature unknown
        """ QShortcut.activated[] [signal] """
        pass

    def activatedAmbiguously(self, *args, **kwargs):  # real signature unknown
        """ QShortcut.activatedAmbiguously[] [signal] """
        pass

    def autoRepeat(self):  # real signature unknown; restored from __doc__
        """ QShortcut.autoRepeat() -> bool """
        return False

    def context(self):  # real signature unknown; restored from __doc__
        """ QShortcut.context() -> Qt.ShortcutContext """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QShortcut.event(QEvent) -> bool """
        return False

    def id(self):  # real signature unknown; restored from __doc__
        """ QShortcut.id() -> int """
        return 0

    def isEnabled(self):  # real signature unknown; restored from __doc__
        """ QShortcut.isEnabled() -> bool """
        return False

    def key(self):  # real signature unknown; restored from __doc__
        """ QShortcut.key() -> QKeySequence """
        return QKeySequence

    def parentWidget(self):  # real signature unknown; restored from __doc__
        """ QShortcut.parentWidget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def setAutoRepeat(self, bool):
        """ QShortcut.setAutoRepeat(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setContext(self, Qt_ShortcutContext):
        """ QShortcut.setContext(Qt.ShortcutContext) """
        pass

    # real signature unknown; restored from __doc__
    def setEnabled(self, bool):
        """ QShortcut.setEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setKey(self, QKeySequence):
        """ QShortcut.setKey(QKeySequence) """
        pass

    # real signature unknown; restored from __doc__
    def setWhatsThis(self, QString):
        """ QShortcut.setWhatsThis(QString) """
        pass

    def whatsThis(self):  # real signature unknown; restored from __doc__
        """ QShortcut.whatsThis() -> QString """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QShortcutEvent(__PyQt4_QtCore.QEvent):

    """
    QShortcutEvent(QKeySequence, int, bool ambiguous=False)
    QShortcutEvent(QShortcutEvent)
    """

    def isAmbiguous(self):  # real signature unknown; restored from __doc__
        """ QShortcutEvent.isAmbiguous() -> bool """
        return False

    def key(self):  # real signature unknown; restored from __doc__
        """ QShortcutEvent.key() -> QKeySequence """
        return QKeySequence

    def shortcutId(self):  # real signature unknown; restored from __doc__
        """ QShortcutEvent.shortcutId() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QShowEvent(__PyQt4_QtCore.QEvent):

    """
    QShowEvent()
    QShowEvent(QShowEvent)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def __init__(self, QShowEvent=None):
        pass


class QSizeGrip(QWidget):

    """ QSizeGrip(QWidget) """

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QSizeGrip.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QSizeGrip.eventFilter(QObject, QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def hideEvent(self, QHideEvent):
        """ QSizeGrip.hideEvent(QHideEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QSizeGrip.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QSizeGrip.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QSizeGrip.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def moveEvent(self, QMoveEvent):
        """ QSizeGrip.moveEvent(QMoveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QSizeGrip.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QSizeGrip.setVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QSizeGrip.showEvent(QShowEvent) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QSizeGrip.sizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget):
        pass


class QSizePolicy():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QSizePolicy()
    QSizePolicy(QSizePolicy.Policy, QSizePolicy.Policy)
    QSizePolicy(QVariant)
    QSizePolicy(QSizePolicy.Policy, QSizePolicy.Policy, QSizePolicy.ControlType)
    QSizePolicy(QSizePolicy)
    """

    def ControlType(self, *args, **kwargs):  # real signature unknown
        pass

    def controlType(self):  # real signature unknown; restored from __doc__
        """ QSizePolicy.controlType() -> QSizePolicy.ControlType """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def ControlTypes(self, *__args):
        """
        QSizePolicy.ControlTypes(QSizePolicy.ControlTypes)
        QSizePolicy.ControlTypes(int)
        QSizePolicy.ControlTypes()
        """
        pass

    # real signature unknown; restored from __doc__
    def expandingDirections(self):
        """ QSizePolicy.expandingDirections() -> Qt.Orientations """
        pass

    # real signature unknown; restored from __doc__
    def hasHeightForWidth(self):
        """ QSizePolicy.hasHeightForWidth() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def horizontalPolicy(self):
        """ QSizePolicy.horizontalPolicy() -> QSizePolicy.Policy """
        pass

    # real signature unknown; restored from __doc__
    def horizontalStretch(self):
        """ QSizePolicy.horizontalStretch() -> int """
        return 0

    def Policy(self, *args, **kwargs):  # real signature unknown
        pass

    def PolicyFlag(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def setControlType(self, QSizePolicy_ControlType):
        """ QSizePolicy.setControlType(QSizePolicy.ControlType) """
        pass

    # real signature unknown; restored from __doc__
    def setHeightForWidth(self, bool):
        """ QSizePolicy.setHeightForWidth(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setHorizontalPolicy(self, QSizePolicy_Policy):
        """ QSizePolicy.setHorizontalPolicy(QSizePolicy.Policy) """
        pass

    # real signature unknown; restored from __doc__
    def setHorizontalStretch(self, p_int):
        """ QSizePolicy.setHorizontalStretch(int) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalPolicy(self, QSizePolicy_Policy):
        """ QSizePolicy.setVerticalPolicy(QSizePolicy.Policy) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalStretch(self, p_int):
        """ QSizePolicy.setVerticalStretch(int) """
        pass

    def transpose(self):  # real signature unknown; restored from __doc__
        """ QSizePolicy.transpose() """
        pass

    def verticalPolicy(self):  # real signature unknown; restored from __doc__
        """ QSizePolicy.verticalPolicy() -> QSizePolicy.Policy """
        pass

    def verticalStretch(self):  # real signature unknown; restored from __doc__
        """ QSizePolicy.verticalStretch() -> int """
        return 0

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default

    ButtonBox = 2
    CheckBox = 4
    ComboBox = 8
    DefaultType = 1
    ExpandFlag = 2
    Expanding = 7
    Fixed = 0
    Frame = 16
    GroupBox = 32
    GrowFlag = 1
    Ignored = 13
    IgnoreFlag = 8
    Label = 64
    Line = 128
    LineEdit = 256
    Maximum = 4
    Minimum = 1
    MinimumExpanding = 3
    Preferred = 5
    PushButton = 512
    RadioButton = 1024
    ShrinkFlag = 4
    Slider = 2048
    SpinBox = 4096
    TabWidget = 8192
    ToolButton = 16384


class QSlider(QAbstractSlider):

    """
    QSlider(QWidget parent=None)
    QSlider(Qt.Orientation, QWidget parent=None)
    """

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QSlider.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionSlider):
        """ QSlider.initStyleOption(QStyleOptionSlider) """
        pass

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QSlider.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QSlider.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QSlider.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QSlider.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QSlider.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setTickInterval(self, p_int):
        """ QSlider.setTickInterval(int) """
        pass

    # real signature unknown; restored from __doc__
    def setTickPosition(self, QSlider_TickPosition):
        """ QSlider.setTickPosition(QSlider.TickPosition) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QSlider.sizeHint() -> QSize """
        pass

    def tickInterval(self):  # real signature unknown; restored from __doc__
        """ QSlider.tickInterval() -> int """
        return 0

    def TickPosition(self, *args, **kwargs):  # real signature unknown
        pass

    def tickPosition(self):  # real signature unknown; restored from __doc__
        """ QSlider.tickPosition() -> QSlider.TickPosition """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    NoTicks = 0
    TicksAbove = 1
    TicksBelow = 2
    TicksBothSides = 3
    TicksLeft = 1
    TicksRight = 2


class QSortFilterProxyModel(QAbstractProxyModel):

    """ QSortFilterProxyModel(QObject parent=None) """
    # real signature unknown; restored from __doc__

    def buddy(self, QModelIndex):
        """ QSortFilterProxyModel.buddy(QModelIndex) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def canFetchMore(self, QModelIndex):
        """ QSortFilterProxyModel.canFetchMore(QModelIndex) -> bool """
        return False

    def clear(self):  # real signature unknown; restored from __doc__
        """ QSortFilterProxyModel.clear() """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def columnCount(self, QModelIndex_parent=None, *args, **kwargs):
        """ QSortFilterProxyModel.columnCount(QModelIndex parent=QModelIndex()) -> int """
        pass

    # real signature unknown; restored from __doc__
    def data(self, QModelIndex, int_role=None):
        """ QSortFilterProxyModel.data(QModelIndex, int role=Qt.DisplayRole) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def dropMimeData(self, QMimeData, Qt_DropAction, p_int, p_int_1, QModelIndex):
        """ QSortFilterProxyModel.dropMimeData(QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def dynamicSortFilter(self):
        """ QSortFilterProxyModel.dynamicSortFilter() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def fetchMore(self, QModelIndex):
        """ QSortFilterProxyModel.fetchMore(QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def filterAcceptsColumn(self, p_int, QModelIndex):
        """ QSortFilterProxyModel.filterAcceptsColumn(int, QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def filterAcceptsRow(self, p_int, QModelIndex):
        """ QSortFilterProxyModel.filterAcceptsRow(int, QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def filterCaseSensitivity(self):
        """ QSortFilterProxyModel.filterCaseSensitivity() -> Qt.CaseSensitivity """
        pass

    def filterChanged(self):  # real signature unknown; restored from __doc__
        """ QSortFilterProxyModel.filterChanged() """
        pass

    def filterKeyColumn(self):  # real signature unknown; restored from __doc__
        """ QSortFilterProxyModel.filterKeyColumn() -> int """
        return 0

    def filterRegExp(self):  # real signature unknown; restored from __doc__
        """ QSortFilterProxyModel.filterRegExp() -> QRegExp """
        pass

    def filterRole(self):  # real signature unknown; restored from __doc__
        """ QSortFilterProxyModel.filterRole() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def flags(self, QModelIndex):
        """ QSortFilterProxyModel.flags(QModelIndex) -> Qt.ItemFlags """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def hasChildren(self, QModelIndex_parent=None, *args, **kwargs):
        """ QSortFilterProxyModel.hasChildren(QModelIndex parent=QModelIndex()) -> bool """
        pass

    # real signature unknown; restored from __doc__
    def headerData(self, p_int, Qt_Orientation, int_role=None):
        """ QSortFilterProxyModel.headerData(int, Qt.Orientation, int role=Qt.EditRole) -> QVariant """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def index(self, p_int, p_int_1, QModelIndex_parent=None, *args, **kwargs):
        """ QSortFilterProxyModel.index(int, int, QModelIndex parent=QModelIndex()) -> QModelIndex """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def insertColumns(self, p_int, p_int_1, QModelIndex_parent=None, *args, **kwargs):
        """ QSortFilterProxyModel.insertColumns(int, int, QModelIndex parent=QModelIndex()) -> bool """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def insertRows(self, p_int, p_int_1, QModelIndex_parent=None, *args, **kwargs):
        """ QSortFilterProxyModel.insertRows(int, int, QModelIndex parent=QModelIndex()) -> bool """
        pass

    def invalidate(self):  # real signature unknown; restored from __doc__
        """ QSortFilterProxyModel.invalidate() """
        pass

    # real signature unknown; restored from __doc__
    def invalidateFilter(self):
        """ QSortFilterProxyModel.invalidateFilter() """
        pass

    # real signature unknown; restored from __doc__
    def isSortLocaleAware(self):
        """ QSortFilterProxyModel.isSortLocaleAware() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def lessThan(self, QModelIndex, QModelIndex_1):
        """ QSortFilterProxyModel.lessThan(QModelIndex, QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def mapFromSource(self, QModelIndex):
        """ QSortFilterProxyModel.mapFromSource(QModelIndex) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def mapSelectionFromSource(self, QItemSelection):
        """ QSortFilterProxyModel.mapSelectionFromSource(QItemSelection) -> QItemSelection """
        return QItemSelection

    # real signature unknown; restored from __doc__
    def mapSelectionToSource(self, QItemSelection):
        """ QSortFilterProxyModel.mapSelectionToSource(QItemSelection) -> QItemSelection """
        return QItemSelection

    # real signature unknown; restored from __doc__
    def mapToSource(self, QModelIndex):
        """ QSortFilterProxyModel.mapToSource(QModelIndex) -> QModelIndex """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def match(self, QModelIndex, p_int, QVariant, int_hits=1, Qt_MatchFlags_flags=None, *args, **kwargs):
        """ QSortFilterProxyModel.match(QModelIndex, int, QVariant, int hits=1, Qt.MatchFlags flags=Qt.MatchStartsWith|Qt.MatchWrap) -> list-of-QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def mimeData(self, list_of_QModelIndex):
        """ QSortFilterProxyModel.mimeData(list-of-QModelIndex) -> QMimeData """
        pass

    def mimeTypes(self):  # real signature unknown; restored from __doc__
        """ QSortFilterProxyModel.mimeTypes() -> QStringList """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def parent(self, QModelIndex=None):
        """
        QSortFilterProxyModel.parent(QModelIndex) -> QModelIndex
        QSortFilterProxyModel.parent() -> QObject
        """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def removeColumns(self, p_int, p_int_1, QModelIndex_parent=None, *args, **kwargs):
        """ QSortFilterProxyModel.removeColumns(int, int, QModelIndex parent=QModelIndex()) -> bool """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def removeRows(self, p_int, p_int_1, QModelIndex_parent=None, *args, **kwargs):
        """ QSortFilterProxyModel.removeRows(int, int, QModelIndex parent=QModelIndex()) -> bool """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def rowCount(self, QModelIndex_parent=None, *args, **kwargs):
        """ QSortFilterProxyModel.rowCount(QModelIndex parent=QModelIndex()) -> int """
        pass

    # real signature unknown; restored from __doc__
    def setData(self, QModelIndex, QVariant, int_role=None):
        """ QSortFilterProxyModel.setData(QModelIndex, QVariant, int role=Qt.EditRole) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setDynamicSortFilter(self, bool):
        """ QSortFilterProxyModel.setDynamicSortFilter(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFilterCaseSensitivity(self, Qt_CaseSensitivity):
        """ QSortFilterProxyModel.setFilterCaseSensitivity(Qt.CaseSensitivity) """
        pass

    # real signature unknown; restored from __doc__
    def setFilterFixedString(self, QString):
        """ QSortFilterProxyModel.setFilterFixedString(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setFilterKeyColumn(self, p_int):
        """ QSortFilterProxyModel.setFilterKeyColumn(int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setFilterRegExp(self, *__args):
        """
        QSortFilterProxyModel.setFilterRegExp(QRegExp)
        QSortFilterProxyModel.setFilterRegExp(QString)
        """
        pass

    # real signature unknown; restored from __doc__
    def setFilterRole(self, p_int):
        """ QSortFilterProxyModel.setFilterRole(int) """
        pass

    # real signature unknown; restored from __doc__
    def setFilterWildcard(self, QString):
        """ QSortFilterProxyModel.setFilterWildcard(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setHeaderData(self, p_int, Qt_Orientation, QVariant, int_role=None):
        """ QSortFilterProxyModel.setHeaderData(int, Qt.Orientation, QVariant, int role=Qt.EditRole) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setSortCaseSensitivity(self, Qt_CaseSensitivity):
        """ QSortFilterProxyModel.setSortCaseSensitivity(Qt.CaseSensitivity) """
        pass

    # real signature unknown; restored from __doc__
    def setSortLocaleAware(self, bool):
        """ QSortFilterProxyModel.setSortLocaleAware(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSortRole(self, p_int):
        """ QSortFilterProxyModel.setSortRole(int) """
        pass

    # real signature unknown; restored from __doc__
    def setSourceModel(self, QAbstractItemModel):
        """ QSortFilterProxyModel.setSourceModel(QAbstractItemModel) """
        pass

    # real signature unknown; restored from __doc__
    def sort(self, p_int, Qt_SortOrder_order=None):
        """ QSortFilterProxyModel.sort(int, Qt.SortOrder order=Qt.AscendingOrder) """
        pass

    # real signature unknown; restored from __doc__
    def sortCaseSensitivity(self):
        """ QSortFilterProxyModel.sortCaseSensitivity() -> Qt.CaseSensitivity """
        pass

    def sortColumn(self):  # real signature unknown; restored from __doc__
        """ QSortFilterProxyModel.sortColumn() -> int """
        return 0

    def sortOrder(self):  # real signature unknown; restored from __doc__
        """ QSortFilterProxyModel.sortOrder() -> Qt.SortOrder """
        pass

    def sortRole(self):  # real signature unknown; restored from __doc__
        """ QSortFilterProxyModel.sortRole() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def span(self, QModelIndex):
        """ QSortFilterProxyModel.span(QModelIndex) -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def supportedDropActions(self):
        """ QSortFilterProxyModel.supportedDropActions() -> Qt.DropActions """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QSound(__PyQt4_QtCore.QObject):

    """ QSound(QString, QObject parent=None) """

    def fileName(self):  # real signature unknown; restored from __doc__
        """ QSound.fileName() -> QString """
        pass

    def isAvailable(self):  # real signature unknown; restored from __doc__
        """ QSound.isAvailable() -> bool """
        return False

    def isFinished(self):  # real signature unknown; restored from __doc__
        """ QSound.isFinished() -> bool """
        return False

    def loops(self):  # real signature unknown; restored from __doc__
        """ QSound.loops() -> int """
        return 0

    def loopsRemaining(self):  # real signature unknown; restored from __doc__
        """ QSound.loopsRemaining() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def play(self, QString=None):
        """
        QSound.play(QString)
        QSound.play()
        """
        pass

    def setLoops(self, p_int):  # real signature unknown; restored from __doc__
        """ QSound.setLoops(int) """
        pass

    def stop(self):  # real signature unknown; restored from __doc__
        """ QSound.stop() """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QString, QObject_parent=None):
        pass


class QSpacerItem(QLayoutItem):

    """
    QSpacerItem(int, int, QSizePolicy.Policy hPolicy=QSizePolicy.Minimum, QSizePolicy.Policy vPolicy=QSizePolicy.Minimum)
    QSpacerItem(QSpacerItem)
    """
    # real signature unknown; restored from __doc__

    def changeSize(self, p_int, p_int_1, QSizePolicy_Policy_hPolicy=None, QSizePolicy_Policy_vPolicy=None):
        """ QSpacerItem.changeSize(int, int, QSizePolicy.Policy hPolicy=QSizePolicy.Minimum, QSizePolicy.Policy vPolicy=QSizePolicy.Minimum) """
        pass

    # real signature unknown; restored from __doc__
    def expandingDirections(self):
        """ QSpacerItem.expandingDirections() -> Qt.Orientations """
        pass

    def geometry(self):  # real signature unknown; restored from __doc__
        """ QSpacerItem.geometry() -> QRect """
        pass

    def isEmpty(self):  # real signature unknown; restored from __doc__
        """ QSpacerItem.isEmpty() -> bool """
        return False

    def maximumSize(self):  # real signature unknown; restored from __doc__
        """ QSpacerItem.maximumSize() -> QSize """
        pass

    def minimumSize(self):  # real signature unknown; restored from __doc__
        """ QSpacerItem.minimumSize() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def setGeometry(self, QRect):
        """ QSpacerItem.setGeometry(QRect) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QSpacerItem.sizeHint() -> QSize """
        pass

    def spacerItem(self):  # real signature unknown; restored from __doc__
        """ QSpacerItem.spacerItem() -> QSpacerItem """
        return QSpacerItem

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QSpinBox(QAbstractSpinBox):

    """ QSpinBox(QWidget parent=None) """

    def cleanText(self):  # real signature unknown; restored from __doc__
        """ QSpinBox.cleanText() -> QString """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QSpinBox.event(QEvent) -> bool """
        return False

    def fixup(self, QString):  # real signature unknown; restored from __doc__
        """ QSpinBox.fixup(QString) """
        pass

    def maximum(self):  # real signature unknown; restored from __doc__
        """ QSpinBox.maximum() -> int """
        return 0

    def minimum(self):  # real signature unknown; restored from __doc__
        """ QSpinBox.minimum() -> int """
        return 0

    def prefix(self):  # real signature unknown; restored from __doc__
        """ QSpinBox.prefix() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def setMaximum(self, p_int):
        """ QSpinBox.setMaximum(int) """
        pass

    # real signature unknown; restored from __doc__
    def setMinimum(self, p_int):
        """ QSpinBox.setMinimum(int) """
        pass

    # real signature unknown; restored from __doc__
    def setPrefix(self, QString):
        """ QSpinBox.setPrefix(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setRange(self, p_int, p_int_1):
        """ QSpinBox.setRange(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setSingleStep(self, p_int):
        """ QSpinBox.setSingleStep(int) """
        pass

    # real signature unknown; restored from __doc__
    def setSuffix(self, QString):
        """ QSpinBox.setSuffix(QString) """
        pass

    def setValue(self, p_int):  # real signature unknown; restored from __doc__
        """ QSpinBox.setValue(int) """
        pass

    def singleStep(self):  # real signature unknown; restored from __doc__
        """ QSpinBox.singleStep() -> int """
        return 0

    def suffix(self):  # real signature unknown; restored from __doc__
        """ QSpinBox.suffix() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def textFromValue(self, p_int):
        """ QSpinBox.textFromValue(int) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def validate(self, QString, p_int):
        """ QSpinBox.validate(QString, int) -> (QValidator.State, int) """
        pass

    def value(self):  # real signature unknown; restored from __doc__
        """ QSpinBox.value() -> int """
        return 0

    def valueChanged(self, *args, **kwargs):  # real signature unknown
        """
        QSpinBox.valueChanged[int] [signal]
        QSpinBox.valueChanged[QString] [signal]
        """
        pass

    # real signature unknown; restored from __doc__
    def valueFromText(self, QString):
        """ QSpinBox.valueFromText(QString) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass


class QSplashScreen(QWidget):

    """
    QSplashScreen(QPixmap pixmap=QPixmap(), Qt.WindowFlags flags=0)
    QSplashScreen(QWidget, QPixmap pixmap=QPixmap(), Qt.WindowFlags flags=0)
    """

    def clearMessage(self):  # real signature unknown; restored from __doc__
        """ QSplashScreen.clearMessage() """
        pass

    # real signature unknown; restored from __doc__
    def drawContents(self, QPainter):
        """ QSplashScreen.drawContents(QPainter) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QSplashScreen.event(QEvent) -> bool """
        return False

    def finish(self, QWidget):  # real signature unknown; restored from __doc__
        """ QSplashScreen.finish(QWidget) """
        pass

    def messageChanged(self, *args, **kwargs):  # real signature unknown
        """ QSplashScreen.messageChanged[QString] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QSplashScreen.mousePressEvent(QMouseEvent) """
        pass

    def pixmap(self):  # real signature unknown; restored from __doc__
        """ QSplashScreen.pixmap() -> QPixmap """
        return QPixmap

    def repaint(self):  # real signature unknown; restored from __doc__
        """ QSplashScreen.repaint() """
        pass

    # real signature unknown; restored from __doc__
    def setPixmap(self, QPixmap):
        """ QSplashScreen.setPixmap(QPixmap) """
        pass

    # real signature unknown; restored from __doc__
    def showMessage(self, QString, int_alignment=None, QColor_color=None):
        """ QSplashScreen.showMessage(QString, int alignment=Qt.AlignLeft, QColor color=Qt.black) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QSplitter(QFrame):

    """
    QSplitter(QWidget parent=None)
    QSplitter(Qt.Orientation, QWidget parent=None)
    """
    # real signature unknown; restored from __doc__

    def addWidget(self, QWidget):
        """ QSplitter.addWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QSplitter.changeEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def childEvent(self, QChildEvent):
        """ QSplitter.childEvent(QChildEvent) """
        pass

    # real signature unknown; restored from __doc__
    def childrenCollapsible(self):
        """ QSplitter.childrenCollapsible() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def closestLegalPosition(self, p_int, p_int_1):
        """ QSplitter.closestLegalPosition(int, int) -> int """
        return 0

    def count(self):  # real signature unknown; restored from __doc__
        """ QSplitter.count() -> int """
        return 0

    def createHandle(self):  # real signature unknown; restored from __doc__
        """ QSplitter.createHandle() -> QSplitterHandle """
        return QSplitterHandle

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QSplitter.event(QEvent) -> bool """
        return False

    def getRange(self, p_int):  # real signature unknown; restored from __doc__
        """ QSplitter.getRange(int) -> (int, int) """
        pass

    def handle(self, p_int):  # real signature unknown; restored from __doc__
        """ QSplitter.handle(int) -> QSplitterHandle """
        return QSplitterHandle

    def handleWidth(self):  # real signature unknown; restored from __doc__
        """ QSplitter.handleWidth() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def indexOf(self, QWidget):
        """ QSplitter.indexOf(QWidget) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def insertWidget(self, p_int, QWidget):
        """ QSplitter.insertWidget(int, QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def isCollapsible(self, p_int):
        """ QSplitter.isCollapsible(int) -> bool """
        return False

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QSplitter.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def moveSplitter(self, p_int, p_int_1):
        """ QSplitter.moveSplitter(int, int) """
        pass

    def opaqueResize(self):  # real signature unknown; restored from __doc__
        """ QSplitter.opaqueResize() -> bool """
        return False

    def orientation(self):  # real signature unknown; restored from __doc__
        """ QSplitter.orientation() -> Qt.Orientation """
        pass

    def refresh(self):  # real signature unknown; restored from __doc__
        """ QSplitter.refresh() """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QSplitter.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def restoreState(self, QByteArray):
        """ QSplitter.restoreState(QByteArray) -> bool """
        return False

    def saveState(self):  # real signature unknown; restored from __doc__
        """ QSplitter.saveState() -> QByteArray """
        pass

    # real signature unknown; restored from __doc__
    def setChildrenCollapsible(self, bool):
        """ QSplitter.setChildrenCollapsible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setCollapsible(self, p_int, bool):
        """ QSplitter.setCollapsible(int, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setHandleWidth(self, p_int):
        """ QSplitter.setHandleWidth(int) """
        pass

    # real signature unknown; restored from __doc__
    def setOpaqueResize(self, bool_opaque=True):
        """ QSplitter.setOpaqueResize(bool opaque=True) """
        pass

    # real signature unknown; restored from __doc__
    def setOrientation(self, Qt_Orientation):
        """ QSplitter.setOrientation(Qt.Orientation) """
        pass

    # real signature unknown; restored from __doc__
    def setRubberBand(self, p_int):
        """ QSplitter.setRubberBand(int) """
        pass

    # real signature unknown; restored from __doc__
    def setSizes(self, list_of_int):
        """ QSplitter.setSizes(list-of-int) """
        pass

    # real signature unknown; restored from __doc__
    def setStretchFactor(self, p_int, p_int_1):
        """ QSplitter.setStretchFactor(int, int) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QSplitter.sizeHint() -> QSize """
        pass

    def sizes(self):  # real signature unknown; restored from __doc__
        """ QSplitter.sizes() -> list-of-int """
        pass

    def splitterMoved(self, *args, **kwargs):  # real signature unknown
        """ QSplitter.splitterMoved[int, int] [signal] """
        pass

    def widget(self, p_int):  # real signature unknown; restored from __doc__
        """ QSplitter.widget(int) -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass


class QSplitterHandle(QWidget):

    """ QSplitterHandle(Qt.Orientation, QSplitter) """
    # real signature unknown; restored from __doc__

    def closestLegalPosition(self, p_int):
        """ QSplitterHandle.closestLegalPosition(int) -> int """
        return 0

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QSplitterHandle.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QSplitterHandle.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QSplitterHandle.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QSplitterHandle.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def moveSplitter(self, p_int):
        """ QSplitterHandle.moveSplitter(int) """
        pass

    def opaqueResize(self):  # real signature unknown; restored from __doc__
        """ QSplitterHandle.opaqueResize() -> bool """
        return False

    def orientation(self):  # real signature unknown; restored from __doc__
        """ QSplitterHandle.orientation() -> Qt.Orientation """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QSplitterHandle.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QSplitterHandle.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setOrientation(self, Qt_Orientation):
        """ QSplitterHandle.setOrientation(Qt.Orientation) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QSplitterHandle.sizeHint() -> QSize """
        pass

    def splitter(self):  # real signature unknown; restored from __doc__
        """ QSplitterHandle.splitter() -> QSplitter """
        return QSplitter

    # real signature unknown; restored from __doc__
    def __init__(self, Qt_Orientation, QSplitter):
        pass


class QStackedLayout(QLayout):

    """
    QStackedLayout()
    QStackedLayout(QWidget)
    QStackedLayout(QLayout)
    """
    # real signature unknown; restored from __doc__

    def addItem(self, QLayoutItem):
        """ QStackedLayout.addItem(QLayoutItem) """
        pass

    # real signature unknown; restored from __doc__
    def addWidget(self, QWidget):
        """ QStackedLayout.addWidget(QWidget) -> int """
        return 0

    def count(self):  # real signature unknown; restored from __doc__
        """ QStackedLayout.count() -> int """
        return 0

    def currentChanged(self, *args, **kwargs):  # real signature unknown
        """ QStackedLayout.currentChanged[int] [signal] """
        pass

    def currentIndex(self):  # real signature unknown; restored from __doc__
        """ QStackedLayout.currentIndex() -> int """
        return 0

    def currentWidget(self):  # real signature unknown; restored from __doc__
        """ QStackedLayout.currentWidget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def insertWidget(self, p_int, QWidget):
        """ QStackedLayout.insertWidget(int, QWidget) -> int """
        return 0

    def itemAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QStackedLayout.itemAt(int) -> QLayoutItem """
        return QLayoutItem

    def minimumSize(self):  # real signature unknown; restored from __doc__
        """ QStackedLayout.minimumSize() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentIndex(self, p_int):
        """ QStackedLayout.setCurrentIndex(int) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentWidget(self, QWidget):
        """ QStackedLayout.setCurrentWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setGeometry(self, QRect):
        """ QStackedLayout.setGeometry(QRect) """
        pass

    # real signature unknown; restored from __doc__
    def setStackingMode(self, QStackedLayout_StackingMode):
        """ QStackedLayout.setStackingMode(QStackedLayout.StackingMode) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QStackedLayout.sizeHint() -> QSize """
        pass

    def StackingMode(self, *args, **kwargs):  # real signature unknown
        pass

    def stackingMode(self):  # real signature unknown; restored from __doc__
        """ QStackedLayout.stackingMode() -> QStackedLayout.StackingMode """
        pass

    def takeAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QStackedLayout.takeAt(int) -> QLayoutItem """
        return QLayoutItem

    # real signature unknown; restored from __doc__ with multiple overloads
    def widget(self, p_int=None):
        """
        QStackedLayout.widget(int) -> QWidget
        QStackedLayout.widget() -> QWidget
        """
        return QWidget

    def widgetRemoved(self, *args, **kwargs):  # real signature unknown
        """ QStackedLayout.widgetRemoved[int] [signal] """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    StackAll = 1
    StackOne = 0


class QStackedWidget(QFrame):

    """ QStackedWidget(QWidget parent=None) """
    # real signature unknown; restored from __doc__

    def addWidget(self, QWidget):
        """ QStackedWidget.addWidget(QWidget) -> int """
        return 0

    def count(self):  # real signature unknown; restored from __doc__
        """ QStackedWidget.count() -> int """
        return 0

    def currentChanged(self, *args, **kwargs):  # real signature unknown
        """ QStackedWidget.currentChanged[int] [signal] """
        pass

    def currentIndex(self):  # real signature unknown; restored from __doc__
        """ QStackedWidget.currentIndex() -> int """
        return 0

    def currentWidget(self):  # real signature unknown; restored from __doc__
        """ QStackedWidget.currentWidget() -> QWidget """
        return QWidget

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QStackedWidget.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def indexOf(self, QWidget):
        """ QStackedWidget.indexOf(QWidget) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def insertWidget(self, p_int, QWidget):
        """ QStackedWidget.insertWidget(int, QWidget) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def removeWidget(self, QWidget):
        """ QStackedWidget.removeWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentIndex(self, p_int):
        """ QStackedWidget.setCurrentIndex(int) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentWidget(self, QWidget):
        """ QStackedWidget.setCurrentWidget(QWidget) """
        pass

    def widget(self, p_int):  # real signature unknown; restored from __doc__
        """ QStackedWidget.widget(int) -> QWidget """
        return QWidget

    def widgetRemoved(self, *args, **kwargs):  # real signature unknown
        """ QStackedWidget.widgetRemoved[int] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass


class QStandardItem():  # skipped bases: <type 'sip.wrapper'>

    """
    QStandardItem()
    QStandardItem(QString)
    QStandardItem(QIcon, QString)
    QStandardItem(int, int columns=1)
    QStandardItem(QStandardItem)
    """
    # real signature unknown; restored from __doc__

    def accessibleDescription(self):
        """ QStandardItem.accessibleDescription() -> QString """
        pass

    def accessibleText(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.accessibleText() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def appendColumn(self, list_of_QStandardItem):
        """ QStandardItem.appendColumn(list-of-QStandardItem) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def appendRow(self, *__args):
        """
        QStandardItem.appendRow(list-of-QStandardItem)
        QStandardItem.appendRow(QStandardItem)
        """
        pass

    # real signature unknown; restored from __doc__
    def appendRows(self, list_of_QStandardItem):
        """ QStandardItem.appendRows(list-of-QStandardItem) """
        pass

    def background(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.background() -> QBrush """
        return QBrush

    def checkState(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.checkState() -> Qt.CheckState """
        pass

    # real signature unknown; restored from __doc__
    def child(self, p_int, int_column=0):
        """ QStandardItem.child(int, int column=0) -> QStandardItem """
        return QStandardItem

    def clone(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.clone() -> QStandardItem """
        return QStandardItem

    def column(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.column() -> int """
        return 0

    def columnCount(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.columnCount() -> int """
        return 0

    # real signature unknown; NOTE: unreliably restored from __doc__
    def data(self, int_role=None, *args, **kwargs):
        """ QStandardItem.data(int role=Qt.UserRole+1) -> QVariant """
        pass

    def emitDataChanged(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.emitDataChanged() """
        pass

    def flags(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.flags() -> Qt.ItemFlags """
        pass

    def font(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.font() -> QFont """
        return QFont

    def foreground(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.foreground() -> QBrush """
        return QBrush

    def hasChildren(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.hasChildren() -> bool """
        return False

    def icon(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.icon() -> QIcon """
        return QIcon

    def index(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.index() -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def insertColumn(self, p_int, list_of_QStandardItem):
        """ QStandardItem.insertColumn(int, list-of-QStandardItem) """
        pass

    # real signature unknown; restored from __doc__
    def insertColumns(self, p_int, p_int_1):
        """ QStandardItem.insertColumns(int, int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def insertRow(self, p_int, *__args):
        """
        QStandardItem.insertRow(int, list-of-QStandardItem)
        QStandardItem.insertRow(int, QStandardItem)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def insertRows(self, p_int, *__args):
        """
        QStandardItem.insertRows(int, int)
        QStandardItem.insertRows(int, list-of-QStandardItem)
        """
        pass

    def isCheckable(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.isCheckable() -> bool """
        return False

    def isDragEnabled(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.isDragEnabled() -> bool """
        return False

    def isDropEnabled(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.isDropEnabled() -> bool """
        return False

    def isEditable(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.isEditable() -> bool """
        return False

    def isEnabled(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.isEnabled() -> bool """
        return False

    def isSelectable(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.isSelectable() -> bool """
        return False

    def isTristate(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.isTristate() -> bool """
        return False

    def ItemType(self, *args, **kwargs):  # real signature unknown
        pass

    def model(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.model() -> QStandardItemModel """
        return QStandardItemModel

    def parent(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.parent() -> QStandardItem """
        return QStandardItem

    # real signature unknown; restored from __doc__
    def read(self, QDataStream):
        """ QStandardItem.read(QDataStream) """
        pass

    # real signature unknown; restored from __doc__
    def removeColumn(self, p_int):
        """ QStandardItem.removeColumn(int) """
        pass

    # real signature unknown; restored from __doc__
    def removeColumns(self, p_int, p_int_1):
        """ QStandardItem.removeColumns(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def removeRow(self, p_int):
        """ QStandardItem.removeRow(int) """
        pass

    # real signature unknown; restored from __doc__
    def removeRows(self, p_int, p_int_1):
        """ QStandardItem.removeRows(int, int) """
        pass

    def row(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.row() -> int """
        return 0

    def rowCount(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.rowCount() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setAccessibleDescription(self, QString):
        """ QStandardItem.setAccessibleDescription(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setAccessibleText(self, QString):
        """ QStandardItem.setAccessibleText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setBackground(self, QBrush):
        """ QStandardItem.setBackground(QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def setCheckable(self, bool):
        """ QStandardItem.setCheckable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setCheckState(self, Qt_CheckState):
        """ QStandardItem.setCheckState(Qt.CheckState) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setChild(self, p_int, *__args):
        """
        QStandardItem.setChild(int, int, QStandardItem)
        QStandardItem.setChild(int, QStandardItem)
        """
        pass

    # real signature unknown; restored from __doc__
    def setColumnCount(self, p_int):
        """ QStandardItem.setColumnCount(int) """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def setData(self, QVariant, int_role=None, *args, **kwargs):
        """ QStandardItem.setData(QVariant, int role=Qt.UserRole+1) """
        pass

    # real signature unknown; restored from __doc__
    def setDragEnabled(self, bool):
        """ QStandardItem.setDragEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setDropEnabled(self, bool):
        """ QStandardItem.setDropEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setEditable(self, bool):
        """ QStandardItem.setEditable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setEnabled(self, bool):
        """ QStandardItem.setEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFlags(self, Qt_ItemFlags):
        """ QStandardItem.setFlags(Qt.ItemFlags) """
        pass

    def setFont(self, QFont):  # real signature unknown; restored from __doc__
        """ QStandardItem.setFont(QFont) """
        pass

    # real signature unknown; restored from __doc__
    def setForeground(self, QBrush):
        """ QStandardItem.setForeground(QBrush) """
        pass

    def setIcon(self, QIcon):  # real signature unknown; restored from __doc__
        """ QStandardItem.setIcon(QIcon) """
        pass

    # real signature unknown; restored from __doc__
    def setRowCount(self, p_int):
        """ QStandardItem.setRowCount(int) """
        pass

    # real signature unknown; restored from __doc__
    def setSelectable(self, bool):
        """ QStandardItem.setSelectable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSizeHint(self, QSize):
        """ QStandardItem.setSizeHint(QSize) """
        pass

    # real signature unknown; restored from __doc__
    def setStatusTip(self, QString):
        """ QStandardItem.setStatusTip(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, QString):
        """ QStandardItem.setText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTextAlignment(self, Qt_Alignment):
        """ QStandardItem.setTextAlignment(Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setToolTip(self, QString):
        """ QStandardItem.setToolTip(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTristate(self, bool):
        """ QStandardItem.setTristate(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setWhatsThis(self, QString):
        """ QStandardItem.setWhatsThis(QString) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.sizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def sortChildren(self, p_int, Qt_SortOrder_order=None):
        """ QStandardItem.sortChildren(int, Qt.SortOrder order=Qt.AscendingOrder) """
        pass

    def statusTip(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.statusTip() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def takeChild(self, p_int, int_column=0):
        """ QStandardItem.takeChild(int, int column=0) -> QStandardItem """
        return QStandardItem

    # real signature unknown; restored from __doc__
    def takeColumn(self, p_int):
        """ QStandardItem.takeColumn(int) -> list-of-QStandardItem """
        pass

    def takeRow(self, p_int):  # real signature unknown; restored from __doc__
        """ QStandardItem.takeRow(int) -> list-of-QStandardItem """
        pass

    def text(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.text() -> QString """
        pass

    def textAlignment(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.textAlignment() -> Qt.Alignment """
        pass

    def toolTip(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.toolTip() -> QString """
        pass

    def type(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.type() -> int """
        return 0

    def whatsThis(self):  # real signature unknown; restored from __doc__
        """ QStandardItem.whatsThis() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def write(self, QDataStream):
        """ QStandardItem.write(QDataStream) """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default

    Type = 0
    UserType = 1000


class QStandardItemModel(__PyQt4_QtCore.QAbstractItemModel):

    """
    QStandardItemModel(QObject parent=None)
    QStandardItemModel(int, int, QObject parent=None)
    """
    # real signature unknown; restored from __doc__

    def appendColumn(self, list_of_QStandardItem):
        """ QStandardItemModel.appendColumn(list-of-QStandardItem) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def appendRow(self, *__args):
        """
        QStandardItemModel.appendRow(list-of-QStandardItem)
        QStandardItemModel.appendRow(QStandardItem)
        """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QStandardItemModel.clear() """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def columnCount(self, QModelIndex_parent=None, *args, **kwargs):
        """ QStandardItemModel.columnCount(QModelIndex parent=QModelIndex()) -> int """
        pass

    # real signature unknown; restored from __doc__
    def data(self, QModelIndex, int_role=None):
        """ QStandardItemModel.data(QModelIndex, int role=Qt.DisplayRole) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def dropMimeData(self, QMimeData, Qt_DropAction, p_int, p_int_1, QModelIndex):
        """ QStandardItemModel.dropMimeData(QMimeData, Qt.DropAction, int, int, QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def findItems(self, QString, Qt_MatchFlags_flags=None, int_column=0):
        """ QStandardItemModel.findItems(QString, Qt.MatchFlags flags=Qt.MatchExactly, int column=0) -> list-of-QStandardItem """
        pass

    # real signature unknown; restored from __doc__
    def flags(self, QModelIndex):
        """ QStandardItemModel.flags(QModelIndex) -> Qt.ItemFlags """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def hasChildren(self, QModelIndex_parent=None, *args, **kwargs):
        """ QStandardItemModel.hasChildren(QModelIndex parent=QModelIndex()) -> bool """
        pass

    # real signature unknown; restored from __doc__
    def headerData(self, p_int, Qt_Orientation, int_role=None):
        """ QStandardItemModel.headerData(int, Qt.Orientation, int role=Qt.DisplayRole) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def horizontalHeaderItem(self, p_int):
        """ QStandardItemModel.horizontalHeaderItem(int) -> QStandardItem """
        return QStandardItem

    # real signature unknown; NOTE: unreliably restored from __doc__
    def index(self, p_int, p_int_1, QModelIndex_parent=None, *args, **kwargs):
        """ QStandardItemModel.index(int, int, QModelIndex parent=QModelIndex()) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def indexFromItem(self, QStandardItem):
        """ QStandardItemModel.indexFromItem(QStandardItem) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def insertColumn(self, p_int, *__args):
        """
        QStandardItemModel.insertColumn(int, list-of-QStandardItem)
        QStandardItemModel.insertColumn(int, QModelIndex parent=QModelIndex()) -> bool
        """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def insertColumns(self, p_int, p_int_1, QModelIndex_parent=None, *args, **kwargs):
        """ QStandardItemModel.insertColumns(int, int, QModelIndex parent=QModelIndex()) -> bool """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def insertRow(self, p_int, *__args):
        """
        QStandardItemModel.insertRow(int, list-of-QStandardItem)
        QStandardItemModel.insertRow(int, QStandardItem)
        QStandardItemModel.insertRow(int, QModelIndex parent=QModelIndex()) -> bool
        """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def insertRows(self, p_int, p_int_1, QModelIndex_parent=None, *args, **kwargs):
        """ QStandardItemModel.insertRows(int, int, QModelIndex parent=QModelIndex()) -> bool """
        pass

    # real signature unknown; restored from __doc__
    def invisibleRootItem(self):
        """ QStandardItemModel.invisibleRootItem() -> QStandardItem """
        return QStandardItem

    # real signature unknown; restored from __doc__
    def item(self, p_int, int_column=0):
        """ QStandardItemModel.item(int, int column=0) -> QStandardItem """
        return QStandardItem

    def itemChanged(self, *args, **kwargs):  # real signature unknown
        """ QStandardItemModel.itemChanged[QStandardItem] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def itemData(self, QModelIndex):
        """ QStandardItemModel.itemData(QModelIndex) -> dict-of-int-QVariant """
        pass

    # real signature unknown; restored from __doc__
    def itemFromIndex(self, QModelIndex):
        """ QStandardItemModel.itemFromIndex(QModelIndex) -> QStandardItem """
        return QStandardItem

    def itemPrototype(self):  # real signature unknown; restored from __doc__
        """ QStandardItemModel.itemPrototype() -> QStandardItem """
        return QStandardItem

    # real signature unknown; restored from __doc__
    def mimeData(self, list_of_QModelIndex):
        """ QStandardItemModel.mimeData(list-of-QModelIndex) -> QMimeData """
        pass

    def mimeTypes(self):  # real signature unknown; restored from __doc__
        """ QStandardItemModel.mimeTypes() -> QStringList """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def parent(self, QModelIndex=None):
        """
        QStandardItemModel.parent(QModelIndex) -> QModelIndex
        QStandardItemModel.parent() -> QObject
        """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def removeColumns(self, p_int, p_int_1, QModelIndex_parent=None, *args, **kwargs):
        """ QStandardItemModel.removeColumns(int, int, QModelIndex parent=QModelIndex()) -> bool """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def removeRows(self, p_int, p_int_1, QModelIndex_parent=None, *args, **kwargs):
        """ QStandardItemModel.removeRows(int, int, QModelIndex parent=QModelIndex()) -> bool """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def rowCount(self, QModelIndex_parent=None, *args, **kwargs):
        """ QStandardItemModel.rowCount(QModelIndex parent=QModelIndex()) -> int """
        pass

    # real signature unknown; restored from __doc__
    def setColumnCount(self, p_int):
        """ QStandardItemModel.setColumnCount(int) """
        pass

    # real signature unknown; restored from __doc__
    def setData(self, QModelIndex, QVariant, int_role=None):
        """ QStandardItemModel.setData(QModelIndex, QVariant, int role=Qt.EditRole) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setHeaderData(self, p_int, Qt_Orientation, QVariant, int_role=None):
        """ QStandardItemModel.setHeaderData(int, Qt.Orientation, QVariant, int role=Qt.EditRole) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setHorizontalHeaderItem(self, p_int, QStandardItem):
        """ QStandardItemModel.setHorizontalHeaderItem(int, QStandardItem) """
        pass

    # real signature unknown; restored from __doc__
    def setHorizontalHeaderLabels(self, QStringList):
        """ QStandardItemModel.setHorizontalHeaderLabels(QStringList) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setItem(self, p_int, *__args):
        """
        QStandardItemModel.setItem(int, int, QStandardItem)
        QStandardItemModel.setItem(int, QStandardItem)
        """
        pass

    # real signature unknown; restored from __doc__
    def setItemData(self, QModelIndex, dict_of_int_QVariant):
        """ QStandardItemModel.setItemData(QModelIndex, dict-of-int-QVariant) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setItemPrototype(self, QStandardItem):
        """ QStandardItemModel.setItemPrototype(QStandardItem) """
        pass

    # real signature unknown; restored from __doc__
    def setRowCount(self, p_int):
        """ QStandardItemModel.setRowCount(int) """
        pass

    # real signature unknown; restored from __doc__
    def setSortRole(self, p_int):
        """ QStandardItemModel.setSortRole(int) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalHeaderItem(self, p_int, QStandardItem):
        """ QStandardItemModel.setVerticalHeaderItem(int, QStandardItem) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalHeaderLabels(self, QStringList):
        """ QStandardItemModel.setVerticalHeaderLabels(QStringList) """
        pass

    # real signature unknown; restored from __doc__
    def sort(self, p_int, Qt_SortOrder_order=None):
        """ QStandardItemModel.sort(int, Qt.SortOrder order=Qt.AscendingOrder) """
        pass

    def sortRole(self):  # real signature unknown; restored from __doc__
        """ QStandardItemModel.sortRole() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def supportedDropActions(self):
        """ QStandardItemModel.supportedDropActions() -> Qt.DropActions """
        pass

    # real signature unknown; restored from __doc__
    def takeColumn(self, p_int):
        """ QStandardItemModel.takeColumn(int) -> list-of-QStandardItem """
        pass

    # real signature unknown; restored from __doc__
    def takeHorizontalHeaderItem(self, p_int):
        """ QStandardItemModel.takeHorizontalHeaderItem(int) -> QStandardItem """
        return QStandardItem

    # real signature unknown; restored from __doc__
    def takeItem(self, p_int, int_column=0):
        """ QStandardItemModel.takeItem(int, int column=0) -> QStandardItem """
        return QStandardItem

    def takeRow(self, p_int):  # real signature unknown; restored from __doc__
        """ QStandardItemModel.takeRow(int) -> list-of-QStandardItem """
        pass

    # real signature unknown; restored from __doc__
    def takeVerticalHeaderItem(self, p_int):
        """ QStandardItemModel.takeVerticalHeaderItem(int) -> QStandardItem """
        return QStandardItem

    # real signature unknown; restored from __doc__
    def verticalHeaderItem(self, p_int):
        """ QStandardItemModel.verticalHeaderItem(int) -> QStandardItem """
        return QStandardItem

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QStaticText():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QStaticText()
    QStaticText(QString)
    QStaticText(QStaticText)
    """

    def PerformanceHint(self, *args, **kwargs):  # real signature unknown
        pass

    def performanceHint(self):  # real signature unknown; restored from __doc__
        """ QStaticText.performanceHint() -> QStaticText.PerformanceHint """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def prepare(self, QTransform_matrix=None, *args, **kwargs):
        """ QStaticText.prepare(QTransform matrix=QTransform(), QFont font=QFont()) """
        pass

    # real signature unknown; restored from __doc__
    def setPerformanceHint(self, QStaticText_PerformanceHint):
        """ QStaticText.setPerformanceHint(QStaticText.PerformanceHint) """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, QString):
        """ QStaticText.setText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTextFormat(self, Qt_TextFormat):
        """ QStaticText.setTextFormat(Qt.TextFormat) """
        pass

    # real signature unknown; restored from __doc__
    def setTextOption(self, QTextOption):
        """ QStaticText.setTextOption(QTextOption) """
        pass

    # real signature unknown; restored from __doc__
    def setTextWidth(self, p_float):
        """ QStaticText.setTextWidth(float) """
        pass

    def size(self):  # real signature unknown; restored from __doc__
        """ QStaticText.size() -> QSizeF """
        pass

    def text(self):  # real signature unknown; restored from __doc__
        """ QStaticText.text() -> QString """
        pass

    def textFormat(self):  # real signature unknown; restored from __doc__
        """ QStaticText.textFormat() -> Qt.TextFormat """
        pass

    def textOption(self):  # real signature unknown; restored from __doc__
        """ QStaticText.textOption() -> QTextOption """
        return QTextOption

    def textWidth(self):  # real signature unknown; restored from __doc__
        """ QStaticText.textWidth() -> float """
        return 0.0

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default

    AggressiveCaching = 1
    ModerateCaching = 0


class QStatusBar(QWidget):

    """ QStatusBar(QWidget parent=None) """
    # real signature unknown; restored from __doc__

    def addPermanentWidget(self, QWidget, int_stretch=0):
        """ QStatusBar.addPermanentWidget(QWidget, int stretch=0) """
        pass

    # real signature unknown; restored from __doc__
    def addWidget(self, QWidget, int_stretch=0):
        """ QStatusBar.addWidget(QWidget, int stretch=0) """
        pass

    def clearMessage(self):  # real signature unknown; restored from __doc__
        """ QStatusBar.clearMessage() """
        pass

    def currentMessage(self):  # real signature unknown; restored from __doc__
        """ QStatusBar.currentMessage() -> QString """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QStatusBar.event(QEvent) -> bool """
        return False

    def hideOrShow(self):  # real signature unknown; restored from __doc__
        """ QStatusBar.hideOrShow() """
        pass

    # real signature unknown; restored from __doc__
    def insertPermanentWidget(self, p_int, QWidget, int_stretch=0):
        """ QStatusBar.insertPermanentWidget(int, QWidget, int stretch=0) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def insertWidget(self, p_int, QWidget, int_stretch=0):
        """ QStatusBar.insertWidget(int, QWidget, int stretch=0) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def isSizeGripEnabled(self):
        """ QStatusBar.isSizeGripEnabled() -> bool """
        return False

    def messageChanged(self, *args, **kwargs):  # real signature unknown
        """ QStatusBar.messageChanged[QString] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QStatusBar.paintEvent(QPaintEvent) """
        pass

    def reformat(self):  # real signature unknown; restored from __doc__
        """ QStatusBar.reformat() """
        pass

    # real signature unknown; restored from __doc__
    def removeWidget(self, QWidget):
        """ QStatusBar.removeWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QStatusBar.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setSizeGripEnabled(self, bool):
        """ QStatusBar.setSizeGripEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QStatusBar.showEvent(QShowEvent) """
        pass

    # real signature unknown; restored from __doc__
    def showMessage(self, QString, int_msecs=0):
        """ QStatusBar.showMessage(QString, int msecs=0) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass


class QStatusTipEvent(__PyQt4_QtCore.QEvent):

    """
    QStatusTipEvent(QString)
    QStatusTipEvent(QStatusTipEvent)
    """

    def tip(self):  # real signature unknown; restored from __doc__
        """ QStatusTipEvent.tip() -> QString """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QStringListModel(__PyQt4_QtCore.QAbstractListModel):

    """
    QStringListModel(QObject parent=None)
    QStringListModel(QStringList, QObject parent=None)
    """
    # real signature unknown; restored from __doc__

    def data(self, QModelIndex, p_int):
        """ QStringListModel.data(QModelIndex, int) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def flags(self, QModelIndex):
        """ QStringListModel.flags(QModelIndex) -> Qt.ItemFlags """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def insertRows(self, p_int, p_int_1, QModelIndex_parent=None, *args, **kwargs):
        """ QStringListModel.insertRows(int, int, QModelIndex parent=QModelIndex()) -> bool """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def removeRows(self, p_int, p_int_1, QModelIndex_parent=None, *args, **kwargs):
        """ QStringListModel.removeRows(int, int, QModelIndex parent=QModelIndex()) -> bool """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def rowCount(self, QModelIndex_parent=None, *args, **kwargs):
        """ QStringListModel.rowCount(QModelIndex parent=QModelIndex()) -> int """
        pass

    # real signature unknown; restored from __doc__
    def setData(self, QModelIndex, QVariant, int_role=None):
        """ QStringListModel.setData(QModelIndex, QVariant, int role=Qt.EditRole) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setStringList(self, QStringList):
        """ QStringListModel.setStringList(QStringList) """
        pass

    # real signature unknown; restored from __doc__
    def sort(self, p_int, Qt_SortOrder_order=None):
        """ QStringListModel.sort(int, Qt.SortOrder order=Qt.AscendingOrder) """
        pass

    def stringList(self):  # real signature unknown; restored from __doc__
        """ QStringListModel.stringList() -> QStringList """
        pass

    # real signature unknown; restored from __doc__
    def supportedDropActions(self):
        """ QStringListModel.supportedDropActions() -> Qt.DropActions """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QStyledItemDelegate(QAbstractItemDelegate):

    """ QStyledItemDelegate(QObject parent=None) """
    # real signature unknown; restored from __doc__

    def createEditor(self, QWidget, QStyleOptionViewItem, QModelIndex):
        """ QStyledItemDelegate.createEditor(QWidget, QStyleOptionViewItem, QModelIndex) -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def displayText(self, QVariant, QLocale):
        """ QStyledItemDelegate.displayText(QVariant, QLocale) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def editorEvent(self, QEvent, QAbstractItemModel, QStyleOptionViewItem, QModelIndex):
        """ QStyledItemDelegate.editorEvent(QEvent, QAbstractItemModel, QStyleOptionViewItem, QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QStyledItemDelegate.eventFilter(QObject, QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionViewItem, QModelIndex):
        """ QStyledItemDelegate.initStyleOption(QStyleOptionViewItem, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def itemEditorFactory(self):
        """ QStyledItemDelegate.itemEditorFactory() -> QItemEditorFactory """
        return QItemEditorFactory

    # real signature unknown; restored from __doc__
    def paint(self, QPainter, QStyleOptionViewItem, QModelIndex):
        """ QStyledItemDelegate.paint(QPainter, QStyleOptionViewItem, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def setEditorData(self, QWidget, QModelIndex):
        """ QStyledItemDelegate.setEditorData(QWidget, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def setItemEditorFactory(self, QItemEditorFactory):
        """ QStyledItemDelegate.setItemEditorFactory(QItemEditorFactory) """
        pass

    # real signature unknown; restored from __doc__
    def setModelData(self, QWidget, QAbstractItemModel, QModelIndex):
        """ QStyledItemDelegate.setModelData(QWidget, QAbstractItemModel, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def sizeHint(self, QStyleOptionViewItem, QModelIndex):
        """ QStyledItemDelegate.sizeHint(QStyleOptionViewItem, QModelIndex) -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def updateEditorGeometry(self, QWidget, QStyleOptionViewItem, QModelIndex):
        """ QStyledItemDelegate.updateEditorGeometry(QWidget, QStyleOptionViewItem, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QStyleFactory():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QStyleFactory()
    QStyleFactory(QStyleFactory)
    """

    def create(self, QString):  # real signature unknown; restored from __doc__
        """ QStyleFactory.create(QString) -> QStyle """
        return QStyle

    def keys(self):  # real signature unknown; restored from __doc__
        """ QStyleFactory.keys() -> QStringList """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleFactory=None):
        pass

    __weakref__ = property(lambda self: object())  # default


class QStyleHintReturn():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QStyleHintReturn(int version=QStyleOption.Version, int type=QStyleHintReturn.SH_Default)
    QStyleHintReturn(QStyleHintReturn)
    """

    def HintReturnType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    __weakref__ = property(lambda self: object())  # default

    SH_Default = 61440
    SH_Mask = 61441
    SH_Variant = 61442
    Type = 61440
    type = None  # (!) real value is ''
    version = None  # (!) real value is ''
    Version = 1


class QStyleHintReturnMask(QStyleHintReturn):

    """
    QStyleHintReturnMask()
    QStyleHintReturnMask(QStyleHintReturnMask)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleHintReturnMask=None):
        pass

    region = None  # (!) real value is ''
    Type = 61441
    Version = 1


class QStyleHintReturnVariant(QStyleHintReturn):

    """
    QStyleHintReturnVariant()
    QStyleHintReturnVariant(QStyleHintReturnVariant)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleHintReturnVariant=None):
        pass

    Type = 61442
    variant = None  # (!) real value is ''
    Version = 1


class QStyleOption():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QStyleOption(int version=QStyleOption.Version, int type=QStyleOption.SO_Default)
    QStyleOption(QStyleOption)
    """

    def init(self, QWidget):  # real signature unknown; restored from __doc__
        """ QStyleOption.init(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def initFrom(self, QWidget):
        """ QStyleOption.initFrom(QWidget) """
        pass

    def OptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    __weakref__ = property(lambda self: object())  # default

    direction = None  # (!) real value is ''
    fontMetrics = None  # (!) real value is ''
    palette = None  # (!) real value is ''
    rect = None  # (!) real value is ''
    SO_Button = 2
    SO_ComboBox = 983044
    SO_Complex = 983040
    SO_ComplexCustomBase = 251658240
    SO_CustomBase = 3840
    SO_Default = 0
    SO_DockWidget = 10
    SO_FocusRect = 1
    SO_Frame = 5
    SO_GraphicsItem = 17
    SO_GroupBox = 983047
    SO_Header = 8
    SO_MenuItem = 4
    SO_ProgressBar = 6
    SO_Q3DockWindow = 9
    SO_Q3ListView = 983045
    SO_Q3ListViewItem = 11
    SO_RubberBand = 15
    SO_SizeGrip = 983048
    SO_Slider = 983041
    SO_SpinBox = 983042
    SO_Tab = 3
    SO_TabBarBase = 14
    SO_TabWidgetFrame = 13
    SO_TitleBar = 983046
    SO_ToolBar = 16
    SO_ToolBox = 7
    SO_ToolButton = 983043
    SO_ViewItem = 12
    state = None  # (!) real value is ''
    Type = 0
    type = None  # (!) real value is ''
    Version = 1
    version = None  # (!) real value is ''


class QStyleOptionButton(QStyleOption):

    """
    QStyleOptionButton()
    QStyleOptionButton(QStyleOptionButton)
    """

    def ButtonFeature(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def ButtonFeatures(self, *__args):
        """
        QStyleOptionButton.ButtonFeatures(QStyleOptionButton.ButtonFeatures)
        QStyleOptionButton.ButtonFeatures(int)
        QStyleOptionButton.ButtonFeatures()
        """
        pass

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionButton=None):
        pass

    AutoDefaultButton = 8
    CommandLinkButton = 16
    DefaultButton = 4
    features = None  # (!) real value is ''
    Flat = 1
    HasMenu = 2
    icon = None  # (!) real value is ''
    iconSize = None  # (!) real value is ''
    None = 0
    text = None  # (!) real value is ''
    Type = 2
    Version = 1


class QStyleOptionComplex(QStyleOption):

    """
    QStyleOptionComplex(int version=QStyleOptionComplex.Version, int type=QStyleOption.SO_Complex)
    QStyleOptionComplex(QStyleOptionComplex)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    activeSubControls = None  # (!) real value is ''
    subControls = None  # (!) real value is ''
    Type = 983040
    Version = 1


class QStyleOptionComboBox(QStyleOptionComplex):

    """
    QStyleOptionComboBox()
    QStyleOptionComboBox(QStyleOptionComboBox)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionComboBox=None):
        pass

    currentIcon = None  # (!) real value is ''
    currentText = None  # (!) real value is ''
    editable = None  # (!) real value is ''
    frame = None  # (!) real value is ''
    iconSize = None  # (!) real value is ''
    popupRect = None  # (!) real value is ''
    Type = 983044
    Version = 1


class QStyleOptionDockWidget(QStyleOption):

    """
    QStyleOptionDockWidget()
    QStyleOptionDockWidget(QStyleOptionDockWidget)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionDockWidget=None):
        pass

    closable = None  # (!) real value is ''
    floatable = None  # (!) real value is ''
    movable = None  # (!) real value is ''
    title = None  # (!) real value is ''
    Type = 10
    Version = 1


class QStyleOptionDockWidgetV2(QStyleOptionDockWidget):

    """
    QStyleOptionDockWidgetV2()
    QStyleOptionDockWidgetV2(QStyleOptionDockWidgetV2)
    QStyleOptionDockWidgetV2(QStyleOptionDockWidget)
    """

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    Version = 2
    verticalTitleBar = None  # (!) real value is ''


class QStyleOptionFocusRect(QStyleOption):

    """
    QStyleOptionFocusRect()
    QStyleOptionFocusRect(QStyleOptionFocusRect)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionFocusRect=None):
        pass

    backgroundColor = None  # (!) real value is ''
    Type = 1
    Version = 1


class QStyleOptionFrame(QStyleOption):

    """
    QStyleOptionFrame()
    QStyleOptionFrame(QStyleOptionFrame)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionFrame=None):
        pass

    lineWidth = None  # (!) real value is ''
    midLineWidth = None  # (!) real value is ''
    Type = 5
    Version = 1


class QStyleOptionFrameV2(QStyleOptionFrame):

    """
    QStyleOptionFrameV2()
    QStyleOptionFrameV2(QStyleOptionFrameV2)
    QStyleOptionFrameV2(QStyleOptionFrame)
    """

    def FrameFeature(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def FrameFeatures(self, *__args):
        """
        QStyleOptionFrameV2.FrameFeatures(QStyleOptionFrameV2.FrameFeatures)
        QStyleOptionFrameV2.FrameFeatures(int)
        QStyleOptionFrameV2.FrameFeatures()
        """
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    features = None  # (!) real value is ''
    Flat = 1
    None = 0
    Version = 2


class QStyleOptionFrameV3(QStyleOptionFrameV2):

    """
    QStyleOptionFrameV3()
    QStyleOptionFrameV3(QStyleOptionFrameV3)
    QStyleOptionFrameV3(QStyleOptionFrame)
    """

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    frameShape = None  # (!) real value is ''
    unused = None  # (!) real value is ''
    Version = 3


class QStyleOptionGraphicsItem(QStyleOption):

    """
    QStyleOptionGraphicsItem()
    QStyleOptionGraphicsItem(QStyleOptionGraphicsItem)
    """
    # real signature unknown; restored from __doc__

    def levelOfDetailFromTransform(self, QTransform):
        """ QStyleOptionGraphicsItem.levelOfDetailFromTransform(QTransform) -> float """
        return 0.0

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionGraphicsItem=None):
        pass

    exposedRect = None  # (!) real value is ''
    levelOfDetail = None  # (!) real value is ''
    matrix = None  # (!) real value is ''
    Type = 17
    Version = 1


class QStyleOptionGroupBox(QStyleOptionComplex):

    """
    QStyleOptionGroupBox()
    QStyleOptionGroupBox(QStyleOptionGroupBox)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionGroupBox=None):
        pass

    features = None  # (!) real value is ''
    lineWidth = None  # (!) real value is ''
    midLineWidth = None  # (!) real value is ''
    text = None  # (!) real value is ''
    textAlignment = None  # (!) real value is ''
    textColor = None  # (!) real value is ''
    Type = 983047
    Version = 1


class QStyleOptionHeader(QStyleOption):

    """
    QStyleOptionHeader()
    QStyleOptionHeader(QStyleOptionHeader)
    """

    def SectionPosition(self, *args, **kwargs):  # real signature unknown
        pass

    def SelectedPosition(self, *args, **kwargs):  # real signature unknown
        pass

    def SortIndicator(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionHeader=None):
        pass

    Beginning = 0
    End = 2
    icon = None  # (!) real value is ''
    iconAlignment = None  # (!) real value is ''
    Middle = 1
    NextAndPreviousAreSelected = 3
    NextIsSelected = 1
    None = 0
    NotAdjacent = 0
    OnlyOneSection = 3
    orientation = None  # (!) real value is ''
    position = None  # (!) real value is ''
    PreviousIsSelected = 2
    section = None  # (!) real value is ''
    selectedPosition = None  # (!) real value is ''
    SortDown = 2
    sortIndicator = None  # (!) real value is ''
    SortUp = 1
    text = None  # (!) real value is ''
    textAlignment = None  # (!) real value is ''
    Type = 8
    Version = 1


class QStyleOptionMenuItem(QStyleOption):

    """
    QStyleOptionMenuItem()
    QStyleOptionMenuItem(QStyleOptionMenuItem)
    """

    def CheckType(self, *args, **kwargs):  # real signature unknown
        pass

    def MenuItemType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionMenuItem=None):
        pass

    checked = None  # (!) real value is ''
    checkType = None  # (!) real value is ''
    DefaultItem = 1
    EmptyArea = 7
    Exclusive = 1
    font = None  # (!) real value is ''
    icon = None  # (!) real value is ''
    Margin = 6
    maxIconWidth = None  # (!) real value is ''
    menuHasCheckableItems = None  # (!) real value is ''
    menuItemType = None  # (!) real value is ''
    menuRect = None  # (!) real value is ''
    NonExclusive = 2
    Normal = 0
    NotCheckable = 0
    Scroller = 4
    Separator = 2
    SubMenu = 3
    tabWidth = None  # (!) real value is ''
    TearOff = 5
    text = None  # (!) real value is ''
    Type = 4
    Version = 1


class QStyleOptionProgressBar(QStyleOption):

    """
    QStyleOptionProgressBar()
    QStyleOptionProgressBar(QStyleOptionProgressBar)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionProgressBar=None):
        pass

    maximum = None  # (!) real value is ''
    minimum = None  # (!) real value is ''
    progress = None  # (!) real value is ''
    text = None  # (!) real value is ''
    textAlignment = None  # (!) real value is ''
    textVisible = None  # (!) real value is ''
    Type = 6
    Version = 1


class QStyleOptionProgressBarV2(QStyleOptionProgressBar):

    """
    QStyleOptionProgressBarV2()
    QStyleOptionProgressBarV2(QStyleOptionProgressBar)
    QStyleOptionProgressBarV2(QStyleOptionProgressBarV2)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    bottomToTop = None  # (!) real value is ''
    invertedAppearance = None  # (!) real value is ''
    orientation = None  # (!) real value is ''
    Type = 6
    Version = 2


class QStyleOptionRubberBand(QStyleOption):

    """
    QStyleOptionRubberBand()
    QStyleOptionRubberBand(QStyleOptionRubberBand)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionRubberBand=None):
        pass

    opaque = None  # (!) real value is ''
    shape = None  # (!) real value is ''
    Type = 15
    Version = 1


class QStyleOptionSizeGrip(QStyleOptionComplex):

    """
    QStyleOptionSizeGrip()
    QStyleOptionSizeGrip(QStyleOptionSizeGrip)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionSizeGrip=None):
        pass

    corner = None  # (!) real value is ''
    Type = 983048
    Version = 1


class QStyleOptionSlider(QStyleOptionComplex):

    """
    QStyleOptionSlider()
    QStyleOptionSlider(QStyleOptionSlider)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionSlider=None):
        pass

    dialWrapping = None  # (!) real value is ''
    maximum = None  # (!) real value is ''
    minimum = None  # (!) real value is ''
    notchTarget = None  # (!) real value is ''
    orientation = None  # (!) real value is ''
    pageStep = None  # (!) real value is ''
    singleStep = None  # (!) real value is ''
    sliderPosition = None  # (!) real value is ''
    sliderValue = None  # (!) real value is ''
    tickInterval = None  # (!) real value is ''
    tickPosition = None  # (!) real value is ''
    Type = 983041
    upsideDown = None  # (!) real value is ''
    Version = 1


class QStyleOptionSpinBox(QStyleOptionComplex):

    """
    QStyleOptionSpinBox()
    QStyleOptionSpinBox(QStyleOptionSpinBox)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionSpinBox=None):
        pass

    buttonSymbols = None  # (!) real value is ''
    frame = None  # (!) real value is ''
    stepEnabled = None  # (!) real value is ''
    Type = 983042
    Version = 1


class QStyleOptionTab(QStyleOption):

    """
    QStyleOptionTab()
    QStyleOptionTab(QStyleOptionTab)
    """

    def CornerWidget(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def CornerWidgets(self, *__args):
        """
        QStyleOptionTab.CornerWidgets(QStyleOptionTab.CornerWidgets)
        QStyleOptionTab.CornerWidgets(int)
        QStyleOptionTab.CornerWidgets()
        """
        pass

    def SelectedPosition(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    def TabPosition(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionTab=None):
        pass

    Beginning = 0
    cornerWidgets = None  # (!) real value is ''
    End = 2
    icon = None  # (!) real value is ''
    LeftCornerWidget = 1
    Middle = 1
    NextIsSelected = 1
    NoCornerWidgets = 0
    NotAdjacent = 0
    OnlyOneTab = 3
    position = None  # (!) real value is ''
    PreviousIsSelected = 2
    RightCornerWidget = 2
    row = None  # (!) real value is ''
    selectedPosition = None  # (!) real value is ''
    shape = None  # (!) real value is ''
    text = None  # (!) real value is ''
    Type = 3
    Version = 1


class QStyleOptionTabBarBase(QStyleOption):

    """
    QStyleOptionTabBarBase()
    QStyleOptionTabBarBase(QStyleOptionTabBarBase)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionTabBarBase=None):
        pass

    selectedTabRect = None  # (!) real value is ''
    shape = None  # (!) real value is ''
    tabBarRect = None  # (!) real value is ''
    Type = 14
    Version = 1


class QStyleOptionTabBarBaseV2(QStyleOptionTabBarBase):

    """
    QStyleOptionTabBarBaseV2()
    QStyleOptionTabBarBaseV2(QStyleOptionTabBarBaseV2)
    QStyleOptionTabBarBaseV2(QStyleOptionTabBarBase)
    """

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    documentMode = None  # (!) real value is ''
    Version = 2


class QStyleOptionTabV2(QStyleOptionTab):

    """
    QStyleOptionTabV2()
    QStyleOptionTabV2(QStyleOptionTabV2)
    QStyleOptionTabV2(QStyleOptionTab)
    """

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    iconSize = None  # (!) real value is ''
    Version = 2


class QStyleOptionTabV3(QStyleOptionTabV2):

    """
    QStyleOptionTabV3()
    QStyleOptionTabV3(QStyleOptionTabV3)
    QStyleOptionTabV3(QStyleOptionTabV2)
    QStyleOptionTabV3(QStyleOptionTab)
    """

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    documentMode = None  # (!) real value is ''
    leftButtonSize = None  # (!) real value is ''
    rightButtonSize = None  # (!) real value is ''
    Version = 3


class QStyleOptionTabWidgetFrame(QStyleOption):

    """
    QStyleOptionTabWidgetFrame()
    QStyleOptionTabWidgetFrame(QStyleOptionTabWidgetFrame)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionTabWidgetFrame=None):
        pass

    leftCornerWidgetSize = None  # (!) real value is ''
    lineWidth = None  # (!) real value is ''
    midLineWidth = None  # (!) real value is ''
    rightCornerWidgetSize = None  # (!) real value is ''
    shape = None  # (!) real value is ''
    tabBarSize = None  # (!) real value is ''
    Type = 13
    Version = 1


class QStyleOptionTabWidgetFrameV2(QStyleOptionTabWidgetFrame):

    """
    QStyleOptionTabWidgetFrameV2()
    QStyleOptionTabWidgetFrameV2(QStyleOptionTabWidgetFrameV2)
    QStyleOptionTabWidgetFrameV2(QStyleOptionTabWidgetFrame)
    """

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    selectedTabRect = None  # (!) real value is ''
    tabBarRect = None  # (!) real value is ''
    Version = 2


class QStyleOptionTitleBar(QStyleOptionComplex):

    """
    QStyleOptionTitleBar()
    QStyleOptionTitleBar(QStyleOptionTitleBar)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionTitleBar=None):
        pass

    icon = None  # (!) real value is ''
    text = None  # (!) real value is ''
    titleBarFlags = None  # (!) real value is ''
    titleBarState = None  # (!) real value is ''
    Type = 983046
    Version = 1


class QStyleOptionToolBar(QStyleOption):

    """
    QStyleOptionToolBar()
    QStyleOptionToolBar(QStyleOptionToolBar)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    def ToolBarFeature(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def ToolBarFeatures(self, *__args):
        """
        QStyleOptionToolBar.ToolBarFeatures(QStyleOptionToolBar.ToolBarFeatures)
        QStyleOptionToolBar.ToolBarFeatures(int)
        QStyleOptionToolBar.ToolBarFeatures()
        """
        pass

    def ToolBarPosition(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionToolBar=None):
        pass

    Beginning = 0
    End = 2
    features = None  # (!) real value is ''
    lineWidth = None  # (!) real value is ''
    Middle = 1
    midLineWidth = None  # (!) real value is ''
    Movable = 1
    None = 0
    OnlyOne = 3
    positionOfLine = None  # (!) real value is ''
    positionWithinLine = None  # (!) real value is ''
    toolBarArea = None  # (!) real value is ''
    Type = 16
    Version = 1


class QStyleOptionToolBox(QStyleOption):

    """
    QStyleOptionToolBox()
    QStyleOptionToolBox(QStyleOptionToolBox)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionToolBox=None):
        pass

    icon = None  # (!) real value is ''
    text = None  # (!) real value is ''
    Type = 7
    Version = 1


class QStyleOptionToolBoxV2(QStyleOptionToolBox):

    """
    QStyleOptionToolBoxV2()
    QStyleOptionToolBoxV2(QStyleOptionToolBoxV2)
    QStyleOptionToolBoxV2(QStyleOptionToolBox)
    """

    def SelectedPosition(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    def TabPosition(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    Beginning = 0
    End = 2
    Middle = 1
    NextIsSelected = 1
    NotAdjacent = 0
    OnlyOneTab = 3
    position = None  # (!) real value is ''
    PreviousIsSelected = 2
    selectedPosition = None  # (!) real value is ''
    Version = 2


class QStyleOptionToolButton(QStyleOptionComplex):

    """
    QStyleOptionToolButton()
    QStyleOptionToolButton(QStyleOptionToolButton)
    """

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    def ToolButtonFeature(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def ToolButtonFeatures(self, *__args):
        """
        QStyleOptionToolButton.ToolButtonFeatures(QStyleOptionToolButton.ToolButtonFeatures)
        QStyleOptionToolButton.ToolButtonFeatures(int)
        QStyleOptionToolButton.ToolButtonFeatures()
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionToolButton=None):
        pass

    Arrow = 1
    arrowType = None  # (!) real value is ''
    features = None  # (!) real value is ''
    font = None  # (!) real value is ''
    HasMenu = 16
    icon = None  # (!) real value is ''
    iconSize = None  # (!) real value is ''
    Menu = 4
    MenuButtonPopup = 4
    None = 0
    PopupDelay = 8
    pos = None  # (!) real value is ''
    text = None  # (!) real value is ''
    toolButtonStyle = None  # (!) real value is ''
    Type = 983043
    Version = 1


class QStyleOptionViewItem(QStyleOption):

    """
    QStyleOptionViewItem()
    QStyleOptionViewItem(QStyleOptionViewItem)
    """

    def Position(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionType(self, *args, **kwargs):  # real signature unknown
        pass

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QStyleOptionViewItem=None):
        pass

    Bottom = 3
    decorationAlignment = None  # (!) real value is ''
    decorationPosition = None  # (!) real value is ''
    decorationSize = None  # (!) real value is ''
    displayAlignment = None  # (!) real value is ''
    font = None  # (!) real value is ''
    Left = 0
    Right = 1
    showDecorationSelected = None  # (!) real value is ''
    textElideMode = None  # (!) real value is ''
    Top = 2
    Type = 12
    Version = 1


class QStyleOptionViewItemV2(QStyleOptionViewItem):

    """
    QStyleOptionViewItemV2()
    QStyleOptionViewItemV2(QStyleOptionViewItemV2)
    QStyleOptionViewItemV2(QStyleOptionViewItem)
    """

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    def ViewItemFeature(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def ViewItemFeatures(self, *__args):
        """
        QStyleOptionViewItemV2.ViewItemFeatures(QStyleOptionViewItemV2.ViewItemFeatures)
        QStyleOptionViewItemV2.ViewItemFeatures(int)
        QStyleOptionViewItemV2.ViewItemFeatures()
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    Alternate = 2
    features = None  # (!) real value is ''
    HasCheckIndicator = 4
    HasDecoration = 16
    HasDisplay = 8
    None = 0
    Version = 2
    WrapText = 1


class QStyleOptionViewItemV3(QStyleOptionViewItemV2):

    """
    QStyleOptionViewItemV3()
    QStyleOptionViewItemV3(QStyleOptionViewItemV3)
    QStyleOptionViewItemV3(QStyleOptionViewItem)
    """

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    locale = None  # (!) real value is ''
    Version = 3
    widget = None  # (!) real value is ''


class QStyleOptionViewItemV4(QStyleOptionViewItemV3):

    """
    QStyleOptionViewItemV4()
    QStyleOptionViewItemV4(QStyleOptionViewItemV4)
    QStyleOptionViewItemV4(QStyleOptionViewItem)
    """

    def StyleOptionVersion(self, *args, **kwargs):  # real signature unknown
        pass

    def ViewItemPosition(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    backgroundBrush = None  # (!) real value is ''
    Beginning = 1
    checkState = None  # (!) real value is ''
    End = 3
    icon = None  # (!) real value is ''
    index = None  # (!) real value is ''
    Invalid = 0
    Middle = 2
    OnlyOne = 4
    text = None  # (!) real value is ''
    Version = 4
    viewItemPosition = None  # (!) real value is ''


class QStylePainter(QPainter):

    """
    QStylePainter()
    QStylePainter(QWidget)
    QStylePainter(QPaintDevice, QWidget)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def begin(self, *__args):
        """
        QStylePainter.begin(QWidget) -> bool
        QStylePainter.begin(QPaintDevice, QWidget) -> bool
        """
        return False

    # real signature unknown; restored from __doc__
    def drawComplexControl(self, QStyle_ComplexControl, QStyleOptionComplex):
        """ QStylePainter.drawComplexControl(QStyle.ComplexControl, QStyleOptionComplex) """
        pass

    # real signature unknown; restored from __doc__
    def drawControl(self, QStyle_ControlElement, QStyleOption):
        """ QStylePainter.drawControl(QStyle.ControlElement, QStyleOption) """
        pass

    # real signature unknown; restored from __doc__
    def drawItemPixmap(self, QRect, p_int, QPixmap):
        """ QStylePainter.drawItemPixmap(QRect, int, QPixmap) """
        pass

    # real signature unknown; restored from __doc__
    def drawItemText(self, QRect, p_int, QPalette, bool, QString, QPalette_ColorRole_textRole=None):
        """ QStylePainter.drawItemText(QRect, int, QPalette, bool, QString, QPalette.ColorRole textRole=QPalette.NoRole) """
        pass

    # real signature unknown; restored from __doc__
    def drawPrimitive(self, QStyle_PrimitiveElement, QStyleOption):
        """ QStylePainter.drawPrimitive(QStyle.PrimitiveElement, QStyleOption) """
        pass

    def style(self):  # real signature unknown; restored from __doc__
        """ QStylePainter.style() -> QStyle """
        return QStyle

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QSwipeGesture(QGesture):

    """ QSwipeGesture(QObject parent=None) """
    # real signature unknown; restored from __doc__

    def horizontalDirection(self):
        """ QSwipeGesture.horizontalDirection() -> QSwipeGesture.SwipeDirection """
        pass

    # real signature unknown; restored from __doc__
    def setSwipeAngle(self, p_float):
        """ QSwipeGesture.setSwipeAngle(float) """
        pass

    def swipeAngle(self):  # real signature unknown; restored from __doc__
        """ QSwipeGesture.swipeAngle() -> float """
        return 0.0

    def SwipeDirection(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def verticalDirection(self):
        """ QSwipeGesture.verticalDirection() -> QSwipeGesture.SwipeDirection """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass

    Down = 4
    Left = 1
    NoDirection = 0
    Right = 2
    Up = 3


class QSyntaxHighlighter(__PyQt4_QtCore.QObject):

    """
    QSyntaxHighlighter(QTextEdit)
    QSyntaxHighlighter(QTextDocument)
    QSyntaxHighlighter(QObject)
    """

    def currentBlock(self):  # real signature unknown; restored from __doc__
        """ QSyntaxHighlighter.currentBlock() -> QTextBlock """
        return QTextBlock

    # real signature unknown; restored from __doc__
    def currentBlockState(self):
        """ QSyntaxHighlighter.currentBlockState() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def currentBlockUserData(self):
        """ QSyntaxHighlighter.currentBlockUserData() -> QTextBlockUserData """
        return QTextBlockUserData

    def document(self):  # real signature unknown; restored from __doc__
        """ QSyntaxHighlighter.document() -> QTextDocument """
        return QTextDocument

    def format(self, p_int):  # real signature unknown; restored from __doc__
        """ QSyntaxHighlighter.format(int) -> QTextCharFormat """
        return QTextCharFormat

    # real signature unknown; restored from __doc__
    def highlightBlock(self, QString):
        """ QSyntaxHighlighter.highlightBlock(QString) """
        pass

    # real signature unknown; restored from __doc__
    def previousBlockState(self):
        """ QSyntaxHighlighter.previousBlockState() -> int """
        return 0

    def rehighlight(self):  # real signature unknown; restored from __doc__
        """ QSyntaxHighlighter.rehighlight() """
        pass

    # real signature unknown; restored from __doc__
    def rehighlightBlock(self, QTextBlock):
        """ QSyntaxHighlighter.rehighlightBlock(QTextBlock) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentBlockState(self, p_int):
        """ QSyntaxHighlighter.setCurrentBlockState(int) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentBlockUserData(self, QTextBlockUserData):
        """ QSyntaxHighlighter.setCurrentBlockUserData(QTextBlockUserData) """
        pass

    # real signature unknown; restored from __doc__
    def setDocument(self, QTextDocument):
        """ QSyntaxHighlighter.setDocument(QTextDocument) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setFormat(self, p_int, p_int_1, *__args):
        """
        QSyntaxHighlighter.setFormat(int, int, QTextCharFormat)
        QSyntaxHighlighter.setFormat(int, int, QColor)
        QSyntaxHighlighter.setFormat(int, int, QFont)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QSystemTrayIcon(__PyQt4_QtCore.QObject):

    """
    QSystemTrayIcon(QObject parent=None)
    QSystemTrayIcon(QIcon, QObject parent=None)
    """

    def activated(self, *args, **kwargs):  # real signature unknown
        """ QSystemTrayIcon.activated[QSystemTrayIcon.ActivationReason] [signal] """
        pass

    def ActivationReason(self, *args, **kwargs):  # real signature unknown
        pass

    def contextMenu(self):  # real signature unknown; restored from __doc__
        """ QSystemTrayIcon.contextMenu() -> QMenu """
        return QMenu

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QSystemTrayIcon.event(QEvent) -> bool """
        return False

    def geometry(self):  # real signature unknown; restored from __doc__
        """ QSystemTrayIcon.geometry() -> QRect """
        pass

    def hide(self):  # real signature unknown; restored from __doc__
        """ QSystemTrayIcon.hide() """
        pass

    def icon(self):  # real signature unknown; restored from __doc__
        """ QSystemTrayIcon.icon() -> QIcon """
        return QIcon

    # real signature unknown; restored from __doc__
    def isSystemTrayAvailable(self):
        """ QSystemTrayIcon.isSystemTrayAvailable() -> bool """
        return False

    def isVisible(self):  # real signature unknown; restored from __doc__
        """ QSystemTrayIcon.isVisible() -> bool """
        return False

    def messageClicked(self, *args, **kwargs):  # real signature unknown
        """ QSystemTrayIcon.messageClicked[] [signal] """
        pass

    def MessageIcon(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def setContextMenu(self, QMenu):
        """ QSystemTrayIcon.setContextMenu(QMenu) """
        pass

    def setIcon(self, QIcon):  # real signature unknown; restored from __doc__
        """ QSystemTrayIcon.setIcon(QIcon) """
        pass

    # real signature unknown; restored from __doc__
    def setToolTip(self, QString):
        """ QSystemTrayIcon.setToolTip(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QSystemTrayIcon.setVisible(bool) """
        pass

    def show(self):  # real signature unknown; restored from __doc__
        """ QSystemTrayIcon.show() """
        pass

    # real signature unknown; restored from __doc__
    def showMessage(self, QString, QString_1, QSystemTrayIcon_MessageIcon_icon=None, int_msecs=10000):
        """ QSystemTrayIcon.showMessage(QString, QString, QSystemTrayIcon.MessageIcon icon=QSystemTrayIcon.Information, int msecs=10000) """
        pass

    # real signature unknown; restored from __doc__
    def supportsMessages(self):
        """ QSystemTrayIcon.supportsMessages() -> bool """
        return False

    def toolTip(self):  # real signature unknown; restored from __doc__
        """ QSystemTrayIcon.toolTip() -> QString """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    Context = 1
    Critical = 3
    DoubleClick = 2
    Information = 1
    MiddleClick = 4
    NoIcon = 0
    Trigger = 3
    Unknown = 0
    Warning = 2


class QTabBar(QWidget):

    """ QTabBar(QWidget parent=None) """
    # real signature unknown; restored from __doc__ with multiple overloads

    def addTab(self, *__args):
        """
        QTabBar.addTab(QString) -> int
        QTabBar.addTab(QIcon, QString) -> int
        """
        return 0

    def ButtonPosition(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QTabBar.changeEvent(QEvent) """
        pass

    def count(self):  # real signature unknown; restored from __doc__
        """ QTabBar.count() -> int """
        return 0

    def currentChanged(self, *args, **kwargs):  # real signature unknown
        """ QTabBar.currentChanged[int] [signal] """
        pass

    def currentIndex(self):  # real signature unknown; restored from __doc__
        """ QTabBar.currentIndex() -> int """
        return 0

    def documentMode(self):  # real signature unknown; restored from __doc__
        """ QTabBar.documentMode() -> bool """
        return False

    def drawBase(self):  # real signature unknown; restored from __doc__
        """ QTabBar.drawBase() -> bool """
        return False

    def elideMode(self):  # real signature unknown; restored from __doc__
        """ QTabBar.elideMode() -> Qt.TextElideMode """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QTabBar.event(QEvent) -> bool """
        return False

    def expanding(self):  # real signature unknown; restored from __doc__
        """ QTabBar.expanding() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def hideEvent(self, QHideEvent):
        """ QTabBar.hideEvent(QHideEvent) """
        pass

    def iconSize(self):  # real signature unknown; restored from __doc__
        """ QTabBar.iconSize() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionTab, p_int):
        """ QTabBar.initStyleOption(QStyleOptionTab, int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def insertTab(self, p_int, *__args):
        """
        QTabBar.insertTab(int, QString) -> int
        QTabBar.insertTab(int, QIcon, QString) -> int
        """
        return 0

    def isMovable(self):  # real signature unknown; restored from __doc__
        """ QTabBar.isMovable() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isTabEnabled(self, p_int):
        """ QTabBar.isTabEnabled(int) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QTabBar.keyPressEvent(QKeyEvent) """
        pass

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QTabBar.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QTabBar.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QTabBar.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QTabBar.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def moveTab(self, p_int, p_int_1):
        """ QTabBar.moveTab(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QTabBar.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def removeTab(self, p_int):
        """ QTabBar.removeTab(int) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QTabBar.resizeEvent(QResizeEvent) """
        pass

    def SelectionBehavior(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def selectionBehaviorOnRemove(self):
        """ QTabBar.selectionBehaviorOnRemove() -> QTabBar.SelectionBehavior """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentIndex(self, p_int):
        """ QTabBar.setCurrentIndex(int) """
        pass

    # real signature unknown; restored from __doc__
    def setDocumentMode(self, bool):
        """ QTabBar.setDocumentMode(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setDrawBase(self, bool):
        """ QTabBar.setDrawBase(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setElideMode(self, Qt_TextElideMode):
        """ QTabBar.setElideMode(Qt.TextElideMode) """
        pass

    # real signature unknown; restored from __doc__
    def setExpanding(self, bool):
        """ QTabBar.setExpanding(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setIconSize(self, QSize):
        """ QTabBar.setIconSize(QSize) """
        pass

    # real signature unknown; restored from __doc__
    def setMovable(self, bool):
        """ QTabBar.setMovable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSelectionBehaviorOnRemove(self, QTabBar_SelectionBehavior):
        """ QTabBar.setSelectionBehaviorOnRemove(QTabBar.SelectionBehavior) """
        pass

    # real signature unknown; restored from __doc__
    def setShape(self, QTabBar_Shape):
        """ QTabBar.setShape(QTabBar.Shape) """
        pass

    # real signature unknown; restored from __doc__
    def setTabButton(self, p_int, QTabBar_ButtonPosition, QWidget):
        """ QTabBar.setTabButton(int, QTabBar.ButtonPosition, QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setTabData(self, p_int, QVariant):
        """ QTabBar.setTabData(int, QVariant) """
        pass

    # real signature unknown; restored from __doc__
    def setTabEnabled(self, p_int, bool):
        """ QTabBar.setTabEnabled(int, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setTabIcon(self, p_int, QIcon):
        """ QTabBar.setTabIcon(int, QIcon) """
        pass

    # real signature unknown; restored from __doc__
    def setTabsClosable(self, bool):
        """ QTabBar.setTabsClosable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setTabText(self, p_int, QString):
        """ QTabBar.setTabText(int, QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTabTextColor(self, p_int, QColor):
        """ QTabBar.setTabTextColor(int, QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setTabToolTip(self, p_int, QString):
        """ QTabBar.setTabToolTip(int, QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTabWhatsThis(self, p_int, QString):
        """ QTabBar.setTabWhatsThis(int, QString) """
        pass

    # real signature unknown; restored from __doc__
    def setUsesScrollButtons(self, bool):
        """ QTabBar.setUsesScrollButtons(bool) """
        pass

    def shape(self):  # real signature unknown; restored from __doc__
        """ QTabBar.shape() -> QTabBar.Shape """
        pass

    def Shape(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QTabBar.showEvent(QShowEvent) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QTabBar.sizeHint() -> QSize """
        pass

    def tabAt(self, QPoint):  # real signature unknown; restored from __doc__
        """ QTabBar.tabAt(QPoint) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def tabButton(self, p_int, QTabBar_ButtonPosition):
        """ QTabBar.tabButton(int, QTabBar.ButtonPosition) -> QWidget """
        return QWidget

    def tabCloseRequested(self, *args, **kwargs):  # real signature unknown
        """ QTabBar.tabCloseRequested[int] [signal] """
        pass

    def tabData(self, p_int):  # real signature unknown; restored from __doc__
        """ QTabBar.tabData(int) -> QVariant """
        pass

    def tabIcon(self, p_int):  # real signature unknown; restored from __doc__
        """ QTabBar.tabIcon(int) -> QIcon """
        return QIcon

    # real signature unknown; restored from __doc__
    def tabInserted(self, p_int):
        """ QTabBar.tabInserted(int) """
        pass

    def tabLayoutChange(self):  # real signature unknown; restored from __doc__
        """ QTabBar.tabLayoutChange() """
        pass

    def tabMoved(self, *args, **kwargs):  # real signature unknown
        """ QTabBar.tabMoved[int, int] [signal] """
        pass

    def tabRect(self, p_int):  # real signature unknown; restored from __doc__
        """ QTabBar.tabRect(int) -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def tabRemoved(self, p_int):
        """ QTabBar.tabRemoved(int) """
        pass

    def tabsClosable(self):  # real signature unknown; restored from __doc__
        """ QTabBar.tabsClosable() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def tabSizeHint(self, p_int):
        """ QTabBar.tabSizeHint(int) -> QSize """
        pass

    def tabText(self, p_int):  # real signature unknown; restored from __doc__
        """ QTabBar.tabText(int) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def tabTextColor(self, p_int):
        """ QTabBar.tabTextColor(int) -> QColor """
        return QColor

    # real signature unknown; restored from __doc__
    def tabToolTip(self, p_int):
        """ QTabBar.tabToolTip(int) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def tabWhatsThis(self, p_int):
        """ QTabBar.tabWhatsThis(int) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def usesScrollButtons(self):
        """ QTabBar.usesScrollButtons() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def wheelEvent(self, QWheelEvent):
        """ QTabBar.wheelEvent(QWheelEvent) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass

    LeftSide = 0
    RightSide = 1
    RoundedEast = 3
    RoundedNorth = 0
    RoundedSouth = 1
    RoundedWest = 2
    SelectLeftTab = 0
    SelectPreviousTab = 2
    SelectRightTab = 1
    TriangularEast = 7
    TriangularNorth = 4
    TriangularSouth = 5
    TriangularWest = 6


class QTabletEvent(QInputEvent):

    """
    QTabletEvent(QEvent.Type, QPoint, QPoint, QPointF, int, int, float, int, int, float, float, int, Qt.KeyboardModifiers, int)
    QTabletEvent(QTabletEvent)
    """

    def device(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.device() -> QTabletEvent.TabletDevice """
        pass

    def globalPos(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.globalPos() -> QPoint """
        pass

    def globalX(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.globalX() -> int """
        return 0

    def globalY(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.globalY() -> int """
        return 0

    def hiResGlobalPos(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.hiResGlobalPos() -> QPointF """
        pass

    def hiResGlobalX(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.hiResGlobalX() -> float """
        return 0.0

    def hiResGlobalY(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.hiResGlobalY() -> float """
        return 0.0

    def PointerType(self, *args, **kwargs):  # real signature unknown
        pass

    def pointerType(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.pointerType() -> QTabletEvent.PointerType """
        pass

    def pos(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.pos() -> QPoint """
        pass

    def pressure(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.pressure() -> float """
        return 0.0

    def rotation(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.rotation() -> float """
        return 0.0

    def TabletDevice(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def tangentialPressure(self):
        """ QTabletEvent.tangentialPressure() -> float """
        return 0.0

    def uniqueId(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.uniqueId() -> int """
        return 0

    def x(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.x() -> int """
        return 0

    def xTilt(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.xTilt() -> int """
        return 0

    def y(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.y() -> int """
        return 0

    def yTilt(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.yTilt() -> int """
        return 0

    def z(self):  # real signature unknown; restored from __doc__
        """ QTabletEvent.z() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    Airbrush = 3
    Cursor = 2
    Eraser = 3
    FourDMouse = 4
    NoDevice = 0
    Pen = 1
    Puck = 1
    RotationStylus = 6
    Stylus = 2
    UnknownPointer = 0
    XFreeEraser = 5


class QTableView(QAbstractItemView):

    """ QTableView(QWidget parent=None) """

    def clearSpans(self):  # real signature unknown; restored from __doc__
        """ QTableView.clearSpans() """
        pass

    def columnAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QTableView.columnAt(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def columnCountChanged(self, p_int, p_int_1):
        """ QTableView.columnCountChanged(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def columnMoved(self, p_int, p_int_1, p_int_2):
        """ QTableView.columnMoved(int, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def columnResized(self, p_int, p_int_1, p_int_2):
        """ QTableView.columnResized(int, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def columnSpan(self, p_int, p_int_1):
        """ QTableView.columnSpan(int, int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def columnViewportPosition(self, p_int):
        """ QTableView.columnViewportPosition(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def columnWidth(self, p_int):
        """ QTableView.columnWidth(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def currentChanged(self, QModelIndex, QModelIndex_1):
        """ QTableView.currentChanged(QModelIndex, QModelIndex) """
        pass

    def gridStyle(self):  # real signature unknown; restored from __doc__
        """ QTableView.gridStyle() -> Qt.PenStyle """
        pass

    # real signature unknown; restored from __doc__
    def hideColumn(self, p_int):
        """ QTableView.hideColumn(int) """
        pass

    def hideRow(self, p_int):  # real signature unknown; restored from __doc__
        """ QTableView.hideRow(int) """
        pass

    # real signature unknown; restored from __doc__
    def horizontalHeader(self):
        """ QTableView.horizontalHeader() -> QHeaderView """
        return QHeaderView

    # real signature unknown; restored from __doc__
    def horizontalOffset(self):
        """ QTableView.horizontalOffset() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def horizontalScrollbarAction(self, p_int):
        """ QTableView.horizontalScrollbarAction(int) """
        pass

    def indexAt(self, QPoint):  # real signature unknown; restored from __doc__
        """ QTableView.indexAt(QPoint) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def isColumnHidden(self, p_int):
        """ QTableView.isColumnHidden(int) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isCornerButtonEnabled(self):
        """ QTableView.isCornerButtonEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isIndexHidden(self, QModelIndex):
        """ QTableView.isIndexHidden(QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isRowHidden(self, p_int):
        """ QTableView.isRowHidden(int) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isSortingEnabled(self):
        """ QTableView.isSortingEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def moveCursor(self, QAbstractItemView_CursorAction, Qt_KeyboardModifiers):
        """ QTableView.moveCursor(QAbstractItemView.CursorAction, Qt.KeyboardModifiers) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QTableView.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def resizeColumnsToContents(self):
        """ QTableView.resizeColumnsToContents() """
        pass

    # real signature unknown; restored from __doc__
    def resizeColumnToContents(self, p_int):
        """ QTableView.resizeColumnToContents(int) """
        pass

    # real signature unknown; restored from __doc__
    def resizeRowsToContents(self):
        """ QTableView.resizeRowsToContents() """
        pass

    # real signature unknown; restored from __doc__
    def resizeRowToContents(self, p_int):
        """ QTableView.resizeRowToContents(int) """
        pass

    def rowAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QTableView.rowAt(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def rowCountChanged(self, p_int, p_int_1):
        """ QTableView.rowCountChanged(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def rowHeight(self, p_int):
        """ QTableView.rowHeight(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def rowMoved(self, p_int, p_int_1, p_int_2):
        """ QTableView.rowMoved(int, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def rowResized(self, p_int, p_int_1, p_int_2):
        """ QTableView.rowResized(int, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def rowSpan(self, p_int, p_int_1):
        """ QTableView.rowSpan(int, int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def rowViewportPosition(self, p_int):
        """ QTableView.rowViewportPosition(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def scrollContentsBy(self, p_int, p_int_1):
        """ QTableView.scrollContentsBy(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def scrollTo(self, QModelIndex, QAbstractItemView_ScrollHint_hint=None):
        """ QTableView.scrollTo(QModelIndex, QAbstractItemView.ScrollHint hint=QAbstractItemView.EnsureVisible) """
        pass

    # real signature unknown; restored from __doc__
    def selectColumn(self, p_int):
        """ QTableView.selectColumn(int) """
        pass

    def selectedIndexes(self):  # real signature unknown; restored from __doc__
        """ QTableView.selectedIndexes() -> list-of-QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def selectionChanged(self, QItemSelection, QItemSelection_1):
        """ QTableView.selectionChanged(QItemSelection, QItemSelection) """
        pass

    # real signature unknown; restored from __doc__
    def selectRow(self, p_int):
        """ QTableView.selectRow(int) """
        pass

    # real signature unknown; restored from __doc__
    def setColumnHidden(self, p_int, bool):
        """ QTableView.setColumnHidden(int, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setColumnWidth(self, p_int, p_int_1):
        """ QTableView.setColumnWidth(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setCornerButtonEnabled(self, bool):
        """ QTableView.setCornerButtonEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setGridStyle(self, Qt_PenStyle):
        """ QTableView.setGridStyle(Qt.PenStyle) """
        pass

    # real signature unknown; restored from __doc__
    def setHorizontalHeader(self, QHeaderView):
        """ QTableView.setHorizontalHeader(QHeaderView) """
        pass

    # real signature unknown; restored from __doc__
    def setModel(self, QAbstractItemModel):
        """ QTableView.setModel(QAbstractItemModel) """
        pass

    # real signature unknown; restored from __doc__
    def setRootIndex(self, QModelIndex):
        """ QTableView.setRootIndex(QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def setRowHeight(self, p_int, p_int_1):
        """ QTableView.setRowHeight(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setRowHidden(self, p_int, bool):
        """ QTableView.setRowHidden(int, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSelection(self, QRect, QItemSelectionModel_SelectionFlags):
        """ QTableView.setSelection(QRect, QItemSelectionModel.SelectionFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setSelectionModel(self, QItemSelectionModel):
        """ QTableView.setSelectionModel(QItemSelectionModel) """
        pass

    # real signature unknown; restored from __doc__
    def setShowGrid(self, bool):
        """ QTableView.setShowGrid(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSortingEnabled(self, bool):
        """ QTableView.setSortingEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSpan(self, p_int, p_int_1, p_int_2, p_int_3):
        """ QTableView.setSpan(int, int, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalHeader(self, QHeaderView):
        """ QTableView.setVerticalHeader(QHeaderView) """
        pass

    # real signature unknown; restored from __doc__
    def setWordWrap(self, bool):
        """ QTableView.setWordWrap(bool) """
        pass

    # real signature unknown; restored from __doc__
    def showColumn(self, p_int):
        """ QTableView.showColumn(int) """
        pass

    def showGrid(self):  # real signature unknown; restored from __doc__
        """ QTableView.showGrid() -> bool """
        return False

    def showRow(self, p_int):  # real signature unknown; restored from __doc__
        """ QTableView.showRow(int) """
        pass

    # real signature unknown; restored from __doc__
    def sizeHintForColumn(self, p_int):
        """ QTableView.sizeHintForColumn(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def sizeHintForRow(self, p_int):
        """ QTableView.sizeHintForRow(int) -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def sortByColumn(self, p_int, Qt_SortOrder=None):
        """
        QTableView.sortByColumn(int)
        QTableView.sortByColumn(int, Qt.SortOrder)
        """
        pass

    # real signature unknown; restored from __doc__
    def timerEvent(self, QTimerEvent):
        """ QTableView.timerEvent(QTimerEvent) """
        pass

    # real signature unknown; restored from __doc__
    def updateGeometries(self):
        """ QTableView.updateGeometries() """
        pass

    def verticalHeader(self):  # real signature unknown; restored from __doc__
        """ QTableView.verticalHeader() -> QHeaderView """
        return QHeaderView

    def verticalOffset(self):  # real signature unknown; restored from __doc__
        """ QTableView.verticalOffset() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def verticalScrollbarAction(self, p_int):
        """ QTableView.verticalScrollbarAction(int) """
        pass

    def viewOptions(self):  # real signature unknown; restored from __doc__
        """ QTableView.viewOptions() -> QStyleOptionViewItem """
        return QStyleOptionViewItem

    # real signature unknown; restored from __doc__
    def visualRect(self, QModelIndex):
        """ QTableView.visualRect(QModelIndex) -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def visualRegionForSelection(self, QItemSelection):
        """ QTableView.visualRegionForSelection(QItemSelection) -> QRegion """
        return QRegion

    def wordWrap(self):  # real signature unknown; restored from __doc__
        """ QTableView.wordWrap() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass


class QTableWidget(QTableView):

    """
    QTableWidget(QWidget parent=None)
    QTableWidget(int, int, QWidget parent=None)
    """

    def cellActivated(self, *args, **kwargs):  # real signature unknown
        """ QTableWidget.cellActivated[int, int] [signal] """
        pass

    def cellChanged(self, *args, **kwargs):  # real signature unknown
        """ QTableWidget.cellChanged[int, int] [signal] """
        pass

    def cellClicked(self, *args, **kwargs):  # real signature unknown
        """ QTableWidget.cellClicked[int, int] [signal] """
        pass

    def cellDoubleClicked(self, *args, **kwargs):  # real signature unknown
        """ QTableWidget.cellDoubleClicked[int, int] [signal] """
        pass

    def cellEntered(self, *args, **kwargs):  # real signature unknown
        """ QTableWidget.cellEntered[int, int] [signal] """
        pass

    def cellPressed(self, *args, **kwargs):  # real signature unknown
        """ QTableWidget.cellPressed[int, int] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def cellWidget(self, p_int, p_int_1):
        """ QTableWidget.cellWidget(int, int) -> QWidget """
        return QWidget

    def clear(self):  # real signature unknown; restored from __doc__
        """ QTableWidget.clear() """
        pass

    def clearContents(self):  # real signature unknown; restored from __doc__
        """ QTableWidget.clearContents() """
        pass

    # real signature unknown; restored from __doc__
    def closePersistentEditor(self, QTableWidgetItem):
        """ QTableWidget.closePersistentEditor(QTableWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def column(self, QTableWidgetItem):
        """ QTableWidget.column(QTableWidgetItem) -> int """
        return 0

    def columnCount(self):  # real signature unknown; restored from __doc__
        """ QTableWidget.columnCount() -> int """
        return 0

    def currentCellChanged(self, *args, **kwargs):  # real signature unknown
        """ QTableWidget.currentCellChanged[int, int, int, int] [signal] """
        pass

    def currentColumn(self):  # real signature unknown; restored from __doc__
        """ QTableWidget.currentColumn() -> int """
        return 0

    def currentItem(self):  # real signature unknown; restored from __doc__
        """ QTableWidget.currentItem() -> QTableWidgetItem """
        return QTableWidgetItem

    def currentItemChanged(self, *args, **kwargs):  # real signature unknown
        """ QTableWidget.currentItemChanged[QTableWidgetItem, QTableWidgetItem] [signal] """
        pass

    def currentRow(self):  # real signature unknown; restored from __doc__
        """ QTableWidget.currentRow() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def dropEvent(self, QDropEvent):
        """ QTableWidget.dropEvent(QDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dropMimeData(self, p_int, p_int_1, QMimeData, Qt_DropAction):
        """ QTableWidget.dropMimeData(int, int, QMimeData, Qt.DropAction) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def editItem(self, QTableWidgetItem):
        """ QTableWidget.editItem(QTableWidgetItem) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QTableWidget.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def findItems(self, QString, Qt_MatchFlags):
        """ QTableWidget.findItems(QString, Qt.MatchFlags) -> list-of-QTableWidgetItem """
        pass

    # real signature unknown; restored from __doc__
    def horizontalHeaderItem(self, p_int):
        """ QTableWidget.horizontalHeaderItem(int) -> QTableWidgetItem """
        return QTableWidgetItem

    # real signature unknown; restored from __doc__
    def indexFromItem(self, QTableWidgetItem):
        """ QTableWidget.indexFromItem(QTableWidgetItem) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def insertColumn(self, p_int):
        """ QTableWidget.insertColumn(int) """
        pass

    # real signature unknown; restored from __doc__
    def insertRow(self, p_int):
        """ QTableWidget.insertRow(int) """
        pass

    # real signature unknown; restored from __doc__
    def isItemSelected(self, QTableWidgetItem):
        """ QTableWidget.isItemSelected(QTableWidgetItem) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isSortingEnabled(self):
        """ QTableWidget.isSortingEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def item(self, p_int, p_int_1):
        """ QTableWidget.item(int, int) -> QTableWidgetItem """
        return QTableWidgetItem

    def itemActivated(self, *args, **kwargs):  # real signature unknown
        """ QTableWidget.itemActivated[QTableWidgetItem] [signal] """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def itemAt(self, *__args):
        """
        QTableWidget.itemAt(QPoint) -> QTableWidgetItem
        QTableWidget.itemAt(int, int) -> QTableWidgetItem
        """
        return QTableWidgetItem

    def itemChanged(self, *args, **kwargs):  # real signature unknown
        """ QTableWidget.itemChanged[QTableWidgetItem] [signal] """
        pass

    def itemClicked(self, *args, **kwargs):  # real signature unknown
        """ QTableWidget.itemClicked[QTableWidgetItem] [signal] """
        pass

    def itemDoubleClicked(self, *args, **kwargs):  # real signature unknown
        """ QTableWidget.itemDoubleClicked[QTableWidgetItem] [signal] """
        pass

    def itemEntered(self, *args, **kwargs):  # real signature unknown
        """ QTableWidget.itemEntered[QTableWidgetItem] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def itemFromIndex(self, QModelIndex):
        """ QTableWidget.itemFromIndex(QModelIndex) -> QTableWidgetItem """
        return QTableWidgetItem

    def itemPressed(self, *args, **kwargs):  # real signature unknown
        """ QTableWidget.itemPressed[QTableWidgetItem] [signal] """
        pass

    def itemPrototype(self):  # real signature unknown; restored from __doc__
        """ QTableWidget.itemPrototype() -> QTableWidgetItem """
        return QTableWidgetItem

    # real signature unknown; restored from __doc__
    def items(self, QMimeData):
        """ QTableWidget.items(QMimeData) -> list-of-QTableWidgetItem """
        pass

    def itemSelectionChanged(self, *args, **kwargs):  # real signature unknown
        """ QTableWidget.itemSelectionChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def mimeData(self, list_of_QTableWidgetItem):
        """ QTableWidget.mimeData(list-of-QTableWidgetItem) -> QMimeData """
        pass

    def mimeTypes(self):  # real signature unknown; restored from __doc__
        """ QTableWidget.mimeTypes() -> QStringList """
        pass

    # real signature unknown; restored from __doc__
    def openPersistentEditor(self, QTableWidgetItem):
        """ QTableWidget.openPersistentEditor(QTableWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def removeCellWidget(self, p_int, p_int_1):
        """ QTableWidget.removeCellWidget(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def removeColumn(self, p_int):
        """ QTableWidget.removeColumn(int) """
        pass

    # real signature unknown; restored from __doc__
    def removeRow(self, p_int):
        """ QTableWidget.removeRow(int) """
        pass

    # real signature unknown; restored from __doc__
    def row(self, QTableWidgetItem):
        """ QTableWidget.row(QTableWidgetItem) -> int """
        return 0

    def rowCount(self):  # real signature unknown; restored from __doc__
        """ QTableWidget.rowCount() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def scrollToItem(self, QTableWidgetItem, QAbstractItemView_ScrollHint_hint=None):
        """ QTableWidget.scrollToItem(QTableWidgetItem, QAbstractItemView.ScrollHint hint=QAbstractItemView.EnsureVisible) """
        pass

    def selectedItems(self):  # real signature unknown; restored from __doc__
        """ QTableWidget.selectedItems() -> list-of-QTableWidgetItem """
        pass

    def selectedRanges(self):  # real signature unknown; restored from __doc__
        """ QTableWidget.selectedRanges() -> list-of-QTableWidgetSelectionRange """
        pass

    # real signature unknown; restored from __doc__
    def setCellWidget(self, p_int, p_int_1, QWidget):
        """ QTableWidget.setCellWidget(int, int, QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setColumnCount(self, p_int):
        """ QTableWidget.setColumnCount(int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setCurrentCell(self, p_int, p_int_1, QItemSelectionModel_SelectionFlags=None):
        """
        QTableWidget.setCurrentCell(int, int)
        QTableWidget.setCurrentCell(int, int, QItemSelectionModel.SelectionFlags)
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setCurrentItem(self, QTableWidgetItem, QItemSelectionModel_SelectionFlags=None):
        """
        QTableWidget.setCurrentItem(QTableWidgetItem)
        QTableWidget.setCurrentItem(QTableWidgetItem, QItemSelectionModel.SelectionFlags)
        """
        pass

    # real signature unknown; restored from __doc__
    def setHorizontalHeaderItem(self, p_int, QTableWidgetItem):
        """ QTableWidget.setHorizontalHeaderItem(int, QTableWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def setHorizontalHeaderLabels(self, QStringList):
        """ QTableWidget.setHorizontalHeaderLabels(QStringList) """
        pass

    # real signature unknown; restored from __doc__
    def setItem(self, p_int, p_int_1, QTableWidgetItem):
        """ QTableWidget.setItem(int, int, QTableWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def setItemPrototype(self, QTableWidgetItem):
        """ QTableWidget.setItemPrototype(QTableWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def setItemSelected(self, QTableWidgetItem, bool):
        """ QTableWidget.setItemSelected(QTableWidgetItem, bool) """
        pass

    def setModel(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def setRangeSelected(self, QTableWidgetSelectionRange, bool):
        """ QTableWidget.setRangeSelected(QTableWidgetSelectionRange, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setRowCount(self, p_int):
        """ QTableWidget.setRowCount(int) """
        pass

    # real signature unknown; restored from __doc__
    def setSortingEnabled(self, bool):
        """ QTableWidget.setSortingEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalHeaderItem(self, p_int, QTableWidgetItem):
        """ QTableWidget.setVerticalHeaderItem(int, QTableWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalHeaderLabels(self, QStringList):
        """ QTableWidget.setVerticalHeaderLabels(QStringList) """
        pass

    # real signature unknown; restored from __doc__
    def sortItems(self, p_int, Qt_SortOrder_order=None):
        """ QTableWidget.sortItems(int, Qt.SortOrder order=Qt.AscendingOrder) """
        pass

    # real signature unknown; restored from __doc__
    def supportedDropActions(self):
        """ QTableWidget.supportedDropActions() -> Qt.DropActions """
        pass

    # real signature unknown; restored from __doc__
    def takeHorizontalHeaderItem(self, p_int):
        """ QTableWidget.takeHorizontalHeaderItem(int) -> QTableWidgetItem """
        return QTableWidgetItem

    # real signature unknown; restored from __doc__
    def takeItem(self, p_int, p_int_1):
        """ QTableWidget.takeItem(int, int) -> QTableWidgetItem """
        return QTableWidgetItem

    # real signature unknown; restored from __doc__
    def takeVerticalHeaderItem(self, p_int):
        """ QTableWidget.takeVerticalHeaderItem(int) -> QTableWidgetItem """
        return QTableWidgetItem

    # real signature unknown; restored from __doc__
    def verticalHeaderItem(self, p_int):
        """ QTableWidget.verticalHeaderItem(int) -> QTableWidgetItem """
        return QTableWidgetItem

    # real signature unknown; restored from __doc__
    def visualColumn(self, p_int):
        """ QTableWidget.visualColumn(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def visualItemRect(self, QTableWidgetItem):
        """ QTableWidget.visualItemRect(QTableWidgetItem) -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def visualRow(self, p_int):
        """ QTableWidget.visualRow(int) -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QTableWidgetItem():  # skipped bases: <type 'sip.wrapper'>

    """
    QTableWidgetItem(int type=QTableWidgetItem.Type)
    QTableWidgetItem(QString, int type=QTableWidgetItem.Type)
    QTableWidgetItem(QIcon, QString, int type=QTableWidgetItem.Type)
    QTableWidgetItem(QTableWidgetItem)
    """

    def background(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.background() -> QBrush """
        return QBrush

    def backgroundColor(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.backgroundColor() -> QColor """
        return QColor

    def checkState(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.checkState() -> Qt.CheckState """
        pass

    def clone(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.clone() -> QTableWidgetItem """
        return QTableWidgetItem

    def column(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.column() -> int """
        return 0

    def data(self, p_int):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.data(int) -> QVariant """
        pass

    def flags(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.flags() -> Qt.ItemFlags """
        pass

    def font(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.font() -> QFont """
        return QFont

    def foreground(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.foreground() -> QBrush """
        return QBrush

    def icon(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.icon() -> QIcon """
        return QIcon

    def isSelected(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.isSelected() -> bool """
        return False

    def ItemType(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def read(self, QDataStream):
        """ QTableWidgetItem.read(QDataStream) """
        pass

    def row(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.row() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setBackground(self, QBrush):
        """ QTableWidgetItem.setBackground(QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def setBackgroundColor(self, QColor):
        """ QTableWidgetItem.setBackgroundColor(QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setCheckState(self, Qt_CheckState):
        """ QTableWidgetItem.setCheckState(Qt.CheckState) """
        pass

    # real signature unknown; restored from __doc__
    def setData(self, p_int, QVariant):
        """ QTableWidgetItem.setData(int, QVariant) """
        pass

    # real signature unknown; restored from __doc__
    def setFlags(self, Qt_ItemFlags):
        """ QTableWidgetItem.setFlags(Qt.ItemFlags) """
        pass

    def setFont(self, QFont):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.setFont(QFont) """
        pass

    # real signature unknown; restored from __doc__
    def setForeground(self, QBrush):
        """ QTableWidgetItem.setForeground(QBrush) """
        pass

    def setIcon(self, QIcon):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.setIcon(QIcon) """
        pass

    # real signature unknown; restored from __doc__
    def setSelected(self, bool):
        """ QTableWidgetItem.setSelected(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSizeHint(self, QSize):
        """ QTableWidgetItem.setSizeHint(QSize) """
        pass

    # real signature unknown; restored from __doc__
    def setStatusTip(self, QString):
        """ QTableWidgetItem.setStatusTip(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, QString):
        """ QTableWidgetItem.setText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTextAlignment(self, p_int):
        """ QTableWidgetItem.setTextAlignment(int) """
        pass

    # real signature unknown; restored from __doc__
    def setTextColor(self, QColor):
        """ QTableWidgetItem.setTextColor(QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setToolTip(self, QString):
        """ QTableWidgetItem.setToolTip(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setWhatsThis(self, QString):
        """ QTableWidgetItem.setWhatsThis(QString) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.sizeHint() -> QSize """
        pass

    def statusTip(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.statusTip() -> QString """
        pass

    def tableWidget(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.tableWidget() -> QTableWidget """
        return QTableWidget

    def text(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.text() -> QString """
        pass

    def textAlignment(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.textAlignment() -> int """
        return 0

    def textColor(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.textColor() -> QColor """
        return QColor

    def toolTip(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.toolTip() -> QString """
        pass

    def type(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.type() -> int """
        return 0

    def whatsThis(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetItem.whatsThis() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def write(self, QDataStream):
        """ QTableWidgetItem.write(QDataStream) """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default

    Type = 0
    UserType = 1000


# skipped bases: <type 'sip.simplewrapper'>
class QTableWidgetSelectionRange():

    """
    QTableWidgetSelectionRange()
    QTableWidgetSelectionRange(int, int, int, int)
    QTableWidgetSelectionRange(QTableWidgetSelectionRange)
    """

    def bottomRow(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetSelectionRange.bottomRow() -> int """
        return 0

    def columnCount(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetSelectionRange.columnCount() -> int """
        return 0

    def leftColumn(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetSelectionRange.leftColumn() -> int """
        return 0

    def rightColumn(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetSelectionRange.rightColumn() -> int """
        return 0

    def rowCount(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetSelectionRange.rowCount() -> int """
        return 0

    def topRow(self):  # real signature unknown; restored from __doc__
        """ QTableWidgetSelectionRange.topRow() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    __weakref__ = property(lambda self: object())  # default


class QTabWidget(QWidget):

    """ QTabWidget(QWidget parent=None) """
    # real signature unknown; restored from __doc__ with multiple overloads

    def addTab(self, QWidget, *__args):
        """
        QTabWidget.addTab(QWidget, QString) -> int
        QTabWidget.addTab(QWidget, QIcon, QString) -> int
        """
        return 0

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QTabWidget.changeEvent(QEvent) """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QTabWidget.clear() """
        pass

    # real signature unknown; restored from __doc__
    def cornerWidget(self, Qt_Corner_corner=None):
        """ QTabWidget.cornerWidget(Qt.Corner corner=Qt.TopRightCorner) -> QWidget """
        return QWidget

    def count(self):  # real signature unknown; restored from __doc__
        """ QTabWidget.count() -> int """
        return 0

    def currentChanged(self, *args, **kwargs):  # real signature unknown
        """ QTabWidget.currentChanged[int] [signal] """
        pass

    def currentIndex(self):  # real signature unknown; restored from __doc__
        """ QTabWidget.currentIndex() -> int """
        return 0

    def currentWidget(self):  # real signature unknown; restored from __doc__
        """ QTabWidget.currentWidget() -> QWidget """
        return QWidget

    def documentMode(self):  # real signature unknown; restored from __doc__
        """ QTabWidget.documentMode() -> bool """
        return False

    def elideMode(self):  # real signature unknown; restored from __doc__
        """ QTabWidget.elideMode() -> Qt.TextElideMode """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QTabWidget.event(QEvent) -> bool """
        return False

    def iconSize(self):  # real signature unknown; restored from __doc__
        """ QTabWidget.iconSize() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def indexOf(self, QWidget):
        """ QTabWidget.indexOf(QWidget) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionTabWidgetFrame):
        """ QTabWidget.initStyleOption(QStyleOptionTabWidgetFrame) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def insertTab(self, p_int, QWidget, *__args):
        """
        QTabWidget.insertTab(int, QWidget, QString) -> int
        QTabWidget.insertTab(int, QWidget, QIcon, QString) -> int
        """
        return 0

    def isMovable(self):  # real signature unknown; restored from __doc__
        """ QTabWidget.isMovable() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isTabEnabled(self, p_int):
        """ QTabWidget.isTabEnabled(int) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QTabWidget.keyPressEvent(QKeyEvent) """
        pass

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QTabWidget.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QTabWidget.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def removeTab(self, p_int):
        """ QTabWidget.removeTab(int) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QTabWidget.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setCornerWidget(self, QWidget, Qt_Corner_corner=None):
        """ QTabWidget.setCornerWidget(QWidget, Qt.Corner corner=Qt.TopRightCorner) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentIndex(self, p_int):
        """ QTabWidget.setCurrentIndex(int) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentWidget(self, QWidget):
        """ QTabWidget.setCurrentWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setDocumentMode(self, bool):
        """ QTabWidget.setDocumentMode(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setElideMode(self, Qt_TextElideMode):
        """ QTabWidget.setElideMode(Qt.TextElideMode) """
        pass

    # real signature unknown; restored from __doc__
    def setIconSize(self, QSize):
        """ QTabWidget.setIconSize(QSize) """
        pass

    # real signature unknown; restored from __doc__
    def setMovable(self, bool):
        """ QTabWidget.setMovable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setTabBar(self, QTabBar):
        """ QTabWidget.setTabBar(QTabBar) """
        pass

    # real signature unknown; restored from __doc__
    def setTabEnabled(self, p_int, bool):
        """ QTabWidget.setTabEnabled(int, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setTabIcon(self, p_int, QIcon):
        """ QTabWidget.setTabIcon(int, QIcon) """
        pass

    # real signature unknown; restored from __doc__
    def setTabPosition(self, QTabWidget_TabPosition):
        """ QTabWidget.setTabPosition(QTabWidget.TabPosition) """
        pass

    # real signature unknown; restored from __doc__
    def setTabsClosable(self, bool):
        """ QTabWidget.setTabsClosable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setTabShape(self, QTabWidget_TabShape):
        """ QTabWidget.setTabShape(QTabWidget.TabShape) """
        pass

    # real signature unknown; restored from __doc__
    def setTabText(self, p_int, QString):
        """ QTabWidget.setTabText(int, QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTabToolTip(self, p_int, QString):
        """ QTabWidget.setTabToolTip(int, QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTabWhatsThis(self, p_int, QString):
        """ QTabWidget.setTabWhatsThis(int, QString) """
        pass

    # real signature unknown; restored from __doc__
    def setUsesScrollButtons(self, bool):
        """ QTabWidget.setUsesScrollButtons(bool) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QTabWidget.showEvent(QShowEvent) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QTabWidget.sizeHint() -> QSize """
        pass

    def tabBar(self):  # real signature unknown; restored from __doc__
        """ QTabWidget.tabBar() -> QTabBar """
        return QTabBar

    def tabCloseRequested(self, *args, **kwargs):  # real signature unknown
        """ QTabWidget.tabCloseRequested[int] [signal] """
        pass

    def tabIcon(self, p_int):  # real signature unknown; restored from __doc__
        """ QTabWidget.tabIcon(int) -> QIcon """
        return QIcon

    # real signature unknown; restored from __doc__
    def tabInserted(self, p_int):
        """ QTabWidget.tabInserted(int) """
        pass

    def TabPosition(self, *args, **kwargs):  # real signature unknown
        pass

    def tabPosition(self):  # real signature unknown; restored from __doc__
        """ QTabWidget.tabPosition() -> QTabWidget.TabPosition """
        pass

    # real signature unknown; restored from __doc__
    def tabRemoved(self, p_int):
        """ QTabWidget.tabRemoved(int) """
        pass

    def tabsClosable(self):  # real signature unknown; restored from __doc__
        """ QTabWidget.tabsClosable() -> bool """
        return False

    def tabShape(self):  # real signature unknown; restored from __doc__
        """ QTabWidget.tabShape() -> QTabWidget.TabShape """
        pass

    def TabShape(self, *args, **kwargs):  # real signature unknown
        pass

    def tabText(self, p_int):  # real signature unknown; restored from __doc__
        """ QTabWidget.tabText(int) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def tabToolTip(self, p_int):
        """ QTabWidget.tabToolTip(int) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def tabWhatsThis(self, p_int):
        """ QTabWidget.tabWhatsThis(int) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def usesScrollButtons(self):
        """ QTabWidget.usesScrollButtons() -> bool """
        return False

    def widget(self, p_int):  # real signature unknown; restored from __doc__
        """ QTabWidget.widget(int) -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass

    East = 3
    North = 0
    Rounded = 0
    South = 1
    Triangular = 1
    West = 2


class QTapAndHoldGesture(QGesture):

    """ QTapAndHoldGesture(QObject parent=None) """

    def position(self):  # real signature unknown; restored from __doc__
        """ QTapAndHoldGesture.position() -> QPointF """
        pass

    # real signature unknown; restored from __doc__
    def setPosition(self, QPointF):
        """ QTapAndHoldGesture.setPosition(QPointF) """
        pass

    # real signature unknown; restored from __doc__
    def setTimeout(self, p_int):
        """ QTapAndHoldGesture.setTimeout(int) """
        pass

    def timeout(self):  # real signature unknown; restored from __doc__
        """ QTapAndHoldGesture.timeout() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QTapGesture(QGesture):

    """ QTapGesture(QObject parent=None) """

    def position(self):  # real signature unknown; restored from __doc__
        """ QTapGesture.position() -> QPointF """
        pass

    # real signature unknown; restored from __doc__
    def setPosition(self, QPointF):
        """ QTapGesture.setPosition(QPointF) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QTextBlock():  # skipped bases: <type 'sip.wrapper'>

    """
    QTextBlock()
    QTextBlock(QTextBlock)
    """

    def begin(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.begin() -> QTextBlock.iterator """
        pass

    def blockFormat(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.blockFormat() -> QTextBlockFormat """
        return QTextBlockFormat

    # real signature unknown; restored from __doc__
    def blockFormatIndex(self):
        """ QTextBlock.blockFormatIndex() -> int """
        return 0

    def blockNumber(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.blockNumber() -> int """
        return 0

    def charFormat(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.charFormat() -> QTextCharFormat """
        return QTextCharFormat

    def charFormatIndex(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.charFormatIndex() -> int """
        return 0

    def clearLayout(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.clearLayout() """
        pass

    def contains(self, p_int):  # real signature unknown; restored from __doc__
        """ QTextBlock.contains(int) -> bool """
        return False

    def document(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.document() -> QTextDocument """
        return QTextDocument

    def end(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.end() -> QTextBlock.iterator """
        pass

    def firstLineNumber(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.firstLineNumber() -> int """
        return 0

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.isValid() -> bool """
        return False

    def isVisible(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.isVisible() -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def iterator(self, QTextBlock_iterator=None):
        """
        QTextBlock.iterator()
        QTextBlock.iterator(QTextBlock.iterator)
        """
        pass

    def layout(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.layout() -> QTextLayout """
        return QTextLayout

    def length(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.length() -> int """
        return 0

    def lineCount(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.lineCount() -> int """
        return 0

    def next(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.next() -> QTextBlock """
        return QTextBlock

    def position(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.position() -> int """
        return 0

    def previous(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.previous() -> QTextBlock """
        return QTextBlock

    def revision(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.revision() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setLineCount(self, p_int):
        """ QTextBlock.setLineCount(int) """
        pass

    # real signature unknown; restored from __doc__
    def setRevision(self, p_int):
        """ QTextBlock.setRevision(int) """
        pass

    # real signature unknown; restored from __doc__
    def setUserData(self, QTextBlockUserData):
        """ QTextBlock.setUserData(QTextBlockUserData) """
        pass

    # real signature unknown; restored from __doc__
    def setUserState(self, p_int):
        """ QTextBlock.setUserState(int) """
        pass

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QTextBlock.setVisible(bool) """
        pass

    def text(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.text() -> QString """
        pass

    def textDirection(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.textDirection() -> Qt.LayoutDirection """
        pass

    def textList(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.textList() -> QTextList """
        return QTextList

    def userData(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.userData() -> QTextBlockUserData """
        return QTextBlockUserData

    def userState(self):  # real signature unknown; restored from __doc__
        """ QTextBlock.userState() -> int """
        return 0

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QTextBlock=None):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QTextFormat():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QTextFormat()
    QTextFormat(int)
    QTextFormat(QTextFormat)
    QTextFormat(QVariant)
    """

    def background(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.background() -> QBrush """
        return QBrush

    # real signature unknown; restored from __doc__
    def boolProperty(self, p_int):
        """ QTextFormat.boolProperty(int) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def brushProperty(self, p_int):
        """ QTextFormat.brushProperty(int) -> QBrush """
        return QBrush

    def clearBackground(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.clearBackground() """
        pass

    def clearForeground(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.clearForeground() """
        pass

    # real signature unknown; restored from __doc__
    def clearProperty(self, p_int):
        """ QTextFormat.clearProperty(int) """
        pass

    # real signature unknown; restored from __doc__
    def colorProperty(self, p_int):
        """ QTextFormat.colorProperty(int) -> QColor """
        return QColor

    # real signature unknown; restored from __doc__
    def doubleProperty(self, p_int):
        """ QTextFormat.doubleProperty(int) -> float """
        return 0.0

    def foreground(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.foreground() -> QBrush """
        return QBrush

    def FormatType(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def hasProperty(self, p_int):
        """ QTextFormat.hasProperty(int) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def intProperty(self, p_int):
        """ QTextFormat.intProperty(int) -> int """
        return 0

    def isBlockFormat(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.isBlockFormat() -> bool """
        return False

    def isCharFormat(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.isCharFormat() -> bool """
        return False

    def isFrameFormat(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.isFrameFormat() -> bool """
        return False

    def isImageFormat(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.isImageFormat() -> bool """
        return False

    def isListFormat(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.isListFormat() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isTableCellFormat(self):
        """ QTextFormat.isTableCellFormat() -> bool """
        return False

    def isTableFormat(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.isTableFormat() -> bool """
        return False

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.isValid() -> bool """
        return False

    def layoutDirection(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.layoutDirection() -> Qt.LayoutDirection """
        pass

    # real signature unknown; restored from __doc__
    def lengthProperty(self, p_int):
        """ QTextFormat.lengthProperty(int) -> QTextLength """
        return QTextLength

    # real signature unknown; restored from __doc__
    def lengthVectorProperty(self, p_int):
        """ QTextFormat.lengthVectorProperty(int) -> list-of-QTextLength """
        pass

    # real signature unknown; restored from __doc__
    def merge(self, QTextFormat):
        """ QTextFormat.merge(QTextFormat) """
        pass

    def objectIndex(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.objectIndex() -> int """
        return 0

    def objectType(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.objectType() -> int """
        return 0

    def ObjectTypes(self, *args, **kwargs):  # real signature unknown
        pass

    def PageBreakFlag(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def PageBreakFlags(self, *__args):
        """
        QTextFormat.PageBreakFlags(QTextFormat.PageBreakFlags)
        QTextFormat.PageBreakFlags(int)
        QTextFormat.PageBreakFlags()
        """
        pass

    # real signature unknown; restored from __doc__
    def penProperty(self, p_int):
        """ QTextFormat.penProperty(int) -> QPen """
        return QPen

    def properties(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.properties() -> dict-of-int-QVariant """
        pass

    def Property(self, *args, **kwargs):  # real signature unknown
        pass

    def property(self, p_int):  # real signature unknown; restored from __doc__
        """ QTextFormat.property(int) -> QVariant """
        pass

    def propertyCount(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.propertyCount() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setBackground(self, QBrush):
        """ QTextFormat.setBackground(QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def setForeground(self, QBrush):
        """ QTextFormat.setForeground(QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def setLayoutDirection(self, Qt_LayoutDirection):
        """ QTextFormat.setLayoutDirection(Qt.LayoutDirection) """
        pass

    # real signature unknown; restored from __doc__
    def setObjectIndex(self, p_int):
        """ QTextFormat.setObjectIndex(int) """
        pass

    # real signature unknown; restored from __doc__
    def setObjectType(self, p_int):
        """ QTextFormat.setObjectType(int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setProperty(self, p_int, *__args):
        """
        QTextFormat.setProperty(int, QVariant)
        QTextFormat.setProperty(int, list-of-QTextLength)
        """
        pass

    # real signature unknown; restored from __doc__
    def stringProperty(self, p_int):
        """ QTextFormat.stringProperty(int) -> QString """
        pass

    def toBlockFormat(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.toBlockFormat() -> QTextBlockFormat """
        return QTextBlockFormat

    def toCharFormat(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.toCharFormat() -> QTextCharFormat """
        return QTextCharFormat

    def toFrameFormat(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.toFrameFormat() -> QTextFrameFormat """
        return QTextFrameFormat

    def toImageFormat(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.toImageFormat() -> QTextImageFormat """
        return QTextImageFormat

    def toListFormat(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.toListFormat() -> QTextListFormat """
        return QTextListFormat

    # real signature unknown; restored from __doc__
    def toTableCellFormat(self):
        """ QTextFormat.toTableCellFormat() -> QTextTableCellFormat """
        return QTextTableCellFormat

    def toTableFormat(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.toTableFormat() -> QTextTableFormat """
        return QTextTableFormat

    def type(self):  # real signature unknown; restored from __doc__
        """ QTextFormat.type() -> int """
        return 0

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default

    AnchorHref = 8241
    AnchorName = 8242
    BackgroundBrush = 2080
    BackgroundImageUrl = 2083
    BlockAlignment = 4112
    BlockBottomMargin = 4145
    BlockFormat = 1
    BlockIndent = 4160
    BlockLeftMargin = 4146
    BlockNonBreakableLines = 4176
    BlockRightMargin = 4147
    BlockTopMargin = 4144
    BlockTrailingHorizontalRulerWidth = 4192
    CharFormat = 2
    CssFloat = 2048
    FirstFontProperty = 8160
    FontCapitalization = 8160
    FontFamily = 8192
    FontFixedPitch = 8200
    FontItalic = 8196
    FontKerning = 8165
    FontLetterSpacing = 8161
    FontOverline = 8198
    FontPixelSize = 8201
    FontPointSize = 8193
    FontSizeAdjustment = 8194
    FontSizeIncrement = 8194
    FontStrikeOut = 8199
    FontStyleHint = 8163
    FontStyleStrategy = 8164
    FontUnderline = 8197
    FontWeight = 8195
    FontWordSpacing = 8162
    ForegroundBrush = 2081
    FrameBorder = 16384
    FrameBorderBrush = 16393
    FrameBorderStyle = 16400
    FrameBottomMargin = 16390
    FrameFormat = 5
    FrameHeight = 16388
    FrameLeftMargin = 16391
    FrameMargin = 16385
    FramePadding = 16386
    FrameRightMargin = 16392
    FrameTopMargin = 16389
    FrameWidth = 16387
    FullWidthSelection = 24576
    ImageHeight = 20497
    ImageName = 20480
    ImageObject = 1
    ImageWidth = 20496
    InvalidFormat = -1
    IsAnchor = 8240
    LastFontProperty = 8201
    LayoutDirection = 2049
    ListFormat = 3
    ListIndent = 12289
    ListStyle = 12288
    NoObject = 0
    ObjectIndex = 0
    ObjectType = 12032
    OutlinePen = 2064
    PageBreakPolicy = 28672
    PageBreak_AlwaysAfter = 16
    PageBreak_AlwaysBefore = 1
    PageBreak_Auto = 0
    TableCellBottomPadding = 18451
    TableCellColumnSpan = 18449
    TableCellLeftPadding = 18452
    TableCellObject = 3
    TableCellPadding = 16643
    TableCellRightPadding = 18453
    TableCellRowSpan = 18448
    TableCellSpacing = 16642
    TableCellTopPadding = 18450
    TableColumns = 16640
    TableColumnWidthConstraints = 16641
    TableFormat = 4
    TableHeaderRowCount = 16644
    TableObject = 2
    TabPositions = 4149
    TextIndent = 4148
    TextOutline = 8226
    TextToolTip = 8228
    TextUnderlineColor = 8208
    TextUnderlineStyle = 8227
    TextVerticalAlignment = 8225
    UserFormat = 100
    UserObject = 4096
    UserProperty = 1048576


class QTextBlockFormat(QTextFormat):

    """
    QTextBlockFormat()
    QTextBlockFormat(QTextBlockFormat)
    """

    def alignment(self):  # real signature unknown; restored from __doc__
        """ QTextBlockFormat.alignment() -> Qt.Alignment """
        pass

    def bottomMargin(self):  # real signature unknown; restored from __doc__
        """ QTextBlockFormat.bottomMargin() -> float """
        return 0.0

    def indent(self):  # real signature unknown; restored from __doc__
        """ QTextBlockFormat.indent() -> int """
        return 0

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QTextBlockFormat.isValid() -> bool """
        return False

    def leftMargin(self):  # real signature unknown; restored from __doc__
        """ QTextBlockFormat.leftMargin() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def nonBreakableLines(self):
        """ QTextBlockFormat.nonBreakableLines() -> bool """
        return False

    def pageBreakPolicy(self):  # real signature unknown; restored from __doc__
        """ QTextBlockFormat.pageBreakPolicy() -> QTextFormat.PageBreakFlags """
        pass

    def rightMargin(self):  # real signature unknown; restored from __doc__
        """ QTextBlockFormat.rightMargin() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def setAlignment(self, Qt_Alignment):
        """ QTextBlockFormat.setAlignment(Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setBottomMargin(self, p_float):
        """ QTextBlockFormat.setBottomMargin(float) """
        pass

    # real signature unknown; restored from __doc__
    def setIndent(self, p_int):
        """ QTextBlockFormat.setIndent(int) """
        pass

    # real signature unknown; restored from __doc__
    def setLeftMargin(self, p_float):
        """ QTextBlockFormat.setLeftMargin(float) """
        pass

    # real signature unknown; restored from __doc__
    def setNonBreakableLines(self, bool):
        """ QTextBlockFormat.setNonBreakableLines(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setPageBreakPolicy(self, QTextFormat_PageBreakFlags):
        """ QTextBlockFormat.setPageBreakPolicy(QTextFormat.PageBreakFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setRightMargin(self, p_float):
        """ QTextBlockFormat.setRightMargin(float) """
        pass

    # real signature unknown; restored from __doc__
    def setTabPositions(self, list_of_QTextOption_Tab):
        """ QTextBlockFormat.setTabPositions(list-of-QTextOption.Tab) """
        pass

    # real signature unknown; restored from __doc__
    def setTextIndent(self, p_float):
        """ QTextBlockFormat.setTextIndent(float) """
        pass

    # real signature unknown; restored from __doc__
    def setTopMargin(self, p_float):
        """ QTextBlockFormat.setTopMargin(float) """
        pass

    def tabPositions(self):  # real signature unknown; restored from __doc__
        """ QTextBlockFormat.tabPositions() -> list-of-QTextOption.Tab """
        pass

    def textIndent(self):  # real signature unknown; restored from __doc__
        """ QTextBlockFormat.textIndent() -> float """
        return 0.0

    def topMargin(self):  # real signature unknown; restored from __doc__
        """ QTextBlockFormat.topMargin() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QTextBlockFormat=None):
        pass


class QTextObject(__PyQt4_QtCore.QObject):

    """ QTextObject(QTextDocument) """

    def document(self):  # real signature unknown; restored from __doc__
        """ QTextObject.document() -> QTextDocument """
        return QTextDocument

    def format(self):  # real signature unknown; restored from __doc__
        """ QTextObject.format() -> QTextFormat """
        return QTextFormat

    def formatIndex(self):  # real signature unknown; restored from __doc__
        """ QTextObject.formatIndex() -> int """
        return 0

    def objectIndex(self):  # real signature unknown; restored from __doc__
        """ QTextObject.objectIndex() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setFormat(self, QTextFormat):
        """ QTextObject.setFormat(QTextFormat) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QTextDocument):
        pass


class QTextBlockGroup(QTextObject):

    """ QTextBlockGroup(QTextDocument) """
    # real signature unknown; restored from __doc__

    def blockFormatChanged(self, QTextBlock):
        """ QTextBlockGroup.blockFormatChanged(QTextBlock) """
        pass

    # real signature unknown; restored from __doc__
    def blockInserted(self, QTextBlock):
        """ QTextBlockGroup.blockInserted(QTextBlock) """
        pass

    def blockList(self):  # real signature unknown; restored from __doc__
        """ QTextBlockGroup.blockList() -> list-of-QTextBlock """
        pass

    # real signature unknown; restored from __doc__
    def blockRemoved(self, QTextBlock):
        """ QTextBlockGroup.blockRemoved(QTextBlock) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QTextDocument):
        pass


class QTextBlockUserData():  # skipped bases: <type 'sip.wrapper'>

    """
    QTextBlockUserData()
    QTextBlockUserData(QTextBlockUserData)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def __init__(self, QTextBlockUserData=None):
        pass

    __weakref__ = property(lambda self: object())  # default


class QTextEdit(QAbstractScrollArea):

    """
    QTextEdit(QWidget parent=None)
    QTextEdit(QString, QWidget parent=None)
    """

    def acceptRichText(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.acceptRichText() -> bool """
        return False

    def alignment(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.alignment() -> Qt.Alignment """
        pass

    # real signature unknown; restored from __doc__
    def anchorAt(self, QPoint):
        """ QTextEdit.anchorAt(QPoint) -> QString """
        pass

    def append(self, QString):  # real signature unknown; restored from __doc__
        """ QTextEdit.append(QString) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def AutoFormatting(self, *__args):
        """
        QTextEdit.AutoFormatting(QTextEdit.AutoFormatting)
        QTextEdit.AutoFormatting(int)
        QTextEdit.AutoFormatting()
        """
        pass

    def autoFormatting(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.autoFormatting() -> QTextEdit.AutoFormatting """
        pass

    def AutoFormattingFlag(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def canInsertFromMimeData(self, QMimeData):
        """ QTextEdit.canInsertFromMimeData(QMimeData) -> bool """
        return False

    def canPaste(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.canPaste() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QTextEdit.changeEvent(QEvent) """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.clear() """
        pass

    # real signature unknown; restored from __doc__
    def contextMenuEvent(self, QContextMenuEvent):
        """ QTextEdit.contextMenuEvent(QContextMenuEvent) """
        pass

    def copy(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.copy() """
        pass

    def copyAvailable(self, *args, **kwargs):  # real signature unknown
        """ QTextEdit.copyAvailable[bool] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def createMimeDataFromSelection(self):
        """ QTextEdit.createMimeDataFromSelection() -> QMimeData """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def createStandardContextMenu(self, QPoint=None):
        """
        QTextEdit.createStandardContextMenu() -> QMenu
        QTextEdit.createStandardContextMenu(QPoint) -> QMenu
        """
        return QMenu

    # real signature unknown; restored from __doc__
    def currentCharFormat(self):
        """ QTextEdit.currentCharFormat() -> QTextCharFormat """
        return QTextCharFormat

    # real signature unknown
    def currentCharFormatChanged(self, *args, **kwargs):
        """ QTextEdit.currentCharFormatChanged[QTextCharFormat] [signal] """
        pass

    def currentFont(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.currentFont() -> QFont """
        return QFont

    # real signature unknown; restored from __doc__
    def cursorForPosition(self, QPoint):
        """ QTextEdit.cursorForPosition(QPoint) -> QTextCursor """
        return QTextCursor

    def cursorPositionChanged(self, *args, **kwargs):  # real signature unknown
        """ QTextEdit.cursorPositionChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def cursorRect(self, QTextCursor=None):
        """
        QTextEdit.cursorRect(QTextCursor) -> QRect
        QTextEdit.cursorRect() -> QRect
        """
        pass

    def cursorWidth(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.cursorWidth() -> int """
        return 0

    def cut(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.cut() """
        pass

    def document(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.document() -> QTextDocument """
        return QTextDocument

    def documentTitle(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.documentTitle() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def dragEnterEvent(self, QDragEnterEvent):
        """ QTextEdit.dragEnterEvent(QDragEnterEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragLeaveEvent(self, QDragLeaveEvent):
        """ QTextEdit.dragLeaveEvent(QDragLeaveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dragMoveEvent(self, QDragMoveEvent):
        """ QTextEdit.dragMoveEvent(QDragMoveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dropEvent(self, QDropEvent):
        """ QTextEdit.dropEvent(QDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def ensureCursorVisible(self):
        """ QTextEdit.ensureCursorVisible() """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QTextEdit.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def ExtraSelection(self, QTextEdit_ExtraSelection=None):
        """
        QTextEdit.ExtraSelection()
        QTextEdit.ExtraSelection(QTextEdit.ExtraSelection)
        """
        pass

    def extraSelections(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.extraSelections() -> list-of-QTextEdit.ExtraSelection """
        pass

    # real signature unknown; restored from __doc__
    def find(self, QString, QTextDocument_FindFlags_options=0):
        """ QTextEdit.find(QString, QTextDocument.FindFlags options=0) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusInEvent(self, QFocusEvent):
        """ QTextEdit.focusInEvent(QFocusEvent) """
        pass

    # real signature unknown; restored from __doc__
    def focusNextPrevChild(self, bool):
        """ QTextEdit.focusNextPrevChild(bool) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QTextEdit.focusOutEvent(QFocusEvent) """
        pass

    def fontFamily(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.fontFamily() -> QString """
        pass

    def fontItalic(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.fontItalic() -> bool """
        return False

    def fontPointSize(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.fontPointSize() -> float """
        return 0.0

    def fontUnderline(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.fontUnderline() -> bool """
        return False

    def fontWeight(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.fontWeight() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def inputMethodEvent(self, QInputMethodEvent):
        """ QTextEdit.inputMethodEvent(QInputMethodEvent) """
        pass

    # real signature unknown; restored from __doc__
    def inputMethodQuery(self, Qt_InputMethodQuery):
        """ QTextEdit.inputMethodQuery(Qt.InputMethodQuery) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def insertFromMimeData(self, QMimeData):
        """ QTextEdit.insertFromMimeData(QMimeData) """
        pass

    # real signature unknown; restored from __doc__
    def insertHtml(self, QString):
        """ QTextEdit.insertHtml(QString) """
        pass

    # real signature unknown; restored from __doc__
    def insertPlainText(self, QString):
        """ QTextEdit.insertPlainText(QString) """
        pass

    def isReadOnly(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.isReadOnly() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isUndoRedoEnabled(self):
        """ QTextEdit.isUndoRedoEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QTextEdit.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def keyReleaseEvent(self, QKeyEvent):
        """ QTextEdit.keyReleaseEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def lineWrapColumnOrWidth(self):
        """ QTextEdit.lineWrapColumnOrWidth() -> int """
        return 0

    def LineWrapMode(self, *args, **kwargs):  # real signature unknown
        pass

    def lineWrapMode(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.lineWrapMode() -> QTextEdit.LineWrapMode """
        pass

    # real signature unknown; restored from __doc__
    def loadResource(self, p_int, QUrl):
        """ QTextEdit.loadResource(int, QUrl) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def mergeCurrentCharFormat(self, QTextCharFormat):
        """ QTextEdit.mergeCurrentCharFormat(QTextCharFormat) """
        pass

    # real signature unknown; restored from __doc__
    def mouseDoubleClickEvent(self, QMouseEvent):
        """ QTextEdit.mouseDoubleClickEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QTextEdit.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QTextEdit.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QTextEdit.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def moveCursor(self, QTextCursor_MoveOperation, QTextCursor_MoveMode_mode=None):
        """ QTextEdit.moveCursor(QTextCursor.MoveOperation, QTextCursor.MoveMode mode=QTextCursor.MoveAnchor) """
        pass

    def overwriteMode(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.overwriteMode() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QTextEdit.paintEvent(QPaintEvent) """
        pass

    def paste(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.paste() """
        pass

    # real signature unknown; restored from __doc__
    def print_(self, QPrinter):
        """ QTextEdit.print_(QPrinter) """
        pass

    def redo(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.redo() """
        pass

    def redoAvailable(self, *args, **kwargs):  # real signature unknown
        """ QTextEdit.redoAvailable[bool] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QTextEdit.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def scrollContentsBy(self, p_int, p_int_1):
        """ QTextEdit.scrollContentsBy(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def scrollToAnchor(self, QString):
        """ QTextEdit.scrollToAnchor(QString) """
        pass

    def selectAll(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.selectAll() """
        pass

    def selectionChanged(self, *args, **kwargs):  # real signature unknown
        """ QTextEdit.selectionChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def setAcceptRichText(self, bool):
        """ QTextEdit.setAcceptRichText(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setAlignment(self, Qt_Alignment):
        """ QTextEdit.setAlignment(Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setAutoFormatting(self, QTextEdit_AutoFormatting):
        """ QTextEdit.setAutoFormatting(QTextEdit.AutoFormatting) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentCharFormat(self, QTextCharFormat):
        """ QTextEdit.setCurrentCharFormat(QTextCharFormat) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentFont(self, QFont):
        """ QTextEdit.setCurrentFont(QFont) """
        pass

    # real signature unknown; restored from __doc__
    def setCursorWidth(self, p_int):
        """ QTextEdit.setCursorWidth(int) """
        pass

    # real signature unknown; restored from __doc__
    def setDocument(self, QTextDocument):
        """ QTextEdit.setDocument(QTextDocument) """
        pass

    # real signature unknown; restored from __doc__
    def setDocumentTitle(self, QString):
        """ QTextEdit.setDocumentTitle(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setExtraSelections(self, list_of_QTextEdit_ExtraSelection):
        """ QTextEdit.setExtraSelections(list-of-QTextEdit.ExtraSelection) """
        pass

    # real signature unknown; restored from __doc__
    def setFontFamily(self, QString):
        """ QTextEdit.setFontFamily(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setFontItalic(self, bool):
        """ QTextEdit.setFontItalic(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFontPointSize(self, p_float):
        """ QTextEdit.setFontPointSize(float) """
        pass

    # real signature unknown; restored from __doc__
    def setFontUnderline(self, bool):
        """ QTextEdit.setFontUnderline(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFontWeight(self, p_int):
        """ QTextEdit.setFontWeight(int) """
        pass

    # real signature unknown; restored from __doc__
    def setHtml(self, QString):
        """ QTextEdit.setHtml(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setLineWrapColumnOrWidth(self, p_int):
        """ QTextEdit.setLineWrapColumnOrWidth(int) """
        pass

    # real signature unknown; restored from __doc__
    def setLineWrapMode(self, QTextEdit_LineWrapMode):
        """ QTextEdit.setLineWrapMode(QTextEdit.LineWrapMode) """
        pass

    # real signature unknown; restored from __doc__
    def setOverwriteMode(self, bool):
        """ QTextEdit.setOverwriteMode(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setPlainText(self, QString):
        """ QTextEdit.setPlainText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setReadOnly(self, bool):
        """ QTextEdit.setReadOnly(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setTabChangesFocus(self, bool):
        """ QTextEdit.setTabChangesFocus(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setTabStopWidth(self, p_int):
        """ QTextEdit.setTabStopWidth(int) """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, QString):
        """ QTextEdit.setText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTextBackgroundColor(self, QColor):
        """ QTextEdit.setTextBackgroundColor(QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setTextColor(self, QColor):
        """ QTextEdit.setTextColor(QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setTextCursor(self, QTextCursor):
        """ QTextEdit.setTextCursor(QTextCursor) """
        pass

    # real signature unknown; restored from __doc__
    def setTextInteractionFlags(self, Qt_TextInteractionFlags):
        """ QTextEdit.setTextInteractionFlags(Qt.TextInteractionFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setUndoRedoEnabled(self, bool):
        """ QTextEdit.setUndoRedoEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setWordWrapMode(self, QTextOption_WrapMode):
        """ QTextEdit.setWordWrapMode(QTextOption.WrapMode) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QTextEdit.showEvent(QShowEvent) """
        pass

    def tabChangesFocus(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.tabChangesFocus() -> bool """
        return False

    def tabStopWidth(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.tabStopWidth() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def textBackgroundColor(self):
        """ QTextEdit.textBackgroundColor() -> QColor """
        return QColor

    def textChanged(self, *args, **kwargs):  # real signature unknown
        """ QTextEdit.textChanged[] [signal] """
        pass

    def textColor(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.textColor() -> QColor """
        return QColor

    def textCursor(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.textCursor() -> QTextCursor """
        return QTextCursor

    # real signature unknown; restored from __doc__
    def textInteractionFlags(self):
        """ QTextEdit.textInteractionFlags() -> Qt.TextInteractionFlags """
        pass

    # real signature unknown; restored from __doc__
    def timerEvent(self, QTimerEvent):
        """ QTextEdit.timerEvent(QTimerEvent) """
        pass

    def toHtml(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.toHtml() -> QString """
        pass

    def toPlainText(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.toPlainText() -> QString """
        pass

    def undo(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.undo() """
        pass

    def undoAvailable(self, *args, **kwargs):  # real signature unknown
        """ QTextEdit.undoAvailable[bool] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def wheelEvent(self, QWheelEvent):
        """ QTextEdit.wheelEvent(QWheelEvent) """
        pass

    def wordWrapMode(self):  # real signature unknown; restored from __doc__
        """ QTextEdit.wordWrapMode() -> QTextOption.WrapMode """
        pass

    # real signature unknown; restored from __doc__
    def zoomIn(self, int_range=1):
        """ QTextEdit.zoomIn(int range=1) """
        pass

    # real signature unknown; restored from __doc__
    def zoomOut(self, int_range=1):
        """ QTextEdit.zoomOut(int range=1) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    AutoAll = -1
    AutoBulletList = 1
    AutoNone = 0
    FixedColumnWidth = 3
    FixedPixelWidth = 2
    NoWrap = 0
    WidgetWidth = 1


class QTextBrowser(QTextEdit):

    """ QTextBrowser(QWidget parent=None) """

    def anchorClicked(self, *args, **kwargs):  # real signature unknown
        """ QTextBrowser.anchorClicked[QUrl] [signal] """
        pass

    def backward(self):  # real signature unknown; restored from __doc__
        """ QTextBrowser.backward() """
        pass

    def backwardAvailable(self, *args, **kwargs):  # real signature unknown
        """ QTextBrowser.backwardAvailable[bool] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def backwardHistoryCount(self):
        """ QTextBrowser.backwardHistoryCount() -> int """
        return 0

    def clearHistory(self):  # real signature unknown; restored from __doc__
        """ QTextBrowser.clearHistory() """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QTextBrowser.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusNextPrevChild(self, bool):
        """ QTextBrowser.focusNextPrevChild(bool) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def focusOutEvent(self, QFocusEvent):
        """ QTextBrowser.focusOutEvent(QFocusEvent) """
        pass

    def forward(self):  # real signature unknown; restored from __doc__
        """ QTextBrowser.forward() """
        pass

    def forwardAvailable(self, *args, **kwargs):  # real signature unknown
        """ QTextBrowser.forwardAvailable[bool] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def forwardHistoryCount(self):
        """ QTextBrowser.forwardHistoryCount() -> int """
        return 0

    def highlighted(self, *args, **kwargs):  # real signature unknown
        """
        QTextBrowser.highlighted[QUrl] [signal]
        QTextBrowser.highlighted[QString] [signal]
        """
        pass

    def historyChanged(self, *args, **kwargs):  # real signature unknown
        """ QTextBrowser.historyChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def historyTitle(self, p_int):
        """ QTextBrowser.historyTitle(int) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def historyUrl(self, p_int):
        """ QTextBrowser.historyUrl(int) -> QUrl """
        pass

    def home(self):  # real signature unknown; restored from __doc__
        """ QTextBrowser.home() """
        pass

    # real signature unknown; restored from __doc__
    def isBackwardAvailable(self):
        """ QTextBrowser.isBackwardAvailable() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isForwardAvailable(self):
        """ QTextBrowser.isForwardAvailable() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QTextBrowser.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def loadResource(self, p_int, QUrl):
        """ QTextBrowser.loadResource(int, QUrl) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QTextBrowser.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QTextBrowser.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QTextBrowser.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def openExternalLinks(self):
        """ QTextBrowser.openExternalLinks() -> bool """
        return False

    def openLinks(self):  # real signature unknown; restored from __doc__
        """ QTextBrowser.openLinks() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QTextBrowser.paintEvent(QPaintEvent) """
        pass

    def reload(self):  # real signature unknown; restored from __doc__
        """ QTextBrowser.reload() """
        pass

    def searchPaths(self):  # real signature unknown; restored from __doc__
        """ QTextBrowser.searchPaths() -> QStringList """
        pass

    # real signature unknown; restored from __doc__
    def setOpenExternalLinks(self, bool):
        """ QTextBrowser.setOpenExternalLinks(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setOpenLinks(self, bool):
        """ QTextBrowser.setOpenLinks(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSearchPaths(self, QStringList):
        """ QTextBrowser.setSearchPaths(QStringList) """
        pass

    def setSource(self, QUrl):  # real signature unknown; restored from __doc__
        """ QTextBrowser.setSource(QUrl) """
        pass

    def source(self):  # real signature unknown; restored from __doc__
        """ QTextBrowser.source() -> QUrl """
        pass

    def sourceChanged(self, *args, **kwargs):  # real signature unknown
        """ QTextBrowser.sourceChanged[QUrl] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass


class QTextCharFormat(QTextFormat):

    """
    QTextCharFormat()
    QTextCharFormat(QTextCharFormat)
    """

    def anchorHref(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.anchorHref() -> QString """
        pass

    def anchorName(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.anchorName() -> QString """
        pass

    def anchorNames(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.anchorNames() -> QStringList """
        pass

    def font(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.font() -> QFont """
        return QFont

    # real signature unknown; restored from __doc__
    def fontCapitalization(self):
        """ QTextCharFormat.fontCapitalization() -> QFont.Capitalization """
        pass

    def fontFamily(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.fontFamily() -> QString """
        pass

    def fontFixedPitch(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.fontFixedPitch() -> bool """
        return False

    def fontItalic(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.fontItalic() -> bool """
        return False

    def fontKerning(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.fontKerning() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def fontLetterSpacing(self):
        """ QTextCharFormat.fontLetterSpacing() -> float """
        return 0.0

    def fontOverline(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.fontOverline() -> bool """
        return False

    def fontPointSize(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.fontPointSize() -> float """
        return 0.0

    def fontStrikeOut(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.fontStrikeOut() -> bool """
        return False

    def fontStyleHint(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.fontStyleHint() -> QFont.StyleHint """
        pass

    # real signature unknown; restored from __doc__
    def fontStyleStrategy(self):
        """ QTextCharFormat.fontStyleStrategy() -> QFont.StyleStrategy """
        pass

    def fontUnderline(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.fontUnderline() -> bool """
        return False

    def fontWeight(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.fontWeight() -> int """
        return 0

    def fontWordSpacing(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.fontWordSpacing() -> float """
        return 0.0

    def isAnchor(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.isAnchor() -> bool """
        return False

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.isValid() -> bool """
        return False

    def setAnchor(self, bool):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.setAnchor(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setAnchorHref(self, QString):
        """ QTextCharFormat.setAnchorHref(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setAnchorName(self, QString):
        """ QTextCharFormat.setAnchorName(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setAnchorNames(self, QStringList):
        """ QTextCharFormat.setAnchorNames(QStringList) """
        pass

    def setFont(self, QFont):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.setFont(QFont) """
        pass

    # real signature unknown; restored from __doc__
    def setFontCapitalization(self, QFont_Capitalization):
        """ QTextCharFormat.setFontCapitalization(QFont.Capitalization) """
        pass

    # real signature unknown; restored from __doc__
    def setFontFamily(self, QString):
        """ QTextCharFormat.setFontFamily(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setFontFixedPitch(self, bool):
        """ QTextCharFormat.setFontFixedPitch(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFontItalic(self, bool):
        """ QTextCharFormat.setFontItalic(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFontKerning(self, bool):
        """ QTextCharFormat.setFontKerning(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFontLetterSpacing(self, p_float):
        """ QTextCharFormat.setFontLetterSpacing(float) """
        pass

    # real signature unknown; restored from __doc__
    def setFontOverline(self, bool):
        """ QTextCharFormat.setFontOverline(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFontPointSize(self, p_float):
        """ QTextCharFormat.setFontPointSize(float) """
        pass

    # real signature unknown; restored from __doc__
    def setFontStrikeOut(self, bool):
        """ QTextCharFormat.setFontStrikeOut(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFontStyleHint(self, QFont_StyleHint, QFont_StyleStrategy_strategy=None):
        """ QTextCharFormat.setFontStyleHint(QFont.StyleHint, QFont.StyleStrategy strategy=QFont.PreferDefault) """
        pass

    # real signature unknown; restored from __doc__
    def setFontStyleStrategy(self, QFont_StyleStrategy):
        """ QTextCharFormat.setFontStyleStrategy(QFont.StyleStrategy) """
        pass

    # real signature unknown; restored from __doc__
    def setFontUnderline(self, bool):
        """ QTextCharFormat.setFontUnderline(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFontWeight(self, p_int):
        """ QTextCharFormat.setFontWeight(int) """
        pass

    # real signature unknown; restored from __doc__
    def setFontWordSpacing(self, p_float):
        """ QTextCharFormat.setFontWordSpacing(float) """
        pass

    # real signature unknown; restored from __doc__
    def setTableCellColumnSpan(self, p_int):
        """ QTextCharFormat.setTableCellColumnSpan(int) """
        pass

    # real signature unknown; restored from __doc__
    def setTableCellRowSpan(self, p_int):
        """ QTextCharFormat.setTableCellRowSpan(int) """
        pass

    # real signature unknown; restored from __doc__
    def setTextOutline(self, QPen):
        """ QTextCharFormat.setTextOutline(QPen) """
        pass

    # real signature unknown; restored from __doc__
    def setToolTip(self, QString):
        """ QTextCharFormat.setToolTip(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setUnderlineColor(self, QColor):
        """ QTextCharFormat.setUnderlineColor(QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setUnderlineStyle(self, QTextCharFormat_UnderlineStyle):
        """ QTextCharFormat.setUnderlineStyle(QTextCharFormat.UnderlineStyle) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalAlignment(self, QTextCharFormat_VerticalAlignment):
        """ QTextCharFormat.setVerticalAlignment(QTextCharFormat.VerticalAlignment) """
        pass

    # real signature unknown; restored from __doc__
    def tableCellColumnSpan(self):
        """ QTextCharFormat.tableCellColumnSpan() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def tableCellRowSpan(self):
        """ QTextCharFormat.tableCellRowSpan() -> int """
        return 0

    def textOutline(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.textOutline() -> QPen """
        return QPen

    def toolTip(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.toolTip() -> QString """
        pass

    def underlineColor(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.underlineColor() -> QColor """
        return QColor

    def UnderlineStyle(self, *args, **kwargs):  # real signature unknown
        pass

    def underlineStyle(self):  # real signature unknown; restored from __doc__
        """ QTextCharFormat.underlineStyle() -> QTextCharFormat.UnderlineStyle """
        pass

    # real signature unknown; restored from __doc__
    def verticalAlignment(self):
        """ QTextCharFormat.verticalAlignment() -> QTextCharFormat.VerticalAlignment """
        pass

    def VerticalAlignment(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QTextCharFormat=None):
        pass

    AlignBottom = 5
    AlignMiddle = 3
    AlignNormal = 0
    AlignSubScript = 2
    AlignSuperScript = 1
    AlignTop = 4
    DashDotDotLine = 5
    DashDotLine = 4
    DashUnderline = 2
    DotLine = 3
    NoUnderline = 0
    SingleUnderline = 1
    SpellCheckUnderline = 7
    WaveUnderline = 6


class QTextCursor():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QTextCursor()
    QTextCursor(QTextDocument)
    QTextCursor(QTextFrame)
    QTextCursor(QTextBlock)
    QTextCursor(QTextCursor)
    """

    def anchor(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.anchor() -> int """
        return 0

    def atBlockEnd(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.atBlockEnd() -> bool """
        return False

    def atBlockStart(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.atBlockStart() -> bool """
        return False

    def atEnd(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.atEnd() -> bool """
        return False

    def atStart(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.atStart() -> bool """
        return False

    def beginEditBlock(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.beginEditBlock() """
        pass

    def block(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.block() -> QTextBlock """
        return QTextBlock

    def blockCharFormat(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.blockCharFormat() -> QTextCharFormat """
        return QTextCharFormat

    def blockFormat(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.blockFormat() -> QTextBlockFormat """
        return QTextBlockFormat

    def blockNumber(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.blockNumber() -> int """
        return 0

    def charFormat(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.charFormat() -> QTextCharFormat """
        return QTextCharFormat

    def clearSelection(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.clearSelection() """
        pass

    def columnNumber(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.columnNumber() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def createList(self, *__args):
        """
        QTextCursor.createList(QTextListFormat) -> QTextList
        QTextCursor.createList(QTextListFormat.Style) -> QTextList
        """
        return QTextList

    def currentFrame(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.currentFrame() -> QTextFrame """
        return QTextFrame

    def currentList(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.currentList() -> QTextList """
        return QTextList

    def currentTable(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.currentTable() -> QTextTable """
        return QTextTable

    def deleteChar(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.deleteChar() """
        pass

    # real signature unknown; restored from __doc__
    def deletePreviousChar(self):
        """ QTextCursor.deletePreviousChar() """
        pass

    def document(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.document() -> QTextDocument """
        return QTextDocument

    def endEditBlock(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.endEditBlock() """
        pass

    # real signature unknown; restored from __doc__
    def hasComplexSelection(self):
        """ QTextCursor.hasComplexSelection() -> bool """
        return False

    def hasSelection(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.hasSelection() -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def insertBlock(self, QTextBlockFormat=None, QTextCharFormat=None):
        """
        QTextCursor.insertBlock()
        QTextCursor.insertBlock(QTextBlockFormat)
        QTextCursor.insertBlock(QTextBlockFormat, QTextCharFormat)
        """
        pass

    # real signature unknown; restored from __doc__
    def insertFragment(self, QTextDocumentFragment):
        """ QTextCursor.insertFragment(QTextDocumentFragment) """
        pass

    # real signature unknown; restored from __doc__
    def insertFrame(self, QTextFrameFormat):
        """ QTextCursor.insertFrame(QTextFrameFormat) -> QTextFrame """
        return QTextFrame

    # real signature unknown; restored from __doc__
    def insertHtml(self, QString):
        """ QTextCursor.insertHtml(QString) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def insertImage(self, *__args):
        """
        QTextCursor.insertImage(QTextImageFormat)
        QTextCursor.insertImage(QTextImageFormat, QTextFrameFormat.Position)
        QTextCursor.insertImage(QString)
        QTextCursor.insertImage(QImage, QString name=QString())
        """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def insertList(self, *__args):
        """
        QTextCursor.insertList(QTextListFormat) -> QTextList
        QTextCursor.insertList(QTextListFormat.Style) -> QTextList
        """
        return QTextList

    # real signature unknown; restored from __doc__ with multiple overloads
    def insertTable(self, p_int, p_int_1, QTextTableFormat=None):
        """
        QTextCursor.insertTable(int, int, QTextTableFormat) -> QTextTable
        QTextCursor.insertTable(int, int) -> QTextTable
        """
        return QTextTable

    # real signature unknown; restored from __doc__ with multiple overloads
    def insertText(self, QString, QTextCharFormat=None):
        """
        QTextCursor.insertText(QString)
        QTextCursor.insertText(QString, QTextCharFormat)
        """
        pass

    # real signature unknown; restored from __doc__
    def isCopyOf(self, QTextCursor):
        """ QTextCursor.isCopyOf(QTextCursor) -> bool """
        return False

    def isNull(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.isNull() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def joinPreviousEditBlock(self):
        """ QTextCursor.joinPreviousEditBlock() """
        pass

    # real signature unknown; restored from __doc__
    def keepPositionOnInsert(self):
        """ QTextCursor.keepPositionOnInsert() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def mergeBlockCharFormat(self, QTextCharFormat):
        """ QTextCursor.mergeBlockCharFormat(QTextCharFormat) """
        pass

    # real signature unknown; restored from __doc__
    def mergeBlockFormat(self, QTextBlockFormat):
        """ QTextCursor.mergeBlockFormat(QTextBlockFormat) """
        pass

    # real signature unknown; restored from __doc__
    def mergeCharFormat(self, QTextCharFormat):
        """ QTextCursor.mergeCharFormat(QTextCharFormat) """
        pass

    def MoveMode(self, *args, **kwargs):  # real signature unknown
        pass

    def MoveOperation(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def movePosition(self, QTextCursor_MoveOperation, QTextCursor_MoveMode_mode=None, int_n=1):
        """ QTextCursor.movePosition(QTextCursor.MoveOperation, QTextCursor.MoveMode mode=QTextCursor.MoveAnchor, int n=1) -> bool """
        return False

    def position(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.position() -> int """
        return 0

    def positionInBlock(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.positionInBlock() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def removeSelectedText(self):
        """ QTextCursor.removeSelectedText() """
        pass

    # real signature unknown; restored from __doc__
    def select(self, QTextCursor_SelectionType):
        """ QTextCursor.select(QTextCursor.SelectionType) """
        pass

    # real signature unknown; restored from __doc__
    def selectedTableCells(self):
        """ QTextCursor.selectedTableCells() -> (int, int, int, int) """
        pass

    def selectedText(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.selectedText() -> QString """
        pass

    def selection(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.selection() -> QTextDocumentFragment """
        return QTextDocumentFragment

    def selectionEnd(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.selectionEnd() -> int """
        return 0

    def selectionStart(self):  # real signature unknown; restored from __doc__
        """ QTextCursor.selectionStart() -> int """
        return 0

    def SelectionType(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def setBlockCharFormat(self, QTextCharFormat):
        """ QTextCursor.setBlockCharFormat(QTextCharFormat) """
        pass

    # real signature unknown; restored from __doc__
    def setBlockFormat(self, QTextBlockFormat):
        """ QTextCursor.setBlockFormat(QTextBlockFormat) """
        pass

    # real signature unknown; restored from __doc__
    def setCharFormat(self, QTextCharFormat):
        """ QTextCursor.setCharFormat(QTextCharFormat) """
        pass

    # real signature unknown; restored from __doc__
    def setKeepPositionOnInsert(self, bool):
        """ QTextCursor.setKeepPositionOnInsert(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setPosition(self, p_int, QTextCursor_MoveMode_mode=None):
        """ QTextCursor.setPosition(int, QTextCursor.MoveMode mode=QTextCursor.MoveAnchor) """
        pass

    # real signature unknown; restored from __doc__
    def setVerticalMovementX(self, p_int):
        """ QTextCursor.setVerticalMovementX(int) """
        pass

    # real signature unknown; restored from __doc__
    def setVisualNavigation(self, bool):
        """ QTextCursor.setVisualNavigation(bool) """
        pass

    # real signature unknown; restored from __doc__
    def verticalMovementX(self):
        """ QTextCursor.verticalMovementX() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def visualNavigation(self):
        """ QTextCursor.visualNavigation() -> bool """
        return False

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default

    BlockUnderCursor = 2
    Document = 3
    Down = 12
    End = 11
    EndOfBlock = 15
    EndOfLine = 13
    EndOfWord = 14
    KeepAnchor = 1
    Left = 9
    LineUnderCursor = 1
    MoveAnchor = 0
    NextBlock = 16
    NextCell = 21
    NextCharacter = 17
    NextRow = 23
    NextWord = 18
    NoMove = 0
    PreviousBlock = 6
    PreviousCell = 22
    PreviousCharacter = 7
    PreviousRow = 24
    PreviousWord = 8
    Right = 19
    Start = 1
    StartOfBlock = 4
    StartOfLine = 3
    StartOfWord = 5
    Up = 2
    WordLeft = 10
    WordRight = 20
    WordUnderCursor = 0


class QTextDocument(__PyQt4_QtCore.QObject):

    """
    QTextDocument(QObject parent=None)
    QTextDocument(QString, QObject parent=None)
    """
    # real signature unknown; restored from __doc__

    def addResource(self, p_int, QUrl, QVariant):
        """ QTextDocument.addResource(int, QUrl, QVariant) """
        pass

    def adjustSize(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.adjustSize() """
        pass

    def allFormats(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.allFormats() -> list-of-QTextFormat """
        pass

    # real signature unknown; restored from __doc__
    def availableRedoSteps(self):
        """ QTextDocument.availableRedoSteps() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def availableUndoSteps(self):
        """ QTextDocument.availableUndoSteps() -> int """
        return 0

    def begin(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.begin() -> QTextBlock """
        return QTextBlock

    def blockCount(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.blockCount() -> int """
        return 0

    def blockCountChanged(self, *args, **kwargs):  # real signature unknown
        """ QTextDocument.blockCountChanged[int] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def characterAt(self, p_int):
        """ QTextDocument.characterAt(int) -> QChar """
        pass

    def characterCount(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.characterCount() -> int """
        return 0

    def clear(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.clear() """
        pass

    # real signature unknown; restored from __doc__
    def clearUndoRedoStacks(self, QTextDocument_Stacks_stacks=None):
        """ QTextDocument.clearUndoRedoStacks(QTextDocument.Stacks stacks=QTextDocument.UndoAndRedoStacks) """
        pass

    # real signature unknown; restored from __doc__
    def clone(self, QObject_parent=None):
        """ QTextDocument.clone(QObject parent=None) -> QTextDocument """
        return QTextDocument

    def contentsChange(self, *args, **kwargs):  # real signature unknown
        """ QTextDocument.contentsChange[int, int, int] [signal] """
        pass

    def contentsChanged(self, *args, **kwargs):  # real signature unknown
        """ QTextDocument.contentsChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def createObject(self, QTextFormat):
        """ QTextDocument.createObject(QTextFormat) -> QTextObject """
        return QTextObject

    def cursorPositionChanged(self, *args, **kwargs):  # real signature unknown
        """ QTextDocument.cursorPositionChanged[QTextCursor] [signal] """
        pass

    def defaultFont(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.defaultFont() -> QFont """
        return QFont

    # real signature unknown; restored from __doc__
    def defaultStyleSheet(self):
        """ QTextDocument.defaultStyleSheet() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def defaultTextOption(self):
        """ QTextDocument.defaultTextOption() -> QTextOption """
        return QTextOption

    def documentLayout(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.documentLayout() -> QAbstractTextDocumentLayout """
        return QAbstractTextDocumentLayout

    def documentLayoutChanged(self, *args, **kwargs):  # real signature unknown
        """ QTextDocument.documentLayoutChanged[] [signal] """
        pass

    def documentMargin(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.documentMargin() -> float """
        return 0.0

    # real signature unknown; NOTE: unreliably restored from __doc__
    def drawContents(self, QPainter, QRectF_rect=None, *args, **kwargs):
        """ QTextDocument.drawContents(QPainter, QRectF rect=QRectF()) """
        pass

    def end(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.end() -> QTextBlock """
        return QTextBlock

    # real signature unknown; restored from __doc__ with multiple overloads
    def find(self, *__args):
        """
        QTextDocument.find(QString, int position=0, QTextDocument.FindFlags options=0) -> QTextCursor
        QTextDocument.find(QRegExp, int position=0, QTextDocument.FindFlags options=0) -> QTextCursor
        QTextDocument.find(QString, QTextCursor, QTextDocument.FindFlags options=0) -> QTextCursor
        QTextDocument.find(QRegExp, QTextCursor, QTextDocument.FindFlags options=0) -> QTextCursor
        """
        return QTextCursor

    # real signature unknown; restored from __doc__
    def findBlock(self, p_int):
        """ QTextDocument.findBlock(int) -> QTextBlock """
        return QTextBlock

    # real signature unknown; restored from __doc__
    def findBlockByLineNumber(self, p_int):
        """ QTextDocument.findBlockByLineNumber(int) -> QTextBlock """
        return QTextBlock

    # real signature unknown; restored from __doc__
    def findBlockByNumber(self, p_int):
        """ QTextDocument.findBlockByNumber(int) -> QTextBlock """
        return QTextBlock

    def FindFlag(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def FindFlags(self, *__args):
        """
        QTextDocument.FindFlags(QTextDocument.FindFlags)
        QTextDocument.FindFlags(int)
        QTextDocument.FindFlags()
        """
        pass

    def firstBlock(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.firstBlock() -> QTextBlock """
        return QTextBlock

    def idealWidth(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.idealWidth() -> float """
        return 0.0

    def indentWidth(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.indentWidth() -> float """
        return 0.0

    def isEmpty(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.isEmpty() -> bool """
        return False

    def isModified(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.isModified() -> bool """
        return False

    def isRedoAvailable(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.isRedoAvailable() -> bool """
        return False

    def isUndoAvailable(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.isUndoAvailable() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isUndoRedoEnabled(self):
        """ QTextDocument.isUndoRedoEnabled() -> bool """
        return False

    def lastBlock(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.lastBlock() -> QTextBlock """
        return QTextBlock

    def lineCount(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.lineCount() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def loadResource(self, p_int, QUrl):
        """ QTextDocument.loadResource(int, QUrl) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def markContentsDirty(self, p_int, p_int_1):
        """ QTextDocument.markContentsDirty(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def maximumBlockCount(self):
        """ QTextDocument.maximumBlockCount() -> int """
        return 0

    def MetaInformation(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def metaInformation(self, QTextDocument_MetaInformation):
        """ QTextDocument.metaInformation(QTextDocument.MetaInformation) -> QString """
        pass

    def modificationChanged(self, *args, **kwargs):  # real signature unknown
        """ QTextDocument.modificationChanged[bool] [signal] """
        pass

    def object(self, p_int):  # real signature unknown; restored from __doc__
        """ QTextDocument.object(int) -> QTextObject """
        return QTextObject

    # real signature unknown; restored from __doc__
    def objectForFormat(self, QTextFormat):
        """ QTextDocument.objectForFormat(QTextFormat) -> QTextObject """
        return QTextObject

    def pageCount(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.pageCount() -> int """
        return 0

    def pageSize(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.pageSize() -> QSizeF """
        pass

    # real signature unknown; restored from __doc__
    def print_(self, QPrinter):
        """ QTextDocument.print_(QPrinter) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def redo(self, QTextCursor=None):
        """
        QTextDocument.redo()
        QTextDocument.redo(QTextCursor)
        """
        pass

    def redoAvailable(self, *args, **kwargs):  # real signature unknown
        """ QTextDocument.redoAvailable[bool] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def resource(self, p_int, QUrl):
        """ QTextDocument.resource(int, QUrl) -> QVariant """
        pass

    def ResourceType(self, *args, **kwargs):  # real signature unknown
        pass

    def revision(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.revision() -> int """
        return 0

    def rootFrame(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.rootFrame() -> QTextFrame """
        return QTextFrame

    # real signature unknown; restored from __doc__
    def setDefaultFont(self, QFont):
        """ QTextDocument.setDefaultFont(QFont) """
        pass

    # real signature unknown; restored from __doc__
    def setDefaultStyleSheet(self, QString):
        """ QTextDocument.setDefaultStyleSheet(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setDefaultTextOption(self, QTextOption):
        """ QTextDocument.setDefaultTextOption(QTextOption) """
        pass

    # real signature unknown; restored from __doc__
    def setDocumentLayout(self, QAbstractTextDocumentLayout):
        """ QTextDocument.setDocumentLayout(QAbstractTextDocumentLayout) """
        pass

    # real signature unknown; restored from __doc__
    def setDocumentMargin(self, p_float):
        """ QTextDocument.setDocumentMargin(float) """
        pass

    # real signature unknown; restored from __doc__
    def setHtml(self, QString):
        """ QTextDocument.setHtml(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setIndentWidth(self, p_float):
        """ QTextDocument.setIndentWidth(float) """
        pass

    # real signature unknown; restored from __doc__
    def setMaximumBlockCount(self, p_int):
        """ QTextDocument.setMaximumBlockCount(int) """
        pass

    # real signature unknown; restored from __doc__
    def setMetaInformation(self, QTextDocument_MetaInformation, QString):
        """ QTextDocument.setMetaInformation(QTextDocument.MetaInformation, QString) """
        pass

    # real signature unknown; restored from __doc__
    def setModified(self, bool_on=True):
        """ QTextDocument.setModified(bool on=True) """
        pass

    # real signature unknown; restored from __doc__
    def setPageSize(self, QSizeF):
        """ QTextDocument.setPageSize(QSizeF) """
        pass

    # real signature unknown; restored from __doc__
    def setPlainText(self, QString):
        """ QTextDocument.setPlainText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTextWidth(self, p_float):
        """ QTextDocument.setTextWidth(float) """
        pass

    # real signature unknown; restored from __doc__
    def setUndoRedoEnabled(self, bool):
        """ QTextDocument.setUndoRedoEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setUseDesignMetrics(self, bool):
        """ QTextDocument.setUseDesignMetrics(bool) """
        pass

    def size(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.size() -> QSizeF """
        pass

    def Stacks(self, *args, **kwargs):  # real signature unknown
        pass

    def textWidth(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.textWidth() -> float """
        return 0.0

    # real signature unknown; NOTE: unreliably restored from __doc__
    def toHtml(self, QByteArray_encoding=None, *args, **kwargs):
        """ QTextDocument.toHtml(QByteArray encoding=QByteArray()) -> QString """
        pass

    def toPlainText(self):  # real signature unknown; restored from __doc__
        """ QTextDocument.toPlainText() -> QString """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def undo(self, QTextCursor=None):
        """
        QTextDocument.undo()
        QTextDocument.undo(QTextCursor)
        """
        pass

    def undoAvailable(self, *args, **kwargs):  # real signature unknown
        """ QTextDocument.undoAvailable[bool] [signal] """
        pass

    def undoCommandAdded(self, *args, **kwargs):  # real signature unknown
        """ QTextDocument.undoCommandAdded[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def useDesignMetrics(self):
        """ QTextDocument.useDesignMetrics() -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    DocumentTitle = 0
    DocumentUrl = 1
    FindBackward = 1
    FindCaseSensitively = 2
    FindWholeWords = 4
    HtmlResource = 1
    ImageResource = 2
    RedoStack = 2
    StyleSheetResource = 3
    UndoAndRedoStacks = 3
    UndoStack = 1
    UserResource = 100


class QTextDocumentFragment():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QTextDocumentFragment()
    QTextDocumentFragment(QTextDocument)
    QTextDocumentFragment(QTextCursor)
    QTextDocumentFragment(QTextDocumentFragment)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def fromHtml(self, QString, QTextDocument=None):
        """
        QTextDocumentFragment.fromHtml(QString) -> QTextDocumentFragment
        QTextDocumentFragment.fromHtml(QString, QTextDocument) -> QTextDocumentFragment
        """
        return QTextDocumentFragment

    # real signature unknown; restored from __doc__
    def fromPlainText(self, QString):
        """ QTextDocumentFragment.fromPlainText(QString) -> QTextDocumentFragment """
        return QTextDocumentFragment

    def isEmpty(self):  # real signature unknown; restored from __doc__
        """ QTextDocumentFragment.isEmpty() -> bool """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def toHtml(self, QByteArray=None):
        """
        QTextDocumentFragment.toHtml() -> QString
        QTextDocumentFragment.toHtml(QByteArray) -> QString
        """
        pass

    def toPlainText(self):  # real signature unknown; restored from __doc__
        """ QTextDocumentFragment.toPlainText() -> QString """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    __weakref__ = property(lambda self: object())  # default


class QTextDocumentWriter():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QTextDocumentWriter()
    QTextDocumentWriter(QIODevice, QByteArray)
    QTextDocumentWriter(QString, QByteArray format=QByteArray())
    """

    def codec(self):  # real signature unknown; restored from __doc__
        """ QTextDocumentWriter.codec() -> QTextCodec """
        pass

    def device(self):  # real signature unknown; restored from __doc__
        """ QTextDocumentWriter.device() -> QIODevice """
        pass

    def fileName(self):  # real signature unknown; restored from __doc__
        """ QTextDocumentWriter.fileName() -> QString """
        pass

    def format(self):  # real signature unknown; restored from __doc__
        """ QTextDocumentWriter.format() -> QByteArray """
        pass

    # real signature unknown; restored from __doc__
    def setCodec(self, QTextCodec):
        """ QTextDocumentWriter.setCodec(QTextCodec) """
        pass

    # real signature unknown; restored from __doc__
    def setDevice(self, QIODevice):
        """ QTextDocumentWriter.setDevice(QIODevice) """
        pass

    # real signature unknown; restored from __doc__
    def setFileName(self, QString):
        """ QTextDocumentWriter.setFileName(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setFormat(self, QByteArray):
        """ QTextDocumentWriter.setFormat(QByteArray) """
        pass

    # real signature unknown; restored from __doc__
    def supportedDocumentFormats(self):
        """ QTextDocumentWriter.supportedDocumentFormats() -> list-of-QByteArray """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def write(self, *__args):
        """
        QTextDocumentWriter.write(QTextDocument) -> bool
        QTextDocumentWriter.write(QTextDocumentFragment) -> bool
        """
        return False

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    __weakref__ = property(lambda self: object())  # default


class QTextFragment():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QTextFragment()
    QTextFragment(QTextFragment)
    """

    def charFormat(self):  # real signature unknown; restored from __doc__
        """ QTextFragment.charFormat() -> QTextCharFormat """
        return QTextCharFormat

    def charFormatIndex(self):  # real signature unknown; restored from __doc__
        """ QTextFragment.charFormatIndex() -> int """
        return 0

    def contains(self, p_int):  # real signature unknown; restored from __doc__
        """ QTextFragment.contains(int) -> bool """
        return False

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QTextFragment.isValid() -> bool """
        return False

    def length(self):  # real signature unknown; restored from __doc__
        """ QTextFragment.length() -> int """
        return 0

    def position(self):  # real signature unknown; restored from __doc__
        """ QTextFragment.position() -> int """
        return 0

    def text(self):  # real signature unknown; restored from __doc__
        """ QTextFragment.text() -> QString """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QTextFragment=None):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QTextFrame(QTextObject):

    """ QTextFrame(QTextDocument) """

    def begin(self):  # real signature unknown; restored from __doc__
        """ QTextFrame.begin() -> QTextFrame.iterator """
        pass

    def childFrames(self):  # real signature unknown; restored from __doc__
        """ QTextFrame.childFrames() -> list-of-QTextFrame """
        pass

    def end(self):  # real signature unknown; restored from __doc__
        """ QTextFrame.end() -> QTextFrame.iterator """
        pass

    # real signature unknown; restored from __doc__
    def firstCursorPosition(self):
        """ QTextFrame.firstCursorPosition() -> QTextCursor """
        return QTextCursor

    def firstPosition(self):  # real signature unknown; restored from __doc__
        """ QTextFrame.firstPosition() -> int """
        return 0

    def frameFormat(self):  # real signature unknown; restored from __doc__
        """ QTextFrame.frameFormat() -> QTextFrameFormat """
        return QTextFrameFormat

    # real signature unknown; restored from __doc__ with multiple overloads
    def iterator(self, QTextFrame_iterator=None):
        """
        QTextFrame.iterator()
        QTextFrame.iterator(QTextFrame.iterator)
        """
        pass

    # real signature unknown; restored from __doc__
    def lastCursorPosition(self):
        """ QTextFrame.lastCursorPosition() -> QTextCursor """
        return QTextCursor

    def lastPosition(self):  # real signature unknown; restored from __doc__
        """ QTextFrame.lastPosition() -> int """
        return 0

    def parentFrame(self):  # real signature unknown; restored from __doc__
        """ QTextFrame.parentFrame() -> QTextFrame """
        return QTextFrame

    # real signature unknown; restored from __doc__
    def setFrameFormat(self, QTextFrameFormat):
        """ QTextFrame.setFrameFormat(QTextFrameFormat) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QTextDocument):
        pass


class QTextFrameFormat(QTextFormat):

    """
    QTextFrameFormat()
    QTextFrameFormat(QTextFrameFormat)
    """

    def border(self):  # real signature unknown; restored from __doc__
        """ QTextFrameFormat.border() -> float """
        return 0.0

    def borderBrush(self):  # real signature unknown; restored from __doc__
        """ QTextFrameFormat.borderBrush() -> QBrush """
        return QBrush

    def BorderStyle(self, *args, **kwargs):  # real signature unknown
        pass

    def borderStyle(self):  # real signature unknown; restored from __doc__
        """ QTextFrameFormat.borderStyle() -> QTextFrameFormat.BorderStyle """
        pass

    def bottomMargin(self):  # real signature unknown; restored from __doc__
        """ QTextFrameFormat.bottomMargin() -> float """
        return 0.0

    def height(self):  # real signature unknown; restored from __doc__
        """ QTextFrameFormat.height() -> QTextLength """
        return QTextLength

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QTextFrameFormat.isValid() -> bool """
        return False

    def leftMargin(self):  # real signature unknown; restored from __doc__
        """ QTextFrameFormat.leftMargin() -> float """
        return 0.0

    def margin(self):  # real signature unknown; restored from __doc__
        """ QTextFrameFormat.margin() -> float """
        return 0.0

    def padding(self):  # real signature unknown; restored from __doc__
        """ QTextFrameFormat.padding() -> float """
        return 0.0

    def pageBreakPolicy(self):  # real signature unknown; restored from __doc__
        """ QTextFrameFormat.pageBreakPolicy() -> QTextFormat.PageBreakFlags """
        pass

    def Position(self, *args, **kwargs):  # real signature unknown
        pass

    def position(self):  # real signature unknown; restored from __doc__
        """ QTextFrameFormat.position() -> QTextFrameFormat.Position """
        pass

    def rightMargin(self):  # real signature unknown; restored from __doc__
        """ QTextFrameFormat.rightMargin() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def setBorder(self, p_float):
        """ QTextFrameFormat.setBorder(float) """
        pass

    # real signature unknown; restored from __doc__
    def setBorderBrush(self, QBrush):
        """ QTextFrameFormat.setBorderBrush(QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def setBorderStyle(self, QTextFrameFormat_BorderStyle):
        """ QTextFrameFormat.setBorderStyle(QTextFrameFormat.BorderStyle) """
        pass

    # real signature unknown; restored from __doc__
    def setBottomMargin(self, p_float):
        """ QTextFrameFormat.setBottomMargin(float) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setHeight(self, *__args):
        """
        QTextFrameFormat.setHeight(float)
        QTextFrameFormat.setHeight(QTextLength)
        """
        pass

    # real signature unknown; restored from __doc__
    def setLeftMargin(self, p_float):
        """ QTextFrameFormat.setLeftMargin(float) """
        pass

    # real signature unknown; restored from __doc__
    def setMargin(self, p_float):
        """ QTextFrameFormat.setMargin(float) """
        pass

    # real signature unknown; restored from __doc__
    def setPadding(self, p_float):
        """ QTextFrameFormat.setPadding(float) """
        pass

    # real signature unknown; restored from __doc__
    def setPageBreakPolicy(self, QTextFormat_PageBreakFlags):
        """ QTextFrameFormat.setPageBreakPolicy(QTextFormat.PageBreakFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setPosition(self, QTextFrameFormat_Position):
        """ QTextFrameFormat.setPosition(QTextFrameFormat.Position) """
        pass

    # real signature unknown; restored from __doc__
    def setRightMargin(self, p_float):
        """ QTextFrameFormat.setRightMargin(float) """
        pass

    # real signature unknown; restored from __doc__
    def setTopMargin(self, p_float):
        """ QTextFrameFormat.setTopMargin(float) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setWidth(self, *__args):
        """
        QTextFrameFormat.setWidth(QTextLength)
        QTextFrameFormat.setWidth(float)
        """
        pass

    def topMargin(self):  # real signature unknown; restored from __doc__
        """ QTextFrameFormat.topMargin() -> float """
        return 0.0

    def width(self):  # real signature unknown; restored from __doc__
        """ QTextFrameFormat.width() -> QTextLength """
        return QTextLength

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QTextFrameFormat=None):
        pass

    BorderStyle_Dashed = 2
    BorderStyle_DotDash = 5
    BorderStyle_DotDotDash = 6
    BorderStyle_Dotted = 1
    BorderStyle_Double = 4
    BorderStyle_Groove = 7
    BorderStyle_Inset = 9
    BorderStyle_None = 0
    BorderStyle_Outset = 10
    BorderStyle_Ridge = 8
    BorderStyle_Solid = 3
    FloatLeft = 1
    FloatRight = 2
    InFlow = 0


class QTextImageFormat(QTextCharFormat):

    """
    QTextImageFormat()
    QTextImageFormat(QTextImageFormat)
    """

    def height(self):  # real signature unknown; restored from __doc__
        """ QTextImageFormat.height() -> float """
        return 0.0

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QTextImageFormat.isValid() -> bool """
        return False

    def name(self):  # real signature unknown; restored from __doc__
        """ QTextImageFormat.name() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def setHeight(self, p_float):
        """ QTextImageFormat.setHeight(float) """
        pass

    # real signature unknown; restored from __doc__
    def setName(self, QString):
        """ QTextImageFormat.setName(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setWidth(self, p_float):
        """ QTextImageFormat.setWidth(float) """
        pass

    def width(self):  # real signature unknown; restored from __doc__
        """ QTextImageFormat.width() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QTextImageFormat=None):
        pass


class QTextInlineObject():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QTextInlineObject()
    QTextInlineObject(QTextInlineObject)
    """

    def ascent(self):  # real signature unknown; restored from __doc__
        """ QTextInlineObject.ascent() -> float """
        return 0.0

    def descent(self):  # real signature unknown; restored from __doc__
        """ QTextInlineObject.descent() -> float """
        return 0.0

    def format(self):  # real signature unknown; restored from __doc__
        """ QTextInlineObject.format() -> QTextFormat """
        return QTextFormat

    def formatIndex(self):  # real signature unknown; restored from __doc__
        """ QTextInlineObject.formatIndex() -> int """
        return 0

    def height(self):  # real signature unknown; restored from __doc__
        """ QTextInlineObject.height() -> float """
        return 0.0

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QTextInlineObject.isValid() -> bool """
        return False

    def rect(self):  # real signature unknown; restored from __doc__
        """ QTextInlineObject.rect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def setAscent(self, p_float):
        """ QTextInlineObject.setAscent(float) """
        pass

    # real signature unknown; restored from __doc__
    def setDescent(self, p_float):
        """ QTextInlineObject.setDescent(float) """
        pass

    # real signature unknown; restored from __doc__
    def setWidth(self, p_float):
        """ QTextInlineObject.setWidth(float) """
        pass

    def textDirection(self):  # real signature unknown; restored from __doc__
        """ QTextInlineObject.textDirection() -> Qt.LayoutDirection """
        pass

    def textPosition(self):  # real signature unknown; restored from __doc__
        """ QTextInlineObject.textPosition() -> int """
        return 0

    def width(self):  # real signature unknown; restored from __doc__
        """ QTextInlineObject.width() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QTextInlineObject=None):
        pass

    __weakref__ = property(lambda self: object())  # default


class QTextItem():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QTextItem()
    QTextItem(QTextItem)
    """

    def ascent(self):  # real signature unknown; restored from __doc__
        """ QTextItem.ascent() -> float """
        return 0.0

    def descent(self):  # real signature unknown; restored from __doc__
        """ QTextItem.descent() -> float """
        return 0.0

    def font(self):  # real signature unknown; restored from __doc__
        """ QTextItem.font() -> QFont """
        return QFont

    def RenderFlag(self, *args, **kwargs):  # real signature unknown
        pass

    def renderFlags(self):  # real signature unknown; restored from __doc__
        """ QTextItem.renderFlags() -> QTextItem.RenderFlags """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def RenderFlags(self, *__args):
        """
        QTextItem.RenderFlags(QTextItem.RenderFlags)
        QTextItem.RenderFlags(int)
        QTextItem.RenderFlags()
        """
        pass

    def text(self):  # real signature unknown; restored from __doc__
        """ QTextItem.text() -> QString """
        pass

    def width(self):  # real signature unknown; restored from __doc__
        """ QTextItem.width() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QTextItem=None):
        pass

    __weakref__ = property(lambda self: object())  # default

    Overline = 16
    RightToLeft = 1
    StrikeOut = 64
    Underline = 32


class QTextLayout():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QTextLayout()
    QTextLayout(QString)
    QTextLayout(QString, QFont, QPaintDevice paintDevice=None)
    QTextLayout(QTextBlock)
    """
    # real signature unknown; restored from __doc__

    def additionalFormats(self):
        """ QTextLayout.additionalFormats() -> list-of-QTextLayout.FormatRange """
        pass

    def beginLayout(self):  # real signature unknown; restored from __doc__
        """ QTextLayout.beginLayout() """
        pass

    def boundingRect(self):  # real signature unknown; restored from __doc__
        """ QTextLayout.boundingRect() -> QRectF """
        pass

    def cacheEnabled(self):  # real signature unknown; restored from __doc__
        """ QTextLayout.cacheEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def clearAdditionalFormats(self):
        """ QTextLayout.clearAdditionalFormats() """
        pass

    def clearLayout(self):  # real signature unknown; restored from __doc__
        """ QTextLayout.clearLayout() """
        pass

    def createLine(self):  # real signature unknown; restored from __doc__
        """ QTextLayout.createLine() -> QTextLine """
        return QTextLine

    def CursorMode(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def draw(self, QPainter, QPointF, list_of_QTextLayout_FormatRange_selections=None, QRectF_clip=None, *args, **kwargs):
        """ QTextLayout.draw(QPainter, QPointF, list-of-QTextLayout.FormatRange selections=list-of-QTextLayout.FormatRange, QRectF clip=QRectF()) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def drawCursor(self, QPainter, QPointF, p_int, p_int_1=None):
        """
        QTextLayout.drawCursor(QPainter, QPointF, int)
        QTextLayout.drawCursor(QPainter, QPointF, int, int)
        """
        pass

    def endLayout(self):  # real signature unknown; restored from __doc__
        """ QTextLayout.endLayout() """
        pass

    def font(self):  # real signature unknown; restored from __doc__
        """ QTextLayout.font() -> QFont """
        return QFont

    # real signature unknown; restored from __doc__ with multiple overloads
    def FormatRange(self, QTextLayout_FormatRange=None):
        """
        QTextLayout.FormatRange()
        QTextLayout.FormatRange(QTextLayout.FormatRange)
        """
        pass

    # real signature unknown; restored from __doc__
    def isValidCursorPosition(self, p_int):
        """ QTextLayout.isValidCursorPosition(int) -> bool """
        return False

    def lineAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QTextLayout.lineAt(int) -> QTextLine """
        return QTextLine

    def lineCount(self):  # real signature unknown; restored from __doc__
        """ QTextLayout.lineCount() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def lineForTextPosition(self, p_int):
        """ QTextLayout.lineForTextPosition(int) -> QTextLine """
        return QTextLine

    def maximumWidth(self):  # real signature unknown; restored from __doc__
        """ QTextLayout.maximumWidth() -> float """
        return 0.0

    def minimumWidth(self):  # real signature unknown; restored from __doc__
        """ QTextLayout.minimumWidth() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def nextCursorPosition(self, p_int, QTextLayout_CursorMode_mode=None):
        """ QTextLayout.nextCursorPosition(int, QTextLayout.CursorMode mode=QTextLayout.SkipCharacters) -> int """
        return 0

    def position(self):  # real signature unknown; restored from __doc__
        """ QTextLayout.position() -> QPointF """
        pass

    # real signature unknown; restored from __doc__
    def preeditAreaPosition(self):
        """ QTextLayout.preeditAreaPosition() -> int """
        return 0

    def preeditAreaText(self):  # real signature unknown; restored from __doc__
        """ QTextLayout.preeditAreaText() -> QString """
        pass

    # real signature unknown; restored from __doc__
    def previousCursorPosition(self, p_int, QTextLayout_CursorMode_mode=None):
        """ QTextLayout.previousCursorPosition(int, QTextLayout.CursorMode mode=QTextLayout.SkipCharacters) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setAdditionalFormats(self, list_of_QTextLayout_FormatRange):
        """ QTextLayout.setAdditionalFormats(list-of-QTextLayout.FormatRange) """
        pass

    # real signature unknown; restored from __doc__
    def setCacheEnabled(self, bool):
        """ QTextLayout.setCacheEnabled(bool) """
        pass

    def setFont(self, QFont):  # real signature unknown; restored from __doc__
        """ QTextLayout.setFont(QFont) """
        pass

    # real signature unknown; restored from __doc__
    def setPosition(self, QPointF):
        """ QTextLayout.setPosition(QPointF) """
        pass

    # real signature unknown; restored from __doc__
    def setPreeditArea(self, p_int, QString):
        """ QTextLayout.setPreeditArea(int, QString) """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, QString):
        """ QTextLayout.setText(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTextOption(self, QTextOption):
        """ QTextLayout.setTextOption(QTextOption) """
        pass

    def text(self):  # real signature unknown; restored from __doc__
        """ QTextLayout.text() -> QString """
        pass

    def textOption(self):  # real signature unknown; restored from __doc__
        """ QTextLayout.textOption() -> QTextOption """
        return QTextOption

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    __weakref__ = property(lambda self: object())  # default

    SkipCharacters = 0
    SkipWords = 1


class QTextLength():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QTextLength()
    QTextLength(QTextLength.Type, float)
    QTextLength(QVariant)
    QTextLength(QTextLength)
    """

    def rawValue(self):  # real signature unknown; restored from __doc__
        """ QTextLength.rawValue() -> float """
        return 0.0

    def type(self):  # real signature unknown; restored from __doc__
        """ QTextLength.type() -> QTextLength.Type """
        pass

    def Type(self, *args, **kwargs):  # real signature unknown
        pass

    def value(self, p_float):  # real signature unknown; restored from __doc__
        """ QTextLength.value(float) -> float """
        return 0.0

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default

    FixedLength = 1
    PercentageLength = 2
    VariableLength = 0


class QTextLine():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QTextLine()
    QTextLine(QTextLine)
    """

    def ascent(self):  # real signature unknown; restored from __doc__
        """ QTextLine.ascent() -> float """
        return 0.0

    def CursorPosition(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def cursorToX(self, p_int, QTextLine_Edge_edge=None):
        """ QTextLine.cursorToX(int, QTextLine.Edge edge=QTextLine.Leading) -> (float, int) """
        pass

    def descent(self):  # real signature unknown; restored from __doc__
        """ QTextLine.descent() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def draw(self, QPainter, QPointF, QTextLayout_FormatRange_selection=None):
        """ QTextLine.draw(QPainter, QPointF, QTextLayout.FormatRange selection=None) """
        pass

    def Edge(self, *args, **kwargs):  # real signature unknown
        pass

    def height(self):  # real signature unknown; restored from __doc__
        """ QTextLine.height() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def horizontalAdvance(self):
        """ QTextLine.horizontalAdvance() -> float """
        return 0.0

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QTextLine.isValid() -> bool """
        return False

    def leading(self):  # real signature unknown; restored from __doc__
        """ QTextLine.leading() -> float """
        return 0.0

    def leadingIncluded(self):  # real signature unknown; restored from __doc__
        """ QTextLine.leadingIncluded() -> bool """
        return False

    def lineNumber(self):  # real signature unknown; restored from __doc__
        """ QTextLine.lineNumber() -> int """
        return 0

    def naturalTextRect(self):  # real signature unknown; restored from __doc__
        """ QTextLine.naturalTextRect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def naturalTextWidth(self):
        """ QTextLine.naturalTextWidth() -> float """
        return 0.0

    def position(self):  # real signature unknown; restored from __doc__
        """ QTextLine.position() -> QPointF """
        pass

    def rect(self):  # real signature unknown; restored from __doc__
        """ QTextLine.rect() -> QRectF """
        pass

    # real signature unknown; restored from __doc__
    def setLeadingIncluded(self, bool):
        """ QTextLine.setLeadingIncluded(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setLineWidth(self, p_float):
        """ QTextLine.setLineWidth(float) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setNumColumns(self, p_int, p_float=None):
        """
        QTextLine.setNumColumns(int)
        QTextLine.setNumColumns(int, float)
        """
        pass

    # real signature unknown; restored from __doc__
    def setPosition(self, QPointF):
        """ QTextLine.setPosition(QPointF) """
        pass

    def textLength(self):  # real signature unknown; restored from __doc__
        """ QTextLine.textLength() -> int """
        return 0

    def textStart(self):  # real signature unknown; restored from __doc__
        """ QTextLine.textStart() -> int """
        return 0

    def width(self):  # real signature unknown; restored from __doc__
        """ QTextLine.width() -> float """
        return 0.0

    def x(self):  # real signature unknown; restored from __doc__
        """ QTextLine.x() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def xToCursor(self, p_float, QTextLine_CursorPosition_edge=None):
        """ QTextLine.xToCursor(float, QTextLine.CursorPosition edge=QTextLine.CursorBetweenCharacters) -> int """
        return 0

    def y(self):  # real signature unknown; restored from __doc__
        """ QTextLine.y() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QTextLine=None):
        pass

    __weakref__ = property(lambda self: object())  # default

    CursorBetweenCharacters = 0
    CursorOnCharacter = 1
    Leading = 0
    Trailing = 1


class QTextList(QTextBlockGroup):

    """ QTextList(QTextDocument) """

    def add(self, QTextBlock):  # real signature unknown; restored from __doc__
        """ QTextList.add(QTextBlock) """
        pass

    def count(self):  # real signature unknown; restored from __doc__
        """ QTextList.count() -> int """
        return 0

    def format(self):  # real signature unknown; restored from __doc__
        """ QTextList.format() -> QTextListFormat """
        return QTextListFormat

    def isEmpty(self):  # real signature unknown; restored from __doc__
        """ QTextList.isEmpty() -> bool """
        return False

    def item(self, p_int):  # real signature unknown; restored from __doc__
        """ QTextList.item(int) -> QTextBlock """
        return QTextBlock

    # real signature unknown; restored from __doc__
    def itemNumber(self, QTextBlock):
        """ QTextList.itemNumber(QTextBlock) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def itemText(self, QTextBlock):
        """ QTextList.itemText(QTextBlock) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def remove(self, QTextBlock):
        """ QTextList.remove(QTextBlock) """
        pass

    # real signature unknown; restored from __doc__
    def removeItem(self, p_int):
        """ QTextList.removeItem(int) """
        pass

    # real signature unknown; restored from __doc__
    def setFormat(self, QTextListFormat):
        """ QTextList.setFormat(QTextListFormat) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QTextDocument):
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass


class QTextListFormat(QTextFormat):

    """
    QTextListFormat()
    QTextListFormat(QTextListFormat)
    """

    def indent(self):  # real signature unknown; restored from __doc__
        """ QTextListFormat.indent() -> int """
        return 0

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QTextListFormat.isValid() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setIndent(self, p_int):
        """ QTextListFormat.setIndent(int) """
        pass

    # real signature unknown; restored from __doc__
    def setStyle(self, QTextListFormat_Style):
        """ QTextListFormat.setStyle(QTextListFormat.Style) """
        pass

    def Style(self, *args, **kwargs):  # real signature unknown
        pass

    def style(self):  # real signature unknown; restored from __doc__
        """ QTextListFormat.style() -> QTextListFormat.Style """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QTextListFormat=None):
        pass

    ListCircle = -2
    ListDecimal = -4
    ListDisc = -1
    ListLowerAlpha = -5
    ListLowerRoman = -7
    ListSquare = -3
    ListUpperAlpha = -6
    ListUpperRoman = -8


class QTextOption():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QTextOption()
    QTextOption(Qt.Alignment)
    QTextOption(QTextOption)
    """

    def alignment(self):  # real signature unknown; restored from __doc__
        """ QTextOption.alignment() -> Qt.Alignment """
        pass

    def Flag(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def Flags(self, *__args):
        """
        QTextOption.Flags(QTextOption.Flags)
        QTextOption.Flags(int)
        QTextOption.Flags()
        """
        pass

    def flags(self):  # real signature unknown; restored from __doc__
        """ QTextOption.flags() -> QTextOption.Flags """
        pass

    # real signature unknown; restored from __doc__
    def setAlignment(self, Qt_Alignment):
        """ QTextOption.setAlignment(Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setFlags(self, QTextOption_Flags):
        """ QTextOption.setFlags(QTextOption.Flags) """
        pass

    # real signature unknown; restored from __doc__
    def setTabArray(self, list_of_float):
        """ QTextOption.setTabArray(list-of-float) """
        pass

    # real signature unknown; restored from __doc__
    def setTabs(self, list_of_QTextOption_Tab):
        """ QTextOption.setTabs(list-of-QTextOption.Tab) """
        pass

    # real signature unknown; restored from __doc__
    def setTabStop(self, p_float):
        """ QTextOption.setTabStop(float) """
        pass

    # real signature unknown; restored from __doc__
    def setTextDirection(self, Qt_LayoutDirection):
        """ QTextOption.setTextDirection(Qt.LayoutDirection) """
        pass

    # real signature unknown; restored from __doc__
    def setUseDesignMetrics(self, bool):
        """ QTextOption.setUseDesignMetrics(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setWrapMode(self, QTextOption_WrapMode):
        """ QTextOption.setWrapMode(QTextOption.WrapMode) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def Tab(self, *__args):
        """
        QTextOption.Tab()
        QTextOption.Tab(float, QTextOption.TabType, QChar delim=QChar())
        QTextOption.Tab(QTextOption.Tab)
        """
        pass

    def tabArray(self):  # real signature unknown; restored from __doc__
        """ QTextOption.tabArray() -> list-of-float """
        pass

    def tabs(self):  # real signature unknown; restored from __doc__
        """ QTextOption.tabs() -> list-of-QTextOption.Tab """
        pass

    def tabStop(self):  # real signature unknown; restored from __doc__
        """ QTextOption.tabStop() -> float """
        return 0.0

    def TabType(self, *args, **kwargs):  # real signature unknown
        pass

    def textDirection(self):  # real signature unknown; restored from __doc__
        """ QTextOption.textDirection() -> Qt.LayoutDirection """
        pass

    # real signature unknown; restored from __doc__
    def useDesignMetrics(self):
        """ QTextOption.useDesignMetrics() -> bool """
        return False

    def wrapMode(self):  # real signature unknown; restored from __doc__
        """ QTextOption.wrapMode() -> QTextOption.WrapMode """
        pass

    def WrapMode(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    __weakref__ = property(lambda self: object())  # default

    AddSpaceForLineAndParagraphSeparators = 4
    CenterTab = 2
    DelimiterTab = 3
    IncludeTrailingSpaces = -2147483648
    LeftTab = 0
    ManualWrap = 2
    NoWrap = 0
    RightTab = 1
    ShowLineAndParagraphSeparators = 2
    ShowTabsAndSpaces = 1
    SuppressColors = 8
    WordWrap = 1
    WrapAnywhere = 3
    WrapAtWordBoundaryOrAnywhere = 4


class QTextTable(QTextFrame):

    """ QTextTable(QTextDocument) """
    # real signature unknown; restored from __doc__

    def appendColumns(self, p_int):
        """ QTextTable.appendColumns(int) """
        pass

    # real signature unknown; restored from __doc__
    def appendRows(self, p_int):
        """ QTextTable.appendRows(int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def cellAt(self, *__args):
        """
        QTextTable.cellAt(int, int) -> QTextTableCell
        QTextTable.cellAt(int) -> QTextTableCell
        QTextTable.cellAt(QTextCursor) -> QTextTableCell
        """
        return QTextTableCell

    def columns(self):  # real signature unknown; restored from __doc__
        """ QTextTable.columns() -> int """
        return 0

    def format(self):  # real signature unknown; restored from __doc__
        """ QTextTable.format() -> QTextTableFormat """
        return QTextTableFormat

    # real signature unknown; restored from __doc__
    def insertColumns(self, p_int, p_int_1):
        """ QTextTable.insertColumns(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def insertRows(self, p_int, p_int_1):
        """ QTextTable.insertRows(int, int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def mergeCells(self, *__args):
        """
        QTextTable.mergeCells(int, int, int, int)
        QTextTable.mergeCells(QTextCursor)
        """
        pass

    # real signature unknown; restored from __doc__
    def removeColumns(self, p_int, p_int_1):
        """ QTextTable.removeColumns(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def removeRows(self, p_int, p_int_1):
        """ QTextTable.removeRows(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def resize(self, p_int, p_int_1):
        """ QTextTable.resize(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def rowEnd(self, QTextCursor):
        """ QTextTable.rowEnd(QTextCursor) -> QTextCursor """
        return QTextCursor

    def rows(self):  # real signature unknown; restored from __doc__
        """ QTextTable.rows() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def rowStart(self, QTextCursor):
        """ QTextTable.rowStart(QTextCursor) -> QTextCursor """
        return QTextCursor

    # real signature unknown; restored from __doc__
    def setFormat(self, QTextTableFormat):
        """ QTextTable.setFormat(QTextTableFormat) """
        pass

    # real signature unknown; restored from __doc__
    def splitCell(self, p_int, p_int_1, p_int_2, p_int_3):
        """ QTextTable.splitCell(int, int, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QTextDocument):
        pass


class QTextTableCell():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QTextTableCell()
    QTextTableCell(QTextTableCell)
    """

    def column(self):  # real signature unknown; restored from __doc__
        """ QTextTableCell.column() -> int """
        return 0

    def columnSpan(self):  # real signature unknown; restored from __doc__
        """ QTextTableCell.columnSpan() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def firstCursorPosition(self):
        """ QTextTableCell.firstCursorPosition() -> QTextCursor """
        return QTextCursor

    def format(self):  # real signature unknown; restored from __doc__
        """ QTextTableCell.format() -> QTextCharFormat """
        return QTextCharFormat

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QTextTableCell.isValid() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def lastCursorPosition(self):
        """ QTextTableCell.lastCursorPosition() -> QTextCursor """
        return QTextCursor

    def row(self):  # real signature unknown; restored from __doc__
        """ QTextTableCell.row() -> int """
        return 0

    def rowSpan(self):  # real signature unknown; restored from __doc__
        """ QTextTableCell.rowSpan() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setFormat(self, QTextCharFormat):
        """ QTextTableCell.setFormat(QTextCharFormat) """
        pass

    # real signature unknown; restored from __doc__
    def tableCellFormatIndex(self):
        """ QTextTableCell.tableCellFormatIndex() -> int """
        return 0

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QTextTableCell=None):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QTextTableCellFormat(QTextCharFormat):

    """
    QTextTableCellFormat()
    QTextTableCellFormat(QTextTableCellFormat)
    """

    def bottomPadding(self):  # real signature unknown; restored from __doc__
        """ QTextTableCellFormat.bottomPadding() -> float """
        return 0.0

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QTextTableCellFormat.isValid() -> bool """
        return False

    def leftPadding(self):  # real signature unknown; restored from __doc__
        """ QTextTableCellFormat.leftPadding() -> float """
        return 0.0

    def rightPadding(self):  # real signature unknown; restored from __doc__
        """ QTextTableCellFormat.rightPadding() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def setBottomPadding(self, p_float):
        """ QTextTableCellFormat.setBottomPadding(float) """
        pass

    # real signature unknown; restored from __doc__
    def setLeftPadding(self, p_float):
        """ QTextTableCellFormat.setLeftPadding(float) """
        pass

    # real signature unknown; restored from __doc__
    def setPadding(self, p_float):
        """ QTextTableCellFormat.setPadding(float) """
        pass

    # real signature unknown; restored from __doc__
    def setRightPadding(self, p_float):
        """ QTextTableCellFormat.setRightPadding(float) """
        pass

    # real signature unknown; restored from __doc__
    def setTopPadding(self, p_float):
        """ QTextTableCellFormat.setTopPadding(float) """
        pass

    def topPadding(self):  # real signature unknown; restored from __doc__
        """ QTextTableCellFormat.topPadding() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QTextTableCellFormat=None):
        pass


class QTextTableFormat(QTextFrameFormat):

    """
    QTextTableFormat()
    QTextTableFormat(QTextTableFormat)
    """

    def alignment(self):  # real signature unknown; restored from __doc__
        """ QTextTableFormat.alignment() -> Qt.Alignment """
        pass

    def cellPadding(self):  # real signature unknown; restored from __doc__
        """ QTextTableFormat.cellPadding() -> float """
        return 0.0

    def cellSpacing(self):  # real signature unknown; restored from __doc__
        """ QTextTableFormat.cellSpacing() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def clearColumnWidthConstraints(self):
        """ QTextTableFormat.clearColumnWidthConstraints() """
        pass

    def columns(self):  # real signature unknown; restored from __doc__
        """ QTextTableFormat.columns() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def columnWidthConstraints(self):
        """ QTextTableFormat.columnWidthConstraints() -> list-of-QTextLength """
        pass

    def headerRowCount(self):  # real signature unknown; restored from __doc__
        """ QTextTableFormat.headerRowCount() -> int """
        return 0

    def isValid(self):  # real signature unknown; restored from __doc__
        """ QTextTableFormat.isValid() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setAlignment(self, Qt_Alignment):
        """ QTextTableFormat.setAlignment(Qt.Alignment) """
        pass

    # real signature unknown; restored from __doc__
    def setCellPadding(self, p_float):
        """ QTextTableFormat.setCellPadding(float) """
        pass

    # real signature unknown; restored from __doc__
    def setCellSpacing(self, p_float):
        """ QTextTableFormat.setCellSpacing(float) """
        pass

    # real signature unknown; restored from __doc__
    def setColumns(self, p_int):
        """ QTextTableFormat.setColumns(int) """
        pass

    # real signature unknown; restored from __doc__
    def setColumnWidthConstraints(self, list_of_QTextLength):
        """ QTextTableFormat.setColumnWidthConstraints(list-of-QTextLength) """
        pass

    # real signature unknown; restored from __doc__
    def setHeaderRowCount(self, p_int):
        """ QTextTableFormat.setHeaderRowCount(int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QTextTableFormat=None):
        pass


class QTimeEdit(QDateTimeEdit):

    """
    QTimeEdit(QWidget parent=None)
    QTimeEdit(QTime, QWidget parent=None)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def __init__(self, *__args):
        pass


class QToolBar(QWidget):

    """
    QToolBar(QString, QWidget parent=None)
    QToolBar(QWidget parent=None)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def actionAt(self, *__args):
        """
        QToolBar.actionAt(QPoint) -> QAction
        QToolBar.actionAt(int, int) -> QAction
        """
        return QAction

    # real signature unknown; restored from __doc__
    def actionEvent(self, QActionEvent):
        """ QToolBar.actionEvent(QActionEvent) """
        pass

    # real signature unknown; restored from __doc__
    def actionGeometry(self, QAction):
        """ QToolBar.actionGeometry(QAction) -> QRect """
        pass

    def actionTriggered(self, *args, **kwargs):  # real signature unknown
        """ QToolBar.actionTriggered[QAction] [signal] """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def addAction(self, *__args):
        """
        QToolBar.addAction(QAction)
        QToolBar.addAction(QString) -> QAction
        QToolBar.addAction(QIcon, QString) -> QAction
        QToolBar.addAction(QString, QObject, SLOT()) -> QAction
        QToolBar.addAction(QString, callable) -> QAction
        QToolBar.addAction(QIcon, QString, QObject, SLOT()) -> QAction
        QToolBar.addAction(QIcon, QString, callable) -> QAction
        """
        return QAction

    def addSeparator(self):  # real signature unknown; restored from __doc__
        """ QToolBar.addSeparator() -> QAction """
        return QAction

    # real signature unknown; restored from __doc__
    def addWidget(self, QWidget):
        """ QToolBar.addWidget(QWidget) -> QAction """
        return QAction

    def allowedAreas(self):  # real signature unknown; restored from __doc__
        """ QToolBar.allowedAreas() -> Qt.ToolBarAreas """
        pass

    def allowedAreasChanged(self, *args, **kwargs):  # real signature unknown
        """ QToolBar.allowedAreasChanged[Qt.ToolBarAreas] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QToolBar.changeEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def childEvent(self, QChildEvent):
        """ QToolBar.childEvent(QChildEvent) """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QToolBar.clear() """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QToolBar.event(QEvent) -> bool """
        return False

    def iconSize(self):  # real signature unknown; restored from __doc__
        """ QToolBar.iconSize() -> QSize """
        pass

    def iconSizeChanged(self, *args, **kwargs):  # real signature unknown
        """ QToolBar.iconSizeChanged[QSize] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionToolBar):
        """ QToolBar.initStyleOption(QStyleOptionToolBar) """
        pass

    # real signature unknown; restored from __doc__
    def insertSeparator(self, QAction):
        """ QToolBar.insertSeparator(QAction) -> QAction """
        return QAction

    # real signature unknown; restored from __doc__
    def insertWidget(self, QAction, QWidget):
        """ QToolBar.insertWidget(QAction, QWidget) -> QAction """
        return QAction

    # real signature unknown; restored from __doc__
    def isAreaAllowed(self, Qt_ToolBarArea):
        """ QToolBar.isAreaAllowed(Qt.ToolBarArea) -> bool """
        return False

    def isFloatable(self):  # real signature unknown; restored from __doc__
        """ QToolBar.isFloatable() -> bool """
        return False

    def isFloating(self):  # real signature unknown; restored from __doc__
        """ QToolBar.isFloating() -> bool """
        return False

    def isMovable(self):  # real signature unknown; restored from __doc__
        """ QToolBar.isMovable() -> bool """
        return False

    def movableChanged(self, *args, **kwargs):  # real signature unknown
        """ QToolBar.movableChanged[bool] [signal] """
        pass

    def orientation(self):  # real signature unknown; restored from __doc__
        """ QToolBar.orientation() -> Qt.Orientation """
        pass

    def orientationChanged(self, *args, **kwargs):  # real signature unknown
        """ QToolBar.orientationChanged[Qt.Orientation] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QToolBar.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QToolBar.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def setAllowedAreas(self, Qt_ToolBarAreas):
        """ QToolBar.setAllowedAreas(Qt.ToolBarAreas) """
        pass

    # real signature unknown; restored from __doc__
    def setFloatable(self, bool):
        """ QToolBar.setFloatable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setIconSize(self, QSize):
        """ QToolBar.setIconSize(QSize) """
        pass

    # real signature unknown; restored from __doc__
    def setMovable(self, bool):
        """ QToolBar.setMovable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setOrientation(self, Qt_Orientation):
        """ QToolBar.setOrientation(Qt.Orientation) """
        pass

    # real signature unknown; restored from __doc__
    def setToolButtonStyle(self, Qt_ToolButtonStyle):
        """ QToolBar.setToolButtonStyle(Qt.ToolButtonStyle) """
        pass

    # real signature unknown; restored from __doc__
    def toggleViewAction(self):
        """ QToolBar.toggleViewAction() -> QAction """
        return QAction

    def toolButtonStyle(self):  # real signature unknown; restored from __doc__
        """ QToolBar.toolButtonStyle() -> Qt.ToolButtonStyle """
        pass

    # real signature unknown
    def toolButtonStyleChanged(self, *args, **kwargs):
        """ QToolBar.toolButtonStyleChanged[Qt.ToolButtonStyle] [signal] """
        pass

    def topLevelChanged(self, *args, **kwargs):  # real signature unknown
        """ QToolBar.topLevelChanged[bool] [signal] """
        pass

    def visibilityChanged(self, *args, **kwargs):  # real signature unknown
        """ QToolBar.visibilityChanged[bool] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def widgetForAction(self, QAction):
        """ QToolBar.widgetForAction(QAction) -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QToolBox(QFrame):

    """ QToolBox(QWidget parent=None, Qt.WindowFlags flags=0) """
    # real signature unknown; restored from __doc__ with multiple overloads

    def addItem(self, QWidget, *__args):
        """
        QToolBox.addItem(QWidget, QString) -> int
        QToolBox.addItem(QWidget, QIcon, QString) -> int
        """
        return 0

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QToolBox.changeEvent(QEvent) """
        pass

    def count(self):  # real signature unknown; restored from __doc__
        """ QToolBox.count() -> int """
        return 0

    def currentChanged(self, *args, **kwargs):  # real signature unknown
        """ QToolBox.currentChanged[int] [signal] """
        pass

    def currentIndex(self):  # real signature unknown; restored from __doc__
        """ QToolBox.currentIndex() -> int """
        return 0

    def currentWidget(self):  # real signature unknown; restored from __doc__
        """ QToolBox.currentWidget() -> QWidget """
        return QWidget

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QToolBox.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def indexOf(self, QWidget):
        """ QToolBox.indexOf(QWidget) -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def insertItem(self, p_int, QWidget, *__args):
        """
        QToolBox.insertItem(int, QWidget, QString) -> int
        QToolBox.insertItem(int, QWidget, QIcon, QString) -> int
        """
        return 0

    # real signature unknown; restored from __doc__
    def isItemEnabled(self, p_int):
        """ QToolBox.isItemEnabled(int) -> bool """
        return False

    def itemIcon(self, p_int):  # real signature unknown; restored from __doc__
        """ QToolBox.itemIcon(int) -> QIcon """
        return QIcon

    # real signature unknown; restored from __doc__
    def itemInserted(self, p_int):
        """ QToolBox.itemInserted(int) """
        pass

    # real signature unknown; restored from __doc__
    def itemRemoved(self, p_int):
        """ QToolBox.itemRemoved(int) """
        pass

    def itemText(self, p_int):  # real signature unknown; restored from __doc__
        """ QToolBox.itemText(int) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def itemToolTip(self, p_int):
        """ QToolBox.itemToolTip(int) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def removeItem(self, p_int):
        """ QToolBox.removeItem(int) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentIndex(self, p_int):
        """ QToolBox.setCurrentIndex(int) """
        pass

    # real signature unknown; restored from __doc__
    def setCurrentWidget(self, QWidget):
        """ QToolBox.setCurrentWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setItemEnabled(self, p_int, bool):
        """ QToolBox.setItemEnabled(int, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setItemIcon(self, p_int, QIcon):
        """ QToolBox.setItemIcon(int, QIcon) """
        pass

    # real signature unknown; restored from __doc__
    def setItemText(self, p_int, QString):
        """ QToolBox.setItemText(int, QString) """
        pass

    # real signature unknown; restored from __doc__
    def setItemToolTip(self, p_int, QString):
        """ QToolBox.setItemToolTip(int, QString) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QToolBox.showEvent(QShowEvent) """
        pass

    def widget(self, p_int):  # real signature unknown; restored from __doc__
        """ QToolBox.widget(int) -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None, Qt_WindowFlags_flags=0):
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass


class QToolButton(QAbstractButton):

    """ QToolButton(QWidget parent=None) """
    # real signature unknown; restored from __doc__

    def actionEvent(self, QActionEvent):
        """ QToolButton.actionEvent(QActionEvent) """
        pass

    def arrowType(self):  # real signature unknown; restored from __doc__
        """ QToolButton.arrowType() -> Qt.ArrowType """
        pass

    def autoRaise(self):  # real signature unknown; restored from __doc__
        """ QToolButton.autoRaise() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QToolButton.changeEvent(QEvent) """
        pass

    def defaultAction(self):  # real signature unknown; restored from __doc__
        """ QToolButton.defaultAction() -> QAction """
        return QAction

    # real signature unknown; restored from __doc__
    def enterEvent(self, QEvent):
        """ QToolButton.enterEvent(QEvent) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QToolButton.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def hitButton(self, QPoint):
        """ QToolButton.hitButton(QPoint) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def initStyleOption(self, QStyleOptionToolButton):
        """ QToolButton.initStyleOption(QStyleOptionToolButton) """
        pass

    # real signature unknown; restored from __doc__
    def leaveEvent(self, QEvent):
        """ QToolButton.leaveEvent(QEvent) """
        pass

    def menu(self):  # real signature unknown; restored from __doc__
        """ QToolButton.menu() -> QMenu """
        return QMenu

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QToolButton.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QToolButton.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QToolButton.mouseReleaseEvent(QMouseEvent) """
        pass

    def nextCheckState(self):  # real signature unknown; restored from __doc__
        """ QToolButton.nextCheckState() """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QToolButton.paintEvent(QPaintEvent) """
        pass

    def popupMode(self):  # real signature unknown; restored from __doc__
        """ QToolButton.popupMode() -> QToolButton.ToolButtonPopupMode """
        pass

    # real signature unknown; restored from __doc__
    def setArrowType(self, Qt_ArrowType):
        """ QToolButton.setArrowType(Qt.ArrowType) """
        pass

    # real signature unknown; restored from __doc__
    def setAutoRaise(self, bool):
        """ QToolButton.setAutoRaise(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setDefaultAction(self, QAction):
        """ QToolButton.setDefaultAction(QAction) """
        pass

    def setMenu(self, QMenu):  # real signature unknown; restored from __doc__
        """ QToolButton.setMenu(QMenu) """
        pass

    # real signature unknown; restored from __doc__
    def setPopupMode(self, QToolButton_ToolButtonPopupMode):
        """ QToolButton.setPopupMode(QToolButton.ToolButtonPopupMode) """
        pass

    # real signature unknown; restored from __doc__
    def setToolButtonStyle(self, Qt_ToolButtonStyle):
        """ QToolButton.setToolButtonStyle(Qt.ToolButtonStyle) """
        pass

    def showMenu(self):  # real signature unknown; restored from __doc__
        """ QToolButton.showMenu() """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QToolButton.sizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def timerEvent(self, QTimerEvent):
        """ QToolButton.timerEvent(QTimerEvent) """
        pass

    def ToolButtonPopupMode(self, *args, **kwargs):  # real signature unknown
        pass

    def toolButtonStyle(self):  # real signature unknown; restored from __doc__
        """ QToolButton.toolButtonStyle() -> Qt.ToolButtonStyle """
        pass

    def triggered(self, *args, **kwargs):  # real signature unknown
        """ QToolButton.triggered[QAction] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    DelayedPopup = 0
    InstantPopup = 2
    MenuButtonPopup = 1


class QToolTip():  # skipped bases: <type 'sip.simplewrapper'>
    # no doc

    def font(self):  # real signature unknown; restored from __doc__
        """ QToolTip.font() -> QFont """
        return QFont

    def hideText(self):  # real signature unknown; restored from __doc__
        """ QToolTip.hideText() """
        pass

    def isVisible(self):  # real signature unknown; restored from __doc__
        """ QToolTip.isVisible() -> bool """
        return False

    def palette(self):  # real signature unknown; restored from __doc__
        """ QToolTip.palette() -> QPalette """
        return QPalette

    def setFont(self, QFont):  # real signature unknown; restored from __doc__
        """ QToolTip.setFont(QFont) """
        pass

    # real signature unknown; restored from __doc__
    def setPalette(self, QPalette):
        """ QToolTip.setPalette(QPalette) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def showText(self, QPoint, QString, *__args):
        """
        QToolTip.showText(QPoint, QString, QWidget widget=None)
        QToolTip.showText(QPoint, QString, QWidget, QRect)
        """
        pass

    def text(self):  # real signature unknown; restored from __doc__
        """ QToolTip.text() -> QString """
        pass

    def __init__(self, *args, **kwargs):  # real signature unknown
        pass

    __weakref__ = property(lambda self: object())  # default


class QTouchEvent(QInputEvent):

    """
    QTouchEvent(QEvent.Type, QTouchEvent.DeviceType deviceType=QTouchEvent.TouchScreen, Qt.KeyboardModifiers modifiers=Qt.NoModifier, Qt.TouchPointStates touchPointStates=0, list-of-QTouchEvent.TouchPoint touchPoints=QList&lt;QTouchEvent.TouchPoint&gt;())
    QTouchEvent(QTouchEvent)
    """

    def DeviceType(self, *args, **kwargs):  # real signature unknown
        pass

    def deviceType(self):  # real signature unknown; restored from __doc__
        """ QTouchEvent.deviceType() -> QTouchEvent.DeviceType """
        pass

    def TouchPoint(self, *args, **kwargs):  # real signature unknown
        pass

    def touchPoints(self):  # real signature unknown; restored from __doc__
        """ QTouchEvent.touchPoints() -> list-of-QTouchEvent.TouchPoint """
        pass

    # real signature unknown; restored from __doc__
    def touchPointStates(self):
        """ QTouchEvent.touchPointStates() -> Qt.TouchPointStates """
        pass

    def widget(self):  # real signature unknown; restored from __doc__
        """ QTouchEvent.widget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    TouchPad = 1
    TouchScreen = 0


class QTransform():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QTransform()
    QTransform(float, float, float, float, float, float, float, float, float m33=1)
    QTransform(float, float, float, float, float, float)
    QTransform(QMatrix)
    QTransform(QTransform)
    """

    def adjoint(self):  # real signature unknown; restored from __doc__
        """ QTransform.adjoint() -> QTransform """
        return QTransform

    def det(self):  # real signature unknown; restored from __doc__
        """ QTransform.det() -> float """
        return 0.0

    def determinant(self):  # real signature unknown; restored from __doc__
        """ QTransform.determinant() -> float """
        return 0.0

    def dx(self):  # real signature unknown; restored from __doc__
        """ QTransform.dx() -> float """
        return 0.0

    def dy(self):  # real signature unknown; restored from __doc__
        """ QTransform.dy() -> float """
        return 0.0

    # real signature unknown; restored from __doc__
    def fromScale(self, p_float, p_float_1):
        """ QTransform.fromScale(float, float) -> QTransform """
        return QTransform

    # real signature unknown; restored from __doc__
    def fromTranslate(self, p_float, p_float_1):
        """ QTransform.fromTranslate(float, float) -> QTransform """
        return QTransform

    def inverted(self):  # real signature unknown; restored from __doc__
        """ QTransform.inverted() -> (QTransform, bool) """
        pass

    def isAffine(self):  # real signature unknown; restored from __doc__
        """ QTransform.isAffine() -> bool """
        return False

    def isIdentity(self):  # real signature unknown; restored from __doc__
        """ QTransform.isIdentity() -> bool """
        return False

    def isInvertible(self):  # real signature unknown; restored from __doc__
        """ QTransform.isInvertible() -> bool """
        return False

    def isRotating(self):  # real signature unknown; restored from __doc__
        """ QTransform.isRotating() -> bool """
        return False

    def isScaling(self):  # real signature unknown; restored from __doc__
        """ QTransform.isScaling() -> bool """
        return False

    def isTranslating(self):  # real signature unknown; restored from __doc__
        """ QTransform.isTranslating() -> bool """
        return False

    def m11(self):  # real signature unknown; restored from __doc__
        """ QTransform.m11() -> float """
        return 0.0

    def m12(self):  # real signature unknown; restored from __doc__
        """ QTransform.m12() -> float """
        return 0.0

    def m13(self):  # real signature unknown; restored from __doc__
        """ QTransform.m13() -> float """
        return 0.0

    def m21(self):  # real signature unknown; restored from __doc__
        """ QTransform.m21() -> float """
        return 0.0

    def m22(self):  # real signature unknown; restored from __doc__
        """ QTransform.m22() -> float """
        return 0.0

    def m23(self):  # real signature unknown; restored from __doc__
        """ QTransform.m23() -> float """
        return 0.0

    def m31(self):  # real signature unknown; restored from __doc__
        """ QTransform.m31() -> float """
        return 0.0

    def m32(self):  # real signature unknown; restored from __doc__
        """ QTransform.m32() -> float """
        return 0.0

    def m33(self):  # real signature unknown; restored from __doc__
        """ QTransform.m33() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def map(self, *__args):
        """
        QTransform.map(int, int) -> (int, int)
        QTransform.map(float, float) -> (float, float)
        QTransform.map(QPoint) -> QPoint
        QTransform.map(QPointF) -> QPointF
        QTransform.map(QLine) -> QLine
        QTransform.map(QLineF) -> QLineF
        QTransform.map(QPolygonF) -> QPolygonF
        QTransform.map(QPolygon) -> QPolygon
        QTransform.map(QRegion) -> QRegion
        QTransform.map(QPainterPath) -> QPainterPath
        """
        return QPolygonF or QPolygon or QRegion or QPainterPath

    # real signature unknown; restored from __doc__ with multiple overloads
    def mapRect(self, *__args):
        """
        QTransform.mapRect(QRect) -> QRect
        QTransform.mapRect(QRectF) -> QRectF
        """
        pass

    # real signature unknown; restored from __doc__
    def mapToPolygon(self, QRect):
        """ QTransform.mapToPolygon(QRect) -> QPolygon """
        return QPolygon

    # real signature unknown; restored from __doc__
    def quadToQuad(self, QPolygonF, QPolygonF_1, QTransform):
        """ QTransform.quadToQuad(QPolygonF, QPolygonF, QTransform) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def quadToSquare(self, QPolygonF, QTransform):
        """ QTransform.quadToSquare(QPolygonF, QTransform) -> bool """
        return False

    def reset(self):  # real signature unknown; restored from __doc__
        """ QTransform.reset() """
        pass

    # real signature unknown; restored from __doc__
    def rotate(self, p_float, Qt_Axis_axis=None):
        """ QTransform.rotate(float, Qt.Axis axis=Qt.ZAxis) -> QTransform """
        return QTransform

    # real signature unknown; restored from __doc__
    def rotateRadians(self, p_float, Qt_Axis_axis=None):
        """ QTransform.rotateRadians(float, Qt.Axis axis=Qt.ZAxis) -> QTransform """
        return QTransform

    # real signature unknown; restored from __doc__
    def scale(self, p_float, p_float_1):
        """ QTransform.scale(float, float) -> QTransform """
        return QTransform

    # real signature unknown; restored from __doc__
    def setMatrix(self, p_float, p_float_1, p_float_2, p_float_3, p_float_4, p_float_5, p_float_6, p_float_7, p_float_8):
        """ QTransform.setMatrix(float, float, float, float, float, float, float, float, float) """
        pass

    # real signature unknown; restored from __doc__
    def shear(self, p_float, p_float_1):
        """ QTransform.shear(float, float) -> QTransform """
        return QTransform

    # real signature unknown; restored from __doc__
    def squareToQuad(self, QPolygonF, QTransform):
        """ QTransform.squareToQuad(QPolygonF, QTransform) -> bool """
        return False

    def toAffine(self):  # real signature unknown; restored from __doc__
        """ QTransform.toAffine() -> QMatrix """
        return QMatrix

    def TransformationType(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def translate(self, p_float, p_float_1):
        """ QTransform.translate(float, float) -> QTransform """
        return QTransform

    def transposed(self):  # real signature unknown; restored from __doc__
        """ QTransform.transposed() -> QTransform """
        return QTransform

    def type(self):  # real signature unknown; restored from __doc__
        """ QTransform.type() -> QTransform.TransformationType """
        pass

    def __add__(self, y):  # real signature unknown; restored from __doc__
        """ x.__add__(y) <==> x+y """
        pass

    def __div__(self, y):  # real signature unknown; restored from __doc__
        """ x.__div__(y) <==> x/y """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    def __idiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__idiv__(y) <==> x/y """
        pass

    def __imul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__imul__(y) <==> x*y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    def __itruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__itruediv__(y) <==> x/y """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __mul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__mul__(y) <==> x*y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __radd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__radd__(y) <==> y+x """
        pass

    def __rdiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rdiv__(y) <==> y/x """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    def __rmul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rmul__(y) <==> y*x """
        pass

    def __rsub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rsub__(y) <==> y-x """
        pass

    def __rtruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rtruediv__(y) <==> y/x """
        pass

    def __sub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__sub__(y) <==> x-y """
        pass

    def __truediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__truediv__(y) <==> x/y """
        pass

    __weakref__ = property(lambda self: object())  # default

    TxNone = 0
    TxProject = 16
    TxRotate = 4
    TxScale = 2
    TxShear = 8
    TxTranslate = 1


class QTreeView(QAbstractItemView):

    """ QTreeView(QWidget parent=None) """
    # real signature unknown; restored from __doc__

    def allColumnsShowFocus(self):
        """ QTreeView.allColumnsShowFocus() -> bool """
        return False

    def autoExpandDelay(self):  # real signature unknown; restored from __doc__
        """ QTreeView.autoExpandDelay() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def collapse(self, QModelIndex):
        """ QTreeView.collapse(QModelIndex) """
        pass

    def collapseAll(self):  # real signature unknown; restored from __doc__
        """ QTreeView.collapseAll() """
        pass

    def collapsed(self, *args, **kwargs):  # real signature unknown
        """ QTreeView.collapsed[QModelIndex] [signal] """
        pass

    def columnAt(self, p_int):  # real signature unknown; restored from __doc__
        """ QTreeView.columnAt(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def columnCountChanged(self, p_int, p_int_1):
        """ QTreeView.columnCountChanged(int, int) """
        pass

    def columnMoved(self):  # real signature unknown; restored from __doc__
        """ QTreeView.columnMoved() """
        pass

    # real signature unknown; restored from __doc__
    def columnResized(self, p_int, p_int_1, p_int_2):
        """ QTreeView.columnResized(int, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def columnViewportPosition(self, p_int):
        """ QTreeView.columnViewportPosition(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def columnWidth(self, p_int):
        """ QTreeView.columnWidth(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def currentChanged(self, QModelIndex, QModelIndex_1):
        """ QTreeView.currentChanged(QModelIndex, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def dataChanged(self, QModelIndex, QModelIndex_1):
        """ QTreeView.dataChanged(QModelIndex, QModelIndex) """
        pass

    def doItemsLayout(self):  # real signature unknown; restored from __doc__
        """ QTreeView.doItemsLayout() """
        pass

    # real signature unknown; restored from __doc__
    def dragMoveEvent(self, QDragMoveEvent):
        """ QTreeView.dragMoveEvent(QDragMoveEvent) """
        pass

    # real signature unknown; restored from __doc__
    def drawBranches(self, QPainter, QRect, QModelIndex):
        """ QTreeView.drawBranches(QPainter, QRect, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def drawRow(self, QPainter, QStyleOptionViewItem, QModelIndex):
        """ QTreeView.drawRow(QPainter, QStyleOptionViewItem, QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def drawTree(self, QPainter, QRegion):
        """ QTreeView.drawTree(QPainter, QRegion) """
        pass

    # real signature unknown; restored from __doc__
    def expand(self, QModelIndex):
        """ QTreeView.expand(QModelIndex) """
        pass

    def expandAll(self):  # real signature unknown; restored from __doc__
        """ QTreeView.expandAll() """
        pass

    def expanded(self, *args, **kwargs):  # real signature unknown
        """ QTreeView.expanded[QModelIndex] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def expandsOnDoubleClick(self):
        """ QTreeView.expandsOnDoubleClick() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def expandToDepth(self, p_int):
        """ QTreeView.expandToDepth(int) """
        pass

    def header(self):  # real signature unknown; restored from __doc__
        """ QTreeView.header() -> QHeaderView """
        return QHeaderView

    # real signature unknown; restored from __doc__
    def hideColumn(self, p_int):
        """ QTreeView.hideColumn(int) """
        pass

    # real signature unknown; restored from __doc__
    def horizontalOffset(self):
        """ QTreeView.horizontalOffset() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def horizontalScrollbarAction(self, p_int):
        """ QTreeView.horizontalScrollbarAction(int) """
        pass

    def indentation(self):  # real signature unknown; restored from __doc__
        """ QTreeView.indentation() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def indexAbove(self, QModelIndex):
        """ QTreeView.indexAbove(QModelIndex) -> QModelIndex """
        pass

    def indexAt(self, QPoint):  # real signature unknown; restored from __doc__
        """ QTreeView.indexAt(QPoint) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def indexBelow(self, QModelIndex):
        """ QTreeView.indexBelow(QModelIndex) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def indexRowSizeHint(self, QModelIndex):
        """ QTreeView.indexRowSizeHint(QModelIndex) -> int """
        return 0

    def isAnimated(self):  # real signature unknown; restored from __doc__
        """ QTreeView.isAnimated() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isColumnHidden(self, p_int):
        """ QTreeView.isColumnHidden(int) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isExpanded(self, QModelIndex):
        """ QTreeView.isExpanded(QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isFirstColumnSpanned(self, p_int, QModelIndex):
        """ QTreeView.isFirstColumnSpanned(int, QModelIndex) -> bool """
        return False

    def isHeaderHidden(self):  # real signature unknown; restored from __doc__
        """ QTreeView.isHeaderHidden() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isIndexHidden(self, QModelIndex):
        """ QTreeView.isIndexHidden(QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isRowHidden(self, p_int, QModelIndex):
        """ QTreeView.isRowHidden(int, QModelIndex) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isSortingEnabled(self):
        """ QTreeView.isSortingEnabled() -> bool """
        return False

    def itemsExpandable(self):  # real signature unknown; restored from __doc__
        """ QTreeView.itemsExpandable() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def keyboardSearch(self, QString):
        """ QTreeView.keyboardSearch(QString) """
        pass

    # real signature unknown; restored from __doc__
    def keyPressEvent(self, QKeyEvent):
        """ QTreeView.keyPressEvent(QKeyEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseDoubleClickEvent(self, QMouseEvent):
        """ QTreeView.mouseDoubleClickEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseMoveEvent(self, QMouseEvent):
        """ QTreeView.mouseMoveEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mousePressEvent(self, QMouseEvent):
        """ QTreeView.mousePressEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def mouseReleaseEvent(self, QMouseEvent):
        """ QTreeView.mouseReleaseEvent(QMouseEvent) """
        pass

    # real signature unknown; restored from __doc__
    def moveCursor(self, QAbstractItemView_CursorAction, Qt_KeyboardModifiers):
        """ QTreeView.moveCursor(QAbstractItemView.CursorAction, Qt.KeyboardModifiers) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QTreeView.paintEvent(QPaintEvent) """
        pass

    def reexpand(self):  # real signature unknown; restored from __doc__
        """ QTreeView.reexpand() """
        pass

    def reset(self):  # real signature unknown; restored from __doc__
        """ QTreeView.reset() """
        pass

    # real signature unknown; restored from __doc__
    def resizeColumnToContents(self, p_int):
        """ QTreeView.resizeColumnToContents(int) """
        pass

    def rootIsDecorated(self):  # real signature unknown; restored from __doc__
        """ QTreeView.rootIsDecorated() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def rowHeight(self, QModelIndex):
        """ QTreeView.rowHeight(QModelIndex) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def rowsAboutToBeRemoved(self, QModelIndex, p_int, p_int_1):
        """ QTreeView.rowsAboutToBeRemoved(QModelIndex, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def rowsInserted(self, QModelIndex, p_int, p_int_1):
        """ QTreeView.rowsInserted(QModelIndex, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def rowsRemoved(self, QModelIndex, p_int, p_int_1):
        """ QTreeView.rowsRemoved(QModelIndex, int, int) """
        pass

    # real signature unknown; restored from __doc__
    def scrollContentsBy(self, p_int, p_int_1):
        """ QTreeView.scrollContentsBy(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def scrollTo(self, QModelIndex, QAbstractItemView_ScrollHint_hint=None):
        """ QTreeView.scrollTo(QModelIndex, QAbstractItemView.ScrollHint hint=QAbstractItemView.EnsureVisible) """
        pass

    def selectAll(self):  # real signature unknown; restored from __doc__
        """ QTreeView.selectAll() """
        pass

    def selectedIndexes(self):  # real signature unknown; restored from __doc__
        """ QTreeView.selectedIndexes() -> list-of-QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def selectionChanged(self, QItemSelection, QItemSelection_1):
        """ QTreeView.selectionChanged(QItemSelection, QItemSelection) """
        pass

    # real signature unknown; restored from __doc__
    def setAllColumnsShowFocus(self, bool):
        """ QTreeView.setAllColumnsShowFocus(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setAnimated(self, bool):
        """ QTreeView.setAnimated(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setAutoExpandDelay(self, p_int):
        """ QTreeView.setAutoExpandDelay(int) """
        pass

    # real signature unknown; restored from __doc__
    def setColumnHidden(self, p_int, bool):
        """ QTreeView.setColumnHidden(int, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setColumnWidth(self, p_int, p_int_1):
        """ QTreeView.setColumnWidth(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setExpanded(self, QModelIndex, bool):
        """ QTreeView.setExpanded(QModelIndex, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setExpandsOnDoubleClick(self, bool):
        """ QTreeView.setExpandsOnDoubleClick(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFirstColumnSpanned(self, p_int, QModelIndex, bool):
        """ QTreeView.setFirstColumnSpanned(int, QModelIndex, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setHeader(self, QHeaderView):
        """ QTreeView.setHeader(QHeaderView) """
        pass

    # real signature unknown; restored from __doc__
    def setHeaderHidden(self, bool):
        """ QTreeView.setHeaderHidden(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setIndentation(self, p_int):
        """ QTreeView.setIndentation(int) """
        pass

    # real signature unknown; restored from __doc__
    def setItemsExpandable(self, bool):
        """ QTreeView.setItemsExpandable(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setModel(self, QAbstractItemModel):
        """ QTreeView.setModel(QAbstractItemModel) """
        pass

    # real signature unknown; restored from __doc__
    def setRootIndex(self, QModelIndex):
        """ QTreeView.setRootIndex(QModelIndex) """
        pass

    # real signature unknown; restored from __doc__
    def setRootIsDecorated(self, bool):
        """ QTreeView.setRootIsDecorated(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setRowHidden(self, p_int, QModelIndex, bool):
        """ QTreeView.setRowHidden(int, QModelIndex, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSelection(self, QRect, QItemSelectionModel_SelectionFlags):
        """ QTreeView.setSelection(QRect, QItemSelectionModel.SelectionFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setSelectionModel(self, QItemSelectionModel):
        """ QTreeView.setSelectionModel(QItemSelectionModel) """
        pass

    # real signature unknown; restored from __doc__
    def setSortingEnabled(self, bool):
        """ QTreeView.setSortingEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setUniformRowHeights(self, bool):
        """ QTreeView.setUniformRowHeights(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setWordWrap(self, bool):
        """ QTreeView.setWordWrap(bool) """
        pass

    # real signature unknown; restored from __doc__
    def showColumn(self, p_int):
        """ QTreeView.showColumn(int) """
        pass

    # real signature unknown; restored from __doc__
    def sizeHintForColumn(self, p_int):
        """ QTreeView.sizeHintForColumn(int) -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def sortByColumn(self, p_int, Qt_SortOrder=None):
        """
        QTreeView.sortByColumn(int)
        QTreeView.sortByColumn(int, Qt.SortOrder)
        """
        pass

    # real signature unknown; restored from __doc__
    def timerEvent(self, QTimerEvent):
        """ QTreeView.timerEvent(QTimerEvent) """
        pass

    # real signature unknown; restored from __doc__
    def uniformRowHeights(self):
        """ QTreeView.uniformRowHeights() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def updateGeometries(self):
        """ QTreeView.updateGeometries() """
        pass

    def verticalOffset(self):  # real signature unknown; restored from __doc__
        """ QTreeView.verticalOffset() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def viewportEvent(self, QEvent):
        """ QTreeView.viewportEvent(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def visualRect(self, QModelIndex):
        """ QTreeView.visualRect(QModelIndex) -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def visualRegionForSelection(self, QItemSelection):
        """ QTreeView.visualRegionForSelection(QItemSelection) -> QRegion """
        return QRegion

    def wordWrap(self):  # real signature unknown; restored from __doc__
        """ QTreeView.wordWrap() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass


class QTreeWidget(QTreeView):

    """ QTreeWidget(QWidget parent=None) """
    # real signature unknown; restored from __doc__

    def addTopLevelItem(self, QTreeWidgetItem):
        """ QTreeWidget.addTopLevelItem(QTreeWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def addTopLevelItems(self, list_of_QTreeWidgetItem):
        """ QTreeWidget.addTopLevelItems(list-of-QTreeWidgetItem) """
        pass

    def clear(self):  # real signature unknown; restored from __doc__
        """ QTreeWidget.clear() """
        pass

    # real signature unknown; restored from __doc__
    def closePersistentEditor(self, QTreeWidgetItem, int_column=0):
        """ QTreeWidget.closePersistentEditor(QTreeWidgetItem, int column=0) """
        pass

    # real signature unknown; restored from __doc__
    def collapseItem(self, QTreeWidgetItem):
        """ QTreeWidget.collapseItem(QTreeWidgetItem) """
        pass

    def columnCount(self):  # real signature unknown; restored from __doc__
        """ QTreeWidget.columnCount() -> int """
        return 0

    def currentColumn(self):  # real signature unknown; restored from __doc__
        """ QTreeWidget.currentColumn() -> int """
        return 0

    def currentItem(self):  # real signature unknown; restored from __doc__
        """ QTreeWidget.currentItem() -> QTreeWidgetItem """
        return QTreeWidgetItem

    def currentItemChanged(self, *args, **kwargs):  # real signature unknown
        """ QTreeWidget.currentItemChanged[QTreeWidgetItem, QTreeWidgetItem] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def dropEvent(self, QDropEvent):
        """ QTreeWidget.dropEvent(QDropEvent) """
        pass

    # real signature unknown; restored from __doc__
    def dropMimeData(self, QTreeWidgetItem, p_int, QMimeData, Qt_DropAction):
        """ QTreeWidget.dropMimeData(QTreeWidgetItem, int, QMimeData, Qt.DropAction) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def editItem(self, QTreeWidgetItem, int_column=0):
        """ QTreeWidget.editItem(QTreeWidgetItem, int column=0) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QTreeWidget.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def expandItem(self, QTreeWidgetItem):
        """ QTreeWidget.expandItem(QTreeWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def findItems(self, QString, Qt_MatchFlags, int_column=0):
        """ QTreeWidget.findItems(QString, Qt.MatchFlags, int column=0) -> list-of-QTreeWidgetItem """
        pass

    def headerItem(self):  # real signature unknown; restored from __doc__
        """ QTreeWidget.headerItem() -> QTreeWidgetItem """
        return QTreeWidgetItem

    # real signature unknown; restored from __doc__
    def indexFromItem(self, QTreeWidgetItem, int_column=0):
        """ QTreeWidget.indexFromItem(QTreeWidgetItem, int column=0) -> QModelIndex """
        pass

    # real signature unknown; restored from __doc__
    def indexOfTopLevelItem(self, QTreeWidgetItem):
        """ QTreeWidget.indexOfTopLevelItem(QTreeWidgetItem) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def insertTopLevelItem(self, p_int, QTreeWidgetItem):
        """ QTreeWidget.insertTopLevelItem(int, QTreeWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def insertTopLevelItems(self, p_int, list_of_QTreeWidgetItem):
        """ QTreeWidget.insertTopLevelItems(int, list-of-QTreeWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def invisibleRootItem(self):
        """ QTreeWidget.invisibleRootItem() -> QTreeWidgetItem """
        return QTreeWidgetItem

    # real signature unknown; restored from __doc__
    def isFirstItemColumnSpanned(self, QTreeWidgetItem):
        """ QTreeWidget.isFirstItemColumnSpanned(QTreeWidgetItem) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isItemExpanded(self, QTreeWidgetItem):
        """ QTreeWidget.isItemExpanded(QTreeWidgetItem) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isItemHidden(self, QTreeWidgetItem):
        """ QTreeWidget.isItemHidden(QTreeWidgetItem) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isItemSelected(self, QTreeWidgetItem):
        """ QTreeWidget.isItemSelected(QTreeWidgetItem) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isSortingEnabled(self):
        """ QTreeWidget.isSortingEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def itemAbove(self, QTreeWidgetItem):
        """ QTreeWidget.itemAbove(QTreeWidgetItem) -> QTreeWidgetItem """
        return QTreeWidgetItem

    def itemActivated(self, *args, **kwargs):  # real signature unknown
        """ QTreeWidget.itemActivated[QTreeWidgetItem, int] [signal] """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def itemAt(self, *__args):
        """
        QTreeWidget.itemAt(QPoint) -> QTreeWidgetItem
        QTreeWidget.itemAt(int, int) -> QTreeWidgetItem
        """
        return QTreeWidgetItem

    # real signature unknown; restored from __doc__
    def itemBelow(self, QTreeWidgetItem):
        """ QTreeWidget.itemBelow(QTreeWidgetItem) -> QTreeWidgetItem """
        return QTreeWidgetItem

    def itemChanged(self, *args, **kwargs):  # real signature unknown
        """ QTreeWidget.itemChanged[QTreeWidgetItem, int] [signal] """
        pass

    def itemClicked(self, *args, **kwargs):  # real signature unknown
        """ QTreeWidget.itemClicked[QTreeWidgetItem, int] [signal] """
        pass

    def itemCollapsed(self, *args, **kwargs):  # real signature unknown
        """ QTreeWidget.itemCollapsed[QTreeWidgetItem] [signal] """
        pass

    def itemDoubleClicked(self, *args, **kwargs):  # real signature unknown
        """ QTreeWidget.itemDoubleClicked[QTreeWidgetItem, int] [signal] """
        pass

    def itemEntered(self, *args, **kwargs):  # real signature unknown
        """ QTreeWidget.itemEntered[QTreeWidgetItem, int] [signal] """
        pass

    def itemExpanded(self, *args, **kwargs):  # real signature unknown
        """ QTreeWidget.itemExpanded[QTreeWidgetItem] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def itemFromIndex(self, QModelIndex):
        """ QTreeWidget.itemFromIndex(QModelIndex) -> QTreeWidgetItem """
        return QTreeWidgetItem

    def itemPressed(self, *args, **kwargs):  # real signature unknown
        """ QTreeWidget.itemPressed[QTreeWidgetItem, int] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def items(self, QMimeData):
        """ QTreeWidget.items(QMimeData) -> list-of-QTreeWidgetItem """
        pass

    def itemSelectionChanged(self, *args, **kwargs):  # real signature unknown
        """ QTreeWidget.itemSelectionChanged[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def itemWidget(self, QTreeWidgetItem, p_int):
        """ QTreeWidget.itemWidget(QTreeWidgetItem, int) -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def mimeData(self, list_of_QTreeWidgetItem):
        """ QTreeWidget.mimeData(list-of-QTreeWidgetItem) -> QMimeData """
        pass

    def mimeTypes(self):  # real signature unknown; restored from __doc__
        """ QTreeWidget.mimeTypes() -> QStringList """
        pass

    # real signature unknown; restored from __doc__
    def openPersistentEditor(self, QTreeWidgetItem, int_column=0):
        """ QTreeWidget.openPersistentEditor(QTreeWidgetItem, int column=0) """
        pass

    # real signature unknown; restored from __doc__
    def removeItemWidget(self, QTreeWidgetItem, p_int):
        """ QTreeWidget.removeItemWidget(QTreeWidgetItem, int) """
        pass

    # real signature unknown; restored from __doc__
    def scrollToItem(self, QTreeWidgetItem, QAbstractItemView_ScrollHint_hint=None):
        """ QTreeWidget.scrollToItem(QTreeWidgetItem, QAbstractItemView.ScrollHint hint=QAbstractItemView.EnsureVisible) """
        pass

    def selectedItems(self):  # real signature unknown; restored from __doc__
        """ QTreeWidget.selectedItems() -> list-of-QTreeWidgetItem """
        pass

    # real signature unknown; restored from __doc__
    def setColumnCount(self, p_int):
        """ QTreeWidget.setColumnCount(int) """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def setCurrentItem(self, QTreeWidgetItem, p_int=None, QItemSelectionModel_SelectionFlags=None):
        """
        QTreeWidget.setCurrentItem(QTreeWidgetItem)
        QTreeWidget.setCurrentItem(QTreeWidgetItem, int)
        QTreeWidget.setCurrentItem(QTreeWidgetItem, int, QItemSelectionModel.SelectionFlags)
        """
        pass

    # real signature unknown; restored from __doc__
    def setFirstItemColumnSpanned(self, QTreeWidgetItem, bool):
        """ QTreeWidget.setFirstItemColumnSpanned(QTreeWidgetItem, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setHeaderItem(self, QTreeWidgetItem):
        """ QTreeWidget.setHeaderItem(QTreeWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def setHeaderLabel(self, QString):
        """ QTreeWidget.setHeaderLabel(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setHeaderLabels(self, QStringList):
        """ QTreeWidget.setHeaderLabels(QStringList) """
        pass

    # real signature unknown; restored from __doc__
    def setItemExpanded(self, QTreeWidgetItem, bool):
        """ QTreeWidget.setItemExpanded(QTreeWidgetItem, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setItemHidden(self, QTreeWidgetItem, bool):
        """ QTreeWidget.setItemHidden(QTreeWidgetItem, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setItemSelected(self, QTreeWidgetItem, bool):
        """ QTreeWidget.setItemSelected(QTreeWidgetItem, bool) """
        pass

    # real signature unknown; restored from __doc__
    def setItemWidget(self, QTreeWidgetItem, p_int, QWidget):
        """ QTreeWidget.setItemWidget(QTreeWidgetItem, int, QWidget) """
        pass

    def setModel(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def setSelectionModel(self, QItemSelectionModel):
        """ QTreeWidget.setSelectionModel(QItemSelectionModel) """
        pass

    # real signature unknown; restored from __doc__
    def setSortingEnabled(self, bool):
        """ QTreeWidget.setSortingEnabled(bool) """
        pass

    def sortColumn(self):  # real signature unknown; restored from __doc__
        """ QTreeWidget.sortColumn() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def sortItems(self, p_int, Qt_SortOrder):
        """ QTreeWidget.sortItems(int, Qt.SortOrder) """
        pass

    # real signature unknown; restored from __doc__
    def supportedDropActions(self):
        """ QTreeWidget.supportedDropActions() -> Qt.DropActions """
        pass

    # real signature unknown; restored from __doc__
    def takeTopLevelItem(self, p_int):
        """ QTreeWidget.takeTopLevelItem(int) -> QTreeWidgetItem """
        return QTreeWidgetItem

    # real signature unknown; restored from __doc__
    def topLevelItem(self, p_int):
        """ QTreeWidget.topLevelItem(int) -> QTreeWidgetItem """
        return QTreeWidgetItem

    # real signature unknown; restored from __doc__
    def topLevelItemCount(self):
        """ QTreeWidget.topLevelItemCount() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def visualItemRect(self, QTreeWidgetItem):
        """ QTreeWidget.visualItemRect(QTreeWidgetItem) -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass


class QTreeWidgetItem():  # skipped bases: <type 'sip.wrapper'>

    """
    QTreeWidgetItem(int type=QTreeWidgetItem.Type)
    QTreeWidgetItem(QStringList, int type=QTreeWidgetItem.Type)
    QTreeWidgetItem(QTreeWidget, int type=QTreeWidgetItem.Type)
    QTreeWidgetItem(QTreeWidget, QStringList, int type=QTreeWidgetItem.Type)
    QTreeWidgetItem(QTreeWidget, QTreeWidgetItem, int type=QTreeWidgetItem.Type)
    QTreeWidgetItem(QTreeWidgetItem, int type=QTreeWidgetItem.Type)
    QTreeWidgetItem(QTreeWidgetItem, QStringList, int type=QTreeWidgetItem.Type)
    QTreeWidgetItem(QTreeWidgetItem, QTreeWidgetItem, int type=QTreeWidgetItem.Type)
    QTreeWidgetItem(QTreeWidgetItem)
    """
    # real signature unknown; restored from __doc__

    def addChild(self, QTreeWidgetItem):
        """ QTreeWidgetItem.addChild(QTreeWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def addChildren(self, list_of_QTreeWidgetItem):
        """ QTreeWidgetItem.addChildren(list-of-QTreeWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def background(self, p_int):
        """ QTreeWidgetItem.background(int) -> QBrush """
        return QBrush

    # real signature unknown; restored from __doc__
    def backgroundColor(self, p_int):
        """ QTreeWidgetItem.backgroundColor(int) -> QColor """
        return QColor

    # real signature unknown; restored from __doc__
    def checkState(self, p_int):
        """ QTreeWidgetItem.checkState(int) -> Qt.CheckState """
        pass

    def child(self, p_int):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.child(int) -> QTreeWidgetItem """
        return QTreeWidgetItem

    def childCount(self):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.childCount() -> int """
        return 0

    def ChildIndicatorPolicy(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def childIndicatorPolicy(self):
        """ QTreeWidgetItem.childIndicatorPolicy() -> QTreeWidgetItem.ChildIndicatorPolicy """
        pass

    def clone(self):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.clone() -> QTreeWidgetItem """
        return QTreeWidgetItem

    def columnCount(self):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.columnCount() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def data(self, p_int, p_int_1):
        """ QTreeWidgetItem.data(int, int) -> QVariant """
        pass

    def emitDataChanged(self):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.emitDataChanged() """
        pass

    def flags(self):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.flags() -> Qt.ItemFlags """
        pass

    def font(self, p_int):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.font(int) -> QFont """
        return QFont

    # real signature unknown; restored from __doc__
    def foreground(self, p_int):
        """ QTreeWidgetItem.foreground(int) -> QBrush """
        return QBrush

    def icon(self, p_int):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.icon(int) -> QIcon """
        return QIcon

    # real signature unknown; restored from __doc__
    def indexOfChild(self, QTreeWidgetItem):
        """ QTreeWidgetItem.indexOfChild(QTreeWidgetItem) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def insertChild(self, p_int, QTreeWidgetItem):
        """ QTreeWidgetItem.insertChild(int, QTreeWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def insertChildren(self, p_int, list_of_QTreeWidgetItem):
        """ QTreeWidgetItem.insertChildren(int, list-of-QTreeWidgetItem) """
        pass

    def isDisabled(self):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.isDisabled() -> bool """
        return False

    def isExpanded(self):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.isExpanded() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def isFirstColumnSpanned(self):
        """ QTreeWidgetItem.isFirstColumnSpanned() -> bool """
        return False

    def isHidden(self):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.isHidden() -> bool """
        return False

    def isSelected(self):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.isSelected() -> bool """
        return False

    def ItemType(self, *args, **kwargs):  # real signature unknown
        pass

    def parent(self):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.parent() -> QTreeWidgetItem """
        return QTreeWidgetItem

    # real signature unknown; restored from __doc__
    def read(self, QDataStream):
        """ QTreeWidgetItem.read(QDataStream) """
        pass

    # real signature unknown; restored from __doc__
    def removeChild(self, QTreeWidgetItem):
        """ QTreeWidgetItem.removeChild(QTreeWidgetItem) """
        pass

    # real signature unknown; restored from __doc__
    def setBackground(self, p_int, QBrush):
        """ QTreeWidgetItem.setBackground(int, QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def setBackgroundColor(self, p_int, QColor):
        """ QTreeWidgetItem.setBackgroundColor(int, QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setCheckState(self, p_int, Qt_CheckState):
        """ QTreeWidgetItem.setCheckState(int, Qt.CheckState) """
        pass

    # real signature unknown; restored from __doc__
    def setChildIndicatorPolicy(self, QTreeWidgetItem_ChildIndicatorPolicy):
        """ QTreeWidgetItem.setChildIndicatorPolicy(QTreeWidgetItem.ChildIndicatorPolicy) """
        pass

    # real signature unknown; restored from __doc__
    def setData(self, p_int, p_int_1, QVariant):
        """ QTreeWidgetItem.setData(int, int, QVariant) """
        pass

    # real signature unknown; restored from __doc__
    def setDisabled(self, bool):
        """ QTreeWidgetItem.setDisabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setExpanded(self, bool):
        """ QTreeWidgetItem.setExpanded(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFirstColumnSpanned(self, bool):
        """ QTreeWidgetItem.setFirstColumnSpanned(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setFlags(self, Qt_ItemFlags):
        """ QTreeWidgetItem.setFlags(Qt.ItemFlags) """
        pass

    # real signature unknown; restored from __doc__
    def setFont(self, p_int, QFont):
        """ QTreeWidgetItem.setFont(int, QFont) """
        pass

    # real signature unknown; restored from __doc__
    def setForeground(self, p_int, QBrush):
        """ QTreeWidgetItem.setForeground(int, QBrush) """
        pass

    def setHidden(self, bool):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.setHidden(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setIcon(self, p_int, QIcon):
        """ QTreeWidgetItem.setIcon(int, QIcon) """
        pass

    # real signature unknown; restored from __doc__
    def setSelected(self, bool):
        """ QTreeWidgetItem.setSelected(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setSizeHint(self, p_int, QSize):
        """ QTreeWidgetItem.setSizeHint(int, QSize) """
        pass

    # real signature unknown; restored from __doc__
    def setStatusTip(self, p_int, QString):
        """ QTreeWidgetItem.setStatusTip(int, QString) """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, p_int, QString):
        """ QTreeWidgetItem.setText(int, QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTextAlignment(self, p_int, p_int_1):
        """ QTreeWidgetItem.setTextAlignment(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setTextColor(self, p_int, QColor):
        """ QTreeWidgetItem.setTextColor(int, QColor) """
        pass

    # real signature unknown; restored from __doc__
    def setToolTip(self, p_int, QString):
        """ QTreeWidgetItem.setToolTip(int, QString) """
        pass

    # real signature unknown; restored from __doc__
    def setWhatsThis(self, p_int, QString):
        """ QTreeWidgetItem.setWhatsThis(int, QString) """
        pass

    def sizeHint(self, p_int):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.sizeHint(int) -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def sortChildren(self, p_int, Qt_SortOrder):
        """ QTreeWidgetItem.sortChildren(int, Qt.SortOrder) """
        pass

    # real signature unknown; restored from __doc__
    def statusTip(self, p_int):
        """ QTreeWidgetItem.statusTip(int) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def takeChild(self, p_int):
        """ QTreeWidgetItem.takeChild(int) -> QTreeWidgetItem """
        return QTreeWidgetItem

    def takeChildren(self):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.takeChildren() -> list-of-QTreeWidgetItem """
        pass

    def text(self, p_int):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.text(int) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def textAlignment(self, p_int):
        """ QTreeWidgetItem.textAlignment(int) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def textColor(self, p_int):
        """ QTreeWidgetItem.textColor(int) -> QColor """
        return QColor

    def toolTip(self, p_int):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.toolTip(int) -> QString """
        pass

    def treeWidget(self):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.treeWidget() -> QTreeWidget """
        return QTreeWidget

    def type(self):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItem.type() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def whatsThis(self, p_int):
        """ QTreeWidgetItem.whatsThis(int) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def write(self, QDataStream):
        """ QTreeWidgetItem.write(QDataStream) """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    __weakref__ = property(lambda self: object())  # default

    DontShowIndicator = 1
    DontShowIndicatorWhenChildless = 2
    ShowIndicator = 0
    Type = 0
    UserType = 1000


class QTreeWidgetItemIterator():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QTreeWidgetItemIterator(QTreeWidgetItemIterator)
    QTreeWidgetItemIterator(QTreeWidget, QTreeWidgetItemIterator.IteratorFlags flags=QTreeWidgetItemIterator.All)
    QTreeWidgetItemIterator(QTreeWidgetItem, QTreeWidgetItemIterator.IteratorFlags flags=QTreeWidgetItemIterator.All)
    """

    def IteratorFlag(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def IteratorFlags(self, *__args):
        """
        QTreeWidgetItemIterator.IteratorFlags(QTreeWidgetItemIterator.IteratorFlags)
        QTreeWidgetItemIterator.IteratorFlags(int)
        QTreeWidgetItemIterator.IteratorFlags()
        """
        pass

    def value(self):  # real signature unknown; restored from __doc__
        """ QTreeWidgetItemIterator.value() -> QTreeWidgetItem """
        return QTreeWidgetItem

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    __weakref__ = property(lambda self: object())  # default

    All = 0
    Checked = 4096
    Disabled = 32768
    DragDisabled = 128
    DragEnabled = 64
    DropDisabled = 512
    DropEnabled = 256
    Editable = 65536
    Enabled = 16384
    HasChildren = 1024
    Hidden = 1
    NoChildren = 2048
    NotChecked = 8192
    NotEditable = 131072
    NotHidden = 2
    NotSelectable = 32
    Selectable = 16
    Selected = 4
    Unselected = 8
    UserFlag = 16777216


class QUndoCommand():  # skipped bases: <type 'sip.wrapper'>

    """
    QUndoCommand(QUndoCommand parent=None)
    QUndoCommand(QString, QUndoCommand parent=None)
    """

    def child(self, p_int):  # real signature unknown; restored from __doc__
        """ QUndoCommand.child(int) -> QUndoCommand """
        return QUndoCommand

    def childCount(self):  # real signature unknown; restored from __doc__
        """ QUndoCommand.childCount() -> int """
        return 0

    def id(self):  # real signature unknown; restored from __doc__
        """ QUndoCommand.id() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def mergeWith(self, QUndoCommand):
        """ QUndoCommand.mergeWith(QUndoCommand) -> bool """
        return False

    def redo(self):  # real signature unknown; restored from __doc__
        """ QUndoCommand.redo() """
        pass

    # real signature unknown; restored from __doc__
    def setText(self, QString):
        """ QUndoCommand.setText(QString) """
        pass

    def text(self):  # real signature unknown; restored from __doc__
        """ QUndoCommand.text() -> QString """
        pass

    def undo(self):  # real signature unknown; restored from __doc__
        """ QUndoCommand.undo() """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    __weakref__ = property(lambda self: object())  # default


class QUndoGroup(__PyQt4_QtCore.QObject):

    """ QUndoGroup(QObject parent=None) """

    def activeStack(self):  # real signature unknown; restored from __doc__
        """ QUndoGroup.activeStack() -> QUndoStack """
        return QUndoStack

    def activeStackChanged(self, *args, **kwargs):  # real signature unknown
        """ QUndoGroup.activeStackChanged[QUndoStack] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def addStack(self, QUndoStack):
        """ QUndoGroup.addStack(QUndoStack) """
        pass

    def canRedo(self):  # real signature unknown; restored from __doc__
        """ QUndoGroup.canRedo() -> bool """
        return False

    def canRedoChanged(self, *args, **kwargs):  # real signature unknown
        """ QUndoGroup.canRedoChanged[bool] [signal] """
        pass

    def canUndo(self):  # real signature unknown; restored from __doc__
        """ QUndoGroup.canUndo() -> bool """
        return False

    def canUndoChanged(self, *args, **kwargs):  # real signature unknown
        """ QUndoGroup.canUndoChanged[bool] [signal] """
        pass

    def cleanChanged(self, *args, **kwargs):  # real signature unknown
        """ QUndoGroup.cleanChanged[bool] [signal] """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def createRedoAction(self, QObject, QString_prefix=None, *args, **kwargs):
        """ QUndoGroup.createRedoAction(QObject, QString prefix=QString()) -> QAction """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def createUndoAction(self, QObject, QString_prefix=None, *args, **kwargs):
        """ QUndoGroup.createUndoAction(QObject, QString prefix=QString()) -> QAction """
        pass

    def indexChanged(self, *args, **kwargs):  # real signature unknown
        """ QUndoGroup.indexChanged[int] [signal] """
        pass

    def isClean(self):  # real signature unknown; restored from __doc__
        """ QUndoGroup.isClean() -> bool """
        return False

    def redo(self):  # real signature unknown; restored from __doc__
        """ QUndoGroup.redo() """
        pass

    def redoText(self):  # real signature unknown; restored from __doc__
        """ QUndoGroup.redoText() -> QString """
        pass

    def redoTextChanged(self, *args, **kwargs):  # real signature unknown
        """ QUndoGroup.redoTextChanged[QString] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def removeStack(self, QUndoStack):
        """ QUndoGroup.removeStack(QUndoStack) """
        pass

    # real signature unknown; restored from __doc__
    def setActiveStack(self, QUndoStack):
        """ QUndoGroup.setActiveStack(QUndoStack) """
        pass

    def stacks(self):  # real signature unknown; restored from __doc__
        """ QUndoGroup.stacks() -> list-of-QUndoStack """
        pass

    def undo(self):  # real signature unknown; restored from __doc__
        """ QUndoGroup.undo() """
        pass

    def undoText(self):  # real signature unknown; restored from __doc__
        """ QUndoGroup.undoText() -> QString """
        pass

    def undoTextChanged(self, *args, **kwargs):  # real signature unknown
        """ QUndoGroup.undoTextChanged[QString] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass


class QUndoStack(__PyQt4_QtCore.QObject):

    """ QUndoStack(QObject parent=None) """
    # real signature unknown; restored from __doc__

    def beginMacro(self, QString):
        """ QUndoStack.beginMacro(QString) """
        pass

    def canRedo(self):  # real signature unknown; restored from __doc__
        """ QUndoStack.canRedo() -> bool """
        return False

    def canRedoChanged(self, *args, **kwargs):  # real signature unknown
        """ QUndoStack.canRedoChanged[bool] [signal] """
        pass

    def canUndo(self):  # real signature unknown; restored from __doc__
        """ QUndoStack.canUndo() -> bool """
        return False

    def canUndoChanged(self, *args, **kwargs):  # real signature unknown
        """ QUndoStack.canUndoChanged[bool] [signal] """
        pass

    def cleanChanged(self, *args, **kwargs):  # real signature unknown
        """ QUndoStack.cleanChanged[bool] [signal] """
        pass

    def cleanIndex(self):  # real signature unknown; restored from __doc__
        """ QUndoStack.cleanIndex() -> int """
        return 0

    def clear(self):  # real signature unknown; restored from __doc__
        """ QUndoStack.clear() """
        pass

    def command(self, p_int):  # real signature unknown; restored from __doc__
        """ QUndoStack.command(int) -> QUndoCommand """
        return QUndoCommand

    def count(self):  # real signature unknown; restored from __doc__
        """ QUndoStack.count() -> int """
        return 0

    # real signature unknown; NOTE: unreliably restored from __doc__
    def createRedoAction(self, QObject, QString_prefix=None, *args, **kwargs):
        """ QUndoStack.createRedoAction(QObject, QString prefix=QString()) -> QAction """
        pass

    # real signature unknown; NOTE: unreliably restored from __doc__
    def createUndoAction(self, QObject, QString_prefix=None, *args, **kwargs):
        """ QUndoStack.createUndoAction(QObject, QString prefix=QString()) -> QAction """
        pass

    def endMacro(self):  # real signature unknown; restored from __doc__
        """ QUndoStack.endMacro() """
        pass

    def index(self):  # real signature unknown; restored from __doc__
        """ QUndoStack.index() -> int """
        return 0

    def indexChanged(self, *args, **kwargs):  # real signature unknown
        """ QUndoStack.indexChanged[int] [signal] """
        pass

    def isActive(self):  # real signature unknown; restored from __doc__
        """ QUndoStack.isActive() -> bool """
        return False

    def isClean(self):  # real signature unknown; restored from __doc__
        """ QUndoStack.isClean() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def push(self, QUndoCommand):
        """ QUndoStack.push(QUndoCommand) """
        pass

    def redo(self):  # real signature unknown; restored from __doc__
        """ QUndoStack.redo() """
        pass

    def redoText(self):  # real signature unknown; restored from __doc__
        """ QUndoStack.redoText() -> QString """
        pass

    def redoTextChanged(self, *args, **kwargs):  # real signature unknown
        """ QUndoStack.redoTextChanged[QString] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def setActive(self, bool_active=True):
        """ QUndoStack.setActive(bool active=True) """
        pass

    def setClean(self):  # real signature unknown; restored from __doc__
        """ QUndoStack.setClean() """
        pass

    def setIndex(self, p_int):  # real signature unknown; restored from __doc__
        """ QUndoStack.setIndex(int) """
        pass

    # real signature unknown; restored from __doc__
    def setUndoLimit(self, p_int):
        """ QUndoStack.setUndoLimit(int) """
        pass

    def text(self, p_int):  # real signature unknown; restored from __doc__
        """ QUndoStack.text(int) -> QString """
        pass

    def undo(self):  # real signature unknown; restored from __doc__
        """ QUndoStack.undo() """
        pass

    def undoLimit(self):  # real signature unknown; restored from __doc__
        """ QUndoStack.undoLimit() -> int """
        return 0

    def undoText(self):  # real signature unknown; restored from __doc__
        """ QUndoStack.undoText() -> QString """
        pass

    def undoTextChanged(self, *args, **kwargs):  # real signature unknown
        """ QUndoStack.undoTextChanged[QString] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject_parent=None):
        pass

    def __len__(self):  # real signature unknown; restored from __doc__
        """ x.__len__() <==> len(x) """
        pass


class QUndoView(QListView):

    """
    QUndoView(QWidget parent=None)
    QUndoView(QUndoStack, QWidget parent=None)
    QUndoView(QUndoGroup, QWidget parent=None)
    """

    def cleanIcon(self):  # real signature unknown; restored from __doc__
        """ QUndoView.cleanIcon() -> QIcon """
        return QIcon

    def emptyLabel(self):  # real signature unknown; restored from __doc__
        """ QUndoView.emptyLabel() -> QString """
        pass

    def group(self):  # real signature unknown; restored from __doc__
        """ QUndoView.group() -> QUndoGroup """
        return QUndoGroup

    # real signature unknown; restored from __doc__
    def setCleanIcon(self, QIcon):
        """ QUndoView.setCleanIcon(QIcon) """
        pass

    # real signature unknown; restored from __doc__
    def setEmptyLabel(self, QString):
        """ QUndoView.setEmptyLabel(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setGroup(self, QUndoGroup):
        """ QUndoView.setGroup(QUndoGroup) """
        pass

    # real signature unknown; restored from __doc__
    def setStack(self, QUndoStack):
        """ QUndoView.setStack(QUndoStack) """
        pass

    def stack(self):  # real signature unknown; restored from __doc__
        """ QUndoView.stack() -> QUndoStack """
        return QUndoStack

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QVBoxLayout(QBoxLayout):

    """
    QVBoxLayout()
    QVBoxLayout(QWidget)
    """
    # real signature unknown; restored from __doc__ with multiple overloads

    def __init__(self, QWidget=None):
        pass


class QVector2D():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QVector2D()
    QVector2D(float, float)
    QVector2D(QPoint)
    QVector2D(QPointF)
    QVector2D(QVector3D)
    QVector2D(QVector4D)
    QVector2D(QVector2D)
    """
    # real signature unknown; restored from __doc__

    def dotProduct(self, QVector2D, QVector2D_1):
        """ QVector2D.dotProduct(QVector2D, QVector2D) -> float """
        return 0.0

    def isNull(self):  # real signature unknown; restored from __doc__
        """ QVector2D.isNull() -> bool """
        return False

    def length(self):  # real signature unknown; restored from __doc__
        """ QVector2D.length() -> float """
        return 0.0

    def lengthSquared(self):  # real signature unknown; restored from __doc__
        """ QVector2D.lengthSquared() -> float """
        return 0.0

    def normalize(self):  # real signature unknown; restored from __doc__
        """ QVector2D.normalize() """
        pass

    def normalized(self):  # real signature unknown; restored from __doc__
        """ QVector2D.normalized() -> QVector2D """
        return QVector2D

    def setX(self, p_float):  # real signature unknown; restored from __doc__
        """ QVector2D.setX(float) """
        pass

    def setY(self, p_float):  # real signature unknown; restored from __doc__
        """ QVector2D.setY(float) """
        pass

    def toPoint(self):  # real signature unknown; restored from __doc__
        """ QVector2D.toPoint() -> QPoint """
        pass

    def toPointF(self):  # real signature unknown; restored from __doc__
        """ QVector2D.toPointF() -> QPointF """
        pass

    def toVector3D(self):  # real signature unknown; restored from __doc__
        """ QVector2D.toVector3D() -> QVector3D """
        return QVector3D

    def toVector4D(self):  # real signature unknown; restored from __doc__
        """ QVector2D.toVector4D() -> QVector4D """
        return QVector4D

    def x(self):  # real signature unknown; restored from __doc__
        """ QVector2D.x() -> float """
        return 0.0

    def y(self):  # real signature unknown; restored from __doc__
        """ QVector2D.y() -> float """
        return 0.0

    def __add__(self, y):  # real signature unknown; restored from __doc__
        """ x.__add__(y) <==> x+y """
        pass

    def __div__(self, y):  # real signature unknown; restored from __doc__
        """ x.__div__(y) <==> x/y """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    def __idiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__idiv__(y) <==> x/y """
        pass

    def __imul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__imul__(y) <==> x*y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    def __itruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__itruediv__(y) <==> x/y """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __mul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__mul__(y) <==> x*y """
        pass

    def __neg__(self):  # real signature unknown; restored from __doc__
        """ x.__neg__() <==> -x """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __radd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__radd__(y) <==> y+x """
        pass

    def __rdiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rdiv__(y) <==> y/x """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    def __repr__(self):  # real signature unknown; restored from __doc__
        """ x.__repr__() <==> repr(x) """
        pass

    def __rmul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rmul__(y) <==> y*x """
        pass

    def __rsub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rsub__(y) <==> y-x """
        pass

    def __rtruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rtruediv__(y) <==> y/x """
        pass

    def __sub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__sub__(y) <==> x-y """
        pass

    def __truediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__truediv__(y) <==> x/y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QVector3D():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QVector3D()
    QVector3D(float, float, float)
    QVector3D(QPoint)
    QVector3D(QPointF)
    QVector3D(QVector2D)
    QVector3D(QVector2D, float)
    QVector3D(QVector4D)
    QVector3D(QVector3D)
    """
    # real signature unknown; restored from __doc__

    def crossProduct(self, QVector3D, QVector3D_1):
        """ QVector3D.crossProduct(QVector3D, QVector3D) -> QVector3D """
        return QVector3D

    # real signature unknown; restored from __doc__
    def distanceToLine(self, QVector3D, QVector3D_1):
        """ QVector3D.distanceToLine(QVector3D, QVector3D) -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def distanceToPlane(self, QVector3D, QVector3D_1, QVector3D_2=None):
        """
        QVector3D.distanceToPlane(QVector3D, QVector3D) -> float
        QVector3D.distanceToPlane(QVector3D, QVector3D, QVector3D) -> float
        """
        return 0.0

    # real signature unknown; restored from __doc__
    def dotProduct(self, QVector3D, QVector3D_1):
        """ QVector3D.dotProduct(QVector3D, QVector3D) -> float """
        return 0.0

    def isNull(self):  # real signature unknown; restored from __doc__
        """ QVector3D.isNull() -> bool """
        return False

    def length(self):  # real signature unknown; restored from __doc__
        """ QVector3D.length() -> float """
        return 0.0

    def lengthSquared(self):  # real signature unknown; restored from __doc__
        """ QVector3D.lengthSquared() -> float """
        return 0.0

    # real signature unknown; restored from __doc__ with multiple overloads
    def normal(self, QVector3D, QVector3D_1, QVector3D_2=None):
        """
        QVector3D.normal(QVector3D, QVector3D) -> QVector3D
        QVector3D.normal(QVector3D, QVector3D, QVector3D) -> QVector3D
        """
        return QVector3D

    def normalize(self):  # real signature unknown; restored from __doc__
        """ QVector3D.normalize() """
        pass

    def normalized(self):  # real signature unknown; restored from __doc__
        """ QVector3D.normalized() -> QVector3D """
        return QVector3D

    def setX(self, p_float):  # real signature unknown; restored from __doc__
        """ QVector3D.setX(float) """
        pass

    def setY(self, p_float):  # real signature unknown; restored from __doc__
        """ QVector3D.setY(float) """
        pass

    def setZ(self, p_float):  # real signature unknown; restored from __doc__
        """ QVector3D.setZ(float) """
        pass

    def toPoint(self):  # real signature unknown; restored from __doc__
        """ QVector3D.toPoint() -> QPoint """
        pass

    def toPointF(self):  # real signature unknown; restored from __doc__
        """ QVector3D.toPointF() -> QPointF """
        pass

    def toVector2D(self):  # real signature unknown; restored from __doc__
        """ QVector3D.toVector2D() -> QVector2D """
        return QVector2D

    def toVector4D(self):  # real signature unknown; restored from __doc__
        """ QVector3D.toVector4D() -> QVector4D """
        return QVector4D

    def x(self):  # real signature unknown; restored from __doc__
        """ QVector3D.x() -> float """
        return 0.0

    def y(self):  # real signature unknown; restored from __doc__
        """ QVector3D.y() -> float """
        return 0.0

    def z(self):  # real signature unknown; restored from __doc__
        """ QVector3D.z() -> float """
        return 0.0

    def __add__(self, y):  # real signature unknown; restored from __doc__
        """ x.__add__(y) <==> x+y """
        pass

    def __div__(self, y):  # real signature unknown; restored from __doc__
        """ x.__div__(y) <==> x/y """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    def __idiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__idiv__(y) <==> x/y """
        pass

    def __imul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__imul__(y) <==> x*y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    def __itruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__itruediv__(y) <==> x/y """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __mul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__mul__(y) <==> x*y """
        pass

    def __neg__(self):  # real signature unknown; restored from __doc__
        """ x.__neg__() <==> -x """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __radd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__radd__(y) <==> y+x """
        pass

    def __rdiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rdiv__(y) <==> y/x """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    def __repr__(self):  # real signature unknown; restored from __doc__
        """ x.__repr__() <==> repr(x) """
        pass

    def __rmul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rmul__(y) <==> y*x """
        pass

    def __rsub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rsub__(y) <==> y-x """
        pass

    def __rtruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rtruediv__(y) <==> y/x """
        pass

    def __sub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__sub__(y) <==> x-y """
        pass

    def __truediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__truediv__(y) <==> x/y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QVector4D():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QVector4D()
    QVector4D(float, float, float, float)
    QVector4D(QPoint)
    QVector4D(QPointF)
    QVector4D(QVector2D)
    QVector4D(QVector2D, float, float)
    QVector4D(QVector3D)
    QVector4D(QVector3D, float)
    QVector4D(QVector4D)
    """
    # real signature unknown; restored from __doc__

    def dotProduct(self, QVector4D, QVector4D_1):
        """ QVector4D.dotProduct(QVector4D, QVector4D) -> float """
        return 0.0

    def isNull(self):  # real signature unknown; restored from __doc__
        """ QVector4D.isNull() -> bool """
        return False

    def length(self):  # real signature unknown; restored from __doc__
        """ QVector4D.length() -> float """
        return 0.0

    def lengthSquared(self):  # real signature unknown; restored from __doc__
        """ QVector4D.lengthSquared() -> float """
        return 0.0

    def normalize(self):  # real signature unknown; restored from __doc__
        """ QVector4D.normalize() """
        pass

    def normalized(self):  # real signature unknown; restored from __doc__
        """ QVector4D.normalized() -> QVector4D """
        return QVector4D

    def setW(self, p_float):  # real signature unknown; restored from __doc__
        """ QVector4D.setW(float) """
        pass

    def setX(self, p_float):  # real signature unknown; restored from __doc__
        """ QVector4D.setX(float) """
        pass

    def setY(self, p_float):  # real signature unknown; restored from __doc__
        """ QVector4D.setY(float) """
        pass

    def setZ(self, p_float):  # real signature unknown; restored from __doc__
        """ QVector4D.setZ(float) """
        pass

    def toPoint(self):  # real signature unknown; restored from __doc__
        """ QVector4D.toPoint() -> QPoint """
        pass

    def toPointF(self):  # real signature unknown; restored from __doc__
        """ QVector4D.toPointF() -> QPointF """
        pass

    def toVector2D(self):  # real signature unknown; restored from __doc__
        """ QVector4D.toVector2D() -> QVector2D """
        return QVector2D

    # real signature unknown; restored from __doc__
    def toVector2DAffine(self):
        """ QVector4D.toVector2DAffine() -> QVector2D """
        return QVector2D

    def toVector3D(self):  # real signature unknown; restored from __doc__
        """ QVector4D.toVector3D() -> QVector3D """
        return QVector3D

    # real signature unknown; restored from __doc__
    def toVector3DAffine(self):
        """ QVector4D.toVector3DAffine() -> QVector3D """
        return QVector3D

    def w(self):  # real signature unknown; restored from __doc__
        """ QVector4D.w() -> float """
        return 0.0

    def x(self):  # real signature unknown; restored from __doc__
        """ QVector4D.x() -> float """
        return 0.0

    def y(self):  # real signature unknown; restored from __doc__
        """ QVector4D.y() -> float """
        return 0.0

    def z(self):  # real signature unknown; restored from __doc__
        """ QVector4D.z() -> float """
        return 0.0

    def __add__(self, y):  # real signature unknown; restored from __doc__
        """ x.__add__(y) <==> x+y """
        pass

    def __div__(self, y):  # real signature unknown; restored from __doc__
        """ x.__div__(y) <==> x/y """
        pass

    def __eq__(self, y):  # real signature unknown; restored from __doc__
        """ x.__eq__(y) <==> x==y """
        pass

    def __ge__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ge__(y) <==> x>=y """
        pass

    def __gt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__gt__(y) <==> x>y """
        pass

    def __iadd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__iadd__(y) <==> x+y """
        pass

    def __idiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__idiv__(y) <==> x/y """
        pass

    def __imul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__imul__(y) <==> x*y """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass

    def __isub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__isub__(y) <==> x-y """
        pass

    def __itruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__itruediv__(y) <==> x/y """
        pass

    def __le__(self, y):  # real signature unknown; restored from __doc__
        """ x.__le__(y) <==> x<=y """
        pass

    def __lt__(self, y):  # real signature unknown; restored from __doc__
        """ x.__lt__(y) <==> x<y """
        pass

    def __mul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__mul__(y) <==> x*y """
        pass

    def __neg__(self):  # real signature unknown; restored from __doc__
        """ x.__neg__() <==> -x """
        pass

    def __ne__(self, y):  # real signature unknown; restored from __doc__
        """ x.__ne__(y) <==> x!=y """
        pass

    def __radd__(self, y):  # real signature unknown; restored from __doc__
        """ x.__radd__(y) <==> y+x """
        pass

    def __rdiv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rdiv__(y) <==> y/x """
        pass

    def __reduce__(self, *args, **kwargs):  # real signature unknown
        pass

    def __repr__(self):  # real signature unknown; restored from __doc__
        """ x.__repr__() <==> repr(x) """
        pass

    def __rmul__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rmul__(y) <==> y*x """
        pass

    def __rsub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rsub__(y) <==> y-x """
        pass

    def __rtruediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__rtruediv__(y) <==> y/x """
        pass

    def __sub__(self, y):  # real signature unknown; restored from __doc__
        """ x.__sub__(y) <==> x-y """
        pass

    def __truediv__(self, y):  # real signature unknown; restored from __doc__
        """ x.__truediv__(y) <==> x/y """
        pass

    __weakref__ = property(lambda self: object())  # default


class QWhatsThis():  # skipped bases: <type 'sip.simplewrapper'>
    # no doc
    # real signature unknown; restored from __doc__

    def createAction(self, QObject_parent=None):
        """ QWhatsThis.createAction(QObject parent=None) -> QAction """
        return QAction

    # real signature unknown; restored from __doc__
    def enterWhatsThisMode(self):
        """ QWhatsThis.enterWhatsThisMode() """
        pass

    def hideText(self):  # real signature unknown; restored from __doc__
        """ QWhatsThis.hideText() """
        pass

    def inWhatsThisMode(self):  # real signature unknown; restored from __doc__
        """ QWhatsThis.inWhatsThisMode() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def leaveWhatsThisMode(self):
        """ QWhatsThis.leaveWhatsThisMode() """
        pass

    # real signature unknown; restored from __doc__
    def showText(self, QPoint, QString, QWidget_widget=None):
        """ QWhatsThis.showText(QPoint, QString, QWidget widget=None) """
        pass

    def __init__(self, *args, **kwargs):  # real signature unknown
        pass

    __weakref__ = property(lambda self: object())  # default


class QWhatsThisClickedEvent(__PyQt4_QtCore.QEvent):

    """
    QWhatsThisClickedEvent(QString)
    QWhatsThisClickedEvent(QWhatsThisClickedEvent)
    """

    def href(self):  # real signature unknown; restored from __doc__
        """ QWhatsThisClickedEvent.href() -> QString """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QWheelEvent(QInputEvent):

    """
    QWheelEvent(QPoint, int, Qt.MouseButtons, Qt.KeyboardModifiers, Qt.Orientation orientation=Qt.Vertical)
    QWheelEvent(QPoint, QPoint, int, Qt.MouseButtons, Qt.KeyboardModifiers, Qt.Orientation orientation=Qt.Vertical)
    QWheelEvent(QWheelEvent)
    """

    def buttons(self):  # real signature unknown; restored from __doc__
        """ QWheelEvent.buttons() -> Qt.MouseButtons """
        pass

    def delta(self):  # real signature unknown; restored from __doc__
        """ QWheelEvent.delta() -> int """
        return 0

    def globalPos(self):  # real signature unknown; restored from __doc__
        """ QWheelEvent.globalPos() -> QPoint """
        pass

    def globalX(self):  # real signature unknown; restored from __doc__
        """ QWheelEvent.globalX() -> int """
        return 0

    def globalY(self):  # real signature unknown; restored from __doc__
        """ QWheelEvent.globalY() -> int """
        return 0

    def orientation(self):  # real signature unknown; restored from __doc__
        """ QWheelEvent.orientation() -> Qt.Orientation """
        pass

    def pos(self):  # real signature unknown; restored from __doc__
        """ QWheelEvent.pos() -> QPoint """
        pass

    def x(self):  # real signature unknown; restored from __doc__
        """ QWheelEvent.x() -> int """
        return 0

    def y(self):  # real signature unknown; restored from __doc__
        """ QWheelEvent.y() -> int """
        return 0

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, *__args):
        pass


class QWidgetAction(QAction):

    """ QWidgetAction(QObject) """

    def createdWidgets(self):  # real signature unknown; restored from __doc__
        """ QWidgetAction.createdWidgets() -> list-of-QWidget """
        pass

    # real signature unknown; restored from __doc__
    def createWidget(self, QWidget):
        """ QWidgetAction.createWidget(QWidget) -> QWidget """
        return QWidget

    def defaultWidget(self):  # real signature unknown; restored from __doc__
        """ QWidgetAction.defaultWidget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def deleteWidget(self, QWidget):
        """ QWidgetAction.deleteWidget(QWidget) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QWidgetAction.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QWidgetAction.eventFilter(QObject, QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def releaseWidget(self, QWidget):
        """ QWidgetAction.releaseWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def requestWidget(self, QWidget):
        """ QWidgetAction.requestWidget(QWidget) -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def setDefaultWidget(self, QWidget):
        """ QWidgetAction.setDefaultWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QObject):
        pass


class QWidgetItem(QLayoutItem):

    """ QWidgetItem(QWidget) """
    # real signature unknown; restored from __doc__

    def expandingDirections(self):
        """ QWidgetItem.expandingDirections() -> Qt.Orientations """
        pass

    def geometry(self):  # real signature unknown; restored from __doc__
        """ QWidgetItem.geometry() -> QRect """
        pass

    # real signature unknown; restored from __doc__
    def hasHeightForWidth(self):
        """ QWidgetItem.hasHeightForWidth() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def heightForWidth(self, p_int):
        """ QWidgetItem.heightForWidth(int) -> int """
        return 0

    def isEmpty(self):  # real signature unknown; restored from __doc__
        """ QWidgetItem.isEmpty() -> bool """
        return False

    def maximumSize(self):  # real signature unknown; restored from __doc__
        """ QWidgetItem.maximumSize() -> QSize """
        pass

    def minimumSize(self):  # real signature unknown; restored from __doc__
        """ QWidgetItem.minimumSize() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def setGeometry(self, QRect):
        """ QWidgetItem.setGeometry(QRect) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QWidgetItem.sizeHint() -> QSize """
        pass

    def widget(self):  # real signature unknown; restored from __doc__
        """ QWidgetItem.widget() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget):
        pass


class QWindowStateChangeEvent(__PyQt4_QtCore.QEvent):
    # no doc

    def oldState(self):  # real signature unknown; restored from __doc__
        """ QWindowStateChangeEvent.oldState() -> Qt.WindowStates """
        pass

    def __init__(self, *args, **kwargs):  # real signature unknown
        pass


class QWizard(QDialog):

    """ QWizard(QWidget parent=None, Qt.WindowFlags flags=0) """
    # real signature unknown; restored from __doc__

    def addPage(self, QWizardPage):
        """ QWizard.addPage(QWizardPage) -> int """
        return 0

    def back(self):  # real signature unknown; restored from __doc__
        """ QWizard.back() """
        pass

    # real signature unknown; restored from __doc__
    def button(self, QWizard_WizardButton):
        """ QWizard.button(QWizard.WizardButton) -> QAbstractButton """
        return QAbstractButton

    # real signature unknown; restored from __doc__
    def buttonText(self, QWizard_WizardButton):
        """ QWizard.buttonText(QWizard.WizardButton) -> QString """
        pass

    # real signature unknown; restored from __doc__
    def cleanupPage(self, p_int):
        """ QWizard.cleanupPage(int) """
        pass

    def currentId(self):  # real signature unknown; restored from __doc__
        """ QWizard.currentId() -> int """
        return 0

    def currentIdChanged(self, *args, **kwargs):  # real signature unknown
        """ QWizard.currentIdChanged[int] [signal] """
        pass

    def currentPage(self):  # real signature unknown; restored from __doc__
        """ QWizard.currentPage() -> QWizardPage """
        return QWizardPage

    def customButtonClicked(self, *args, **kwargs):  # real signature unknown
        """ QWizard.customButtonClicked[int] [signal] """
        pass

    def done(self, p_int):  # real signature unknown; restored from __doc__
        """ QWizard.done(int) """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QWizard.event(QEvent) -> bool """
        return False

    def field(self, QString):  # real signature unknown; restored from __doc__
        """ QWizard.field(QString) -> QVariant """
        pass

    # real signature unknown; restored from __doc__
    def hasVisitedPage(self, p_int):
        """ QWizard.hasVisitedPage(int) -> bool """
        return False

    def helpRequested(self, *args, **kwargs):  # real signature unknown
        """ QWizard.helpRequested[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def initializePage(self, p_int):
        """ QWizard.initializePage(int) """
        pass

    def next(self):  # real signature unknown; restored from __doc__
        """ QWizard.next() """
        pass

    def nextId(self):  # real signature unknown; restored from __doc__
        """ QWizard.nextId() -> int """
        return 0

    def options(self):  # real signature unknown; restored from __doc__
        """ QWizard.options() -> QWizard.WizardOptions """
        pass

    def page(self, p_int):  # real signature unknown; restored from __doc__
        """ QWizard.page(int) -> QWizardPage """
        return QWizardPage

    def pageAdded(self, *args, **kwargs):  # real signature unknown
        """ QWizard.pageAdded[int] [signal] """
        pass

    def pageIds(self):  # real signature unknown; restored from __doc__
        """ QWizard.pageIds() -> list-of-int """
        pass

    def pageRemoved(self, *args, **kwargs):  # real signature unknown
        """ QWizard.pageRemoved[int] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QWizard.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def pixmap(self, QWizard_WizardPixmap):
        """ QWizard.pixmap(QWizard.WizardPixmap) -> QPixmap """
        return QPixmap

    # real signature unknown; restored from __doc__
    def removePage(self, p_int):
        """ QWizard.removePage(int) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QWizard.resizeEvent(QResizeEvent) """
        pass

    def restart(self):  # real signature unknown; restored from __doc__
        """ QWizard.restart() """
        pass

    # real signature unknown; restored from __doc__
    def setButton(self, QWizard_WizardButton, QAbstractButton):
        """ QWizard.setButton(QWizard.WizardButton, QAbstractButton) """
        pass

    # real signature unknown; restored from __doc__
    def setButtonLayout(self, list_of_QWizard_WizardButton):
        """ QWizard.setButtonLayout(list-of-QWizard.WizardButton) """
        pass

    # real signature unknown; restored from __doc__
    def setButtonText(self, QWizard_WizardButton, QString):
        """ QWizard.setButtonText(QWizard.WizardButton, QString) """
        pass

    # real signature unknown; restored from __doc__
    def setDefaultProperty(self, p_str, p_str_1, p_str_2):
        """ QWizard.setDefaultProperty(str, str, str) """
        pass

    # real signature unknown; restored from __doc__
    def setField(self, QString, QVariant):
        """ QWizard.setField(QString, QVariant) """
        pass

    # real signature unknown; restored from __doc__
    def setOption(self, QWizard_WizardOption, bool_on=True):
        """ QWizard.setOption(QWizard.WizardOption, bool on=True) """
        pass

    # real signature unknown; restored from __doc__
    def setOptions(self, QWizard_WizardOptions):
        """ QWizard.setOptions(QWizard.WizardOptions) """
        pass

    # real signature unknown; restored from __doc__
    def setPage(self, p_int, QWizardPage):
        """ QWizard.setPage(int, QWizardPage) """
        pass

    # real signature unknown; restored from __doc__
    def setPixmap(self, QWizard_WizardPixmap, QPixmap):
        """ QWizard.setPixmap(QWizard.WizardPixmap, QPixmap) """
        pass

    # real signature unknown; restored from __doc__
    def setSideWidget(self, QWidget):
        """ QWizard.setSideWidget(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setStartId(self, p_int):
        """ QWizard.setStartId(int) """
        pass

    # real signature unknown; restored from __doc__
    def setSubTitleFormat(self, Qt_TextFormat):
        """ QWizard.setSubTitleFormat(Qt.TextFormat) """
        pass

    # real signature unknown; restored from __doc__
    def setTitleFormat(self, Qt_TextFormat):
        """ QWizard.setTitleFormat(Qt.TextFormat) """
        pass

    # real signature unknown; restored from __doc__
    def setVisible(self, bool):
        """ QWizard.setVisible(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setWizardStyle(self, QWizard_WizardStyle):
        """ QWizard.setWizardStyle(QWizard.WizardStyle) """
        pass

    def sideWidget(self):  # real signature unknown; restored from __doc__
        """ QWizard.sideWidget() -> QWidget """
        return QWidget

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QWizard.sizeHint() -> QSize """
        pass

    def startId(self):  # real signature unknown; restored from __doc__
        """ QWizard.startId() -> int """
        return 0

    def subTitleFormat(self):  # real signature unknown; restored from __doc__
        """ QWizard.subTitleFormat() -> Qt.TextFormat """
        pass

    # real signature unknown; restored from __doc__
    def testOption(self, QWizard_WizardOption):
        """ QWizard.testOption(QWizard.WizardOption) -> bool """
        return False

    def titleFormat(self):  # real signature unknown; restored from __doc__
        """ QWizard.titleFormat() -> Qt.TextFormat """
        pass

    # real signature unknown; restored from __doc__
    def validateCurrentPage(self):
        """ QWizard.validateCurrentPage() -> bool """
        return False

    def visitedPages(self):  # real signature unknown; restored from __doc__
        """ QWizard.visitedPages() -> list-of-int """
        pass

    def WizardButton(self, *args, **kwargs):  # real signature unknown
        pass

    def WizardOption(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def WizardOptions(self, *__args):
        """
        QWizard.WizardOptions(QWizard.WizardOptions)
        QWizard.WizardOptions(int)
        QWizard.WizardOptions()
        """
        pass

    def WizardPixmap(self, *args, **kwargs):  # real signature unknown
        pass

    def wizardStyle(self):  # real signature unknown; restored from __doc__
        """ QWizard.wizardStyle() -> QWizard.WizardStyle """
        pass

    def WizardStyle(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None, Qt_WindowFlags_flags=0):
        pass

    AeroStyle = 3
    BackButton = 0
    BackgroundPixmap = 3
    BannerPixmap = 2
    CancelButton = 4
    CancelButtonOnLeft = 1024
    ClassicStyle = 0
    CommitButton = 2
    CustomButton1 = 6
    CustomButton2 = 7
    CustomButton3 = 8
    DisabledBackButtonOnLastPage = 64
    ExtendedWatermarkPixmap = 4
    FinishButton = 3
    HaveCustomButton1 = 8192
    HaveCustomButton2 = 16384
    HaveCustomButton3 = 32768
    HaveFinishButtonOnEarlyPages = 256
    HaveHelpButton = 2048
    HaveNextButtonOnLastPage = 128
    HelpButton = 5
    HelpButtonOnRight = 4096
    IgnoreSubTitles = 2
    IndependentPages = 1
    LogoPixmap = 1
    MacStyle = 2
    ModernStyle = 1
    NextButton = 1
    NoBackButtonOnLastPage = 32
    NoBackButtonOnStartPage = 16
    NoCancelButton = 512
    NoDefaultButton = 8
    Stretch = 9
    WatermarkPixmap = 0


class QWizardPage(QWidget):

    """ QWizardPage(QWidget parent=None) """
    # real signature unknown; restored from __doc__

    def buttonText(self, QWizard_WizardButton):
        """ QWizardPage.buttonText(QWizard.WizardButton) -> QString """
        pass

    def cleanupPage(self):  # real signature unknown; restored from __doc__
        """ QWizardPage.cleanupPage() """
        pass

    def completeChanged(self, *args, **kwargs):  # real signature unknown
        """ QWizardPage.completeChanged[] [signal] """
        pass

    def field(self, QString):  # real signature unknown; restored from __doc__
        """ QWizardPage.field(QString) -> QVariant """
        pass

    def initializePage(self):  # real signature unknown; restored from __doc__
        """ QWizardPage.initializePage() """
        pass

    def isCommitPage(self):  # real signature unknown; restored from __doc__
        """ QWizardPage.isCommitPage() -> bool """
        return False

    def isComplete(self):  # real signature unknown; restored from __doc__
        """ QWizardPage.isComplete() -> bool """
        return False

    def isFinalPage(self):  # real signature unknown; restored from __doc__
        """ QWizardPage.isFinalPage() -> bool """
        return False

    def nextId(self):  # real signature unknown; restored from __doc__
        """ QWizardPage.nextId() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def pixmap(self, QWizard_WizardPixmap):
        """ QWizardPage.pixmap(QWizard.WizardPixmap) -> QPixmap """
        return QPixmap

    # real signature unknown; restored from __doc__ with multiple overloads
    def registerField(self, QString, QWidget, str_property=None, *__args):
        """
        QWizardPage.registerField(QString, QWidget, str property=None, signal changedSignal=0)
        QWizardPage.registerField(QString, QWidget, str property=None, SIGNAL() changedSignal=0)
        """
        pass

    # real signature unknown; restored from __doc__
    def setButtonText(self, QWizard_WizardButton, QString):
        """ QWizardPage.setButtonText(QWizard.WizardButton, QString) """
        pass

    # real signature unknown; restored from __doc__
    def setCommitPage(self, bool):
        """ QWizardPage.setCommitPage(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setField(self, QString, QVariant):
        """ QWizardPage.setField(QString, QVariant) """
        pass

    # real signature unknown; restored from __doc__
    def setFinalPage(self, bool):
        """ QWizardPage.setFinalPage(bool) """
        pass

    # real signature unknown; restored from __doc__
    def setPixmap(self, QWizard_WizardPixmap, QPixmap):
        """ QWizardPage.setPixmap(QWizard.WizardPixmap, QPixmap) """
        pass

    # real signature unknown; restored from __doc__
    def setSubTitle(self, QString):
        """ QWizardPage.setSubTitle(QString) """
        pass

    # real signature unknown; restored from __doc__
    def setTitle(self, QString):
        """ QWizardPage.setTitle(QString) """
        pass

    def subTitle(self):  # real signature unknown; restored from __doc__
        """ QWizardPage.subTitle() -> QString """
        pass

    def title(self):  # real signature unknown; restored from __doc__
        """ QWizardPage.title() -> QString """
        pass

    def validatePage(self):  # real signature unknown; restored from __doc__
        """ QWizardPage.validatePage() -> bool """
        return False

    def wizard(self):  # real signature unknown; restored from __doc__
        """ QWizardPage.wizard() -> QWizard """
        return QWizard

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass


class QWorkspace(QWidget):

    """ QWorkspace(QWidget parent=None) """
    # real signature unknown; restored from __doc__

    def activateNextWindow(self):
        """ QWorkspace.activateNextWindow() """
        pass

    # real signature unknown; restored from __doc__
    def activatePreviousWindow(self):
        """ QWorkspace.activatePreviousWindow() """
        pass

    def activeWindow(self):  # real signature unknown; restored from __doc__
        """ QWorkspace.activeWindow() -> QWidget """
        return QWidget

    # real signature unknown; restored from __doc__
    def addWindow(self, QWidget, Qt_WindowFlags_flags=0):
        """ QWorkspace.addWindow(QWidget, Qt.WindowFlags flags=0) -> QWidget """
        return QWidget

    def arrangeIcons(self):  # real signature unknown; restored from __doc__
        """ QWorkspace.arrangeIcons() """
        pass

    def background(self):  # real signature unknown; restored from __doc__
        """ QWorkspace.background() -> QBrush """
        return QBrush

    def cascade(self):  # real signature unknown; restored from __doc__
        """ QWorkspace.cascade() """
        pass

    # real signature unknown; restored from __doc__
    def changeEvent(self, QEvent):
        """ QWorkspace.changeEvent(QEvent) """
        pass

    # real signature unknown; restored from __doc__
    def childEvent(self, QChildEvent):
        """ QWorkspace.childEvent(QChildEvent) """
        pass

    # real signature unknown; restored from __doc__
    def closeActiveWindow(self):
        """ QWorkspace.closeActiveWindow() """
        pass

    def closeAllWindows(self):  # real signature unknown; restored from __doc__
        """ QWorkspace.closeAllWindows() """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QWorkspace.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QWorkspace.eventFilter(QObject, QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def hideEvent(self, QHideEvent):
        """ QWorkspace.hideEvent(QHideEvent) """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QWorkspace.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QWorkspace.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def scrollBarsEnabled(self):
        """ QWorkspace.scrollBarsEnabled() -> bool """
        return False

    # real signature unknown; restored from __doc__
    def setActiveWindow(self, QWidget):
        """ QWorkspace.setActiveWindow(QWidget) """
        pass

    # real signature unknown; restored from __doc__
    def setBackground(self, QBrush):
        """ QWorkspace.setBackground(QBrush) """
        pass

    # real signature unknown; restored from __doc__
    def setScrollBarsEnabled(self, bool):
        """ QWorkspace.setScrollBarsEnabled(bool) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QWorkspace.showEvent(QShowEvent) """
        pass

    def sizeHint(self):  # real signature unknown; restored from __doc__
        """ QWorkspace.sizeHint() -> QSize """
        pass

    def tile(self):  # real signature unknown; restored from __doc__
        """ QWorkspace.tile() """
        pass

    # real signature unknown; restored from __doc__
    def wheelEvent(self, QWheelEvent):
        """ QWorkspace.wheelEvent(QWheelEvent) """
        pass

    def windowActivated(self, *args, **kwargs):  # real signature unknown
        """ QWorkspace.windowActivated[QWidget] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def windowList(self, QWorkspace_WindowOrder_order=None):
        """ QWorkspace.windowList(QWorkspace.WindowOrder order=QWorkspace.CreationOrder) -> list-of-QWidget """
        pass

    def WindowOrder(self, *args, **kwargs):  # real signature unknown
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    CreationOrder = 0
    StackingOrder = 1


class QX11EmbedContainer(QWidget):

    """ QX11EmbedContainer(QWidget parent=None) """

    def clientClosed(self, *args, **kwargs):  # real signature unknown
        """ QX11EmbedContainer.clientClosed[] [signal] """
        pass

    def clientIsEmbedded(self, *args, **kwargs):  # real signature unknown
        """ QX11EmbedContainer.clientIsEmbedded[] [signal] """
        pass

    def clientWinId(self):  # real signature unknown; restored from __doc__
        """ QX11EmbedContainer.clientWinId() -> int """
        return 0

    def discardClient(self):  # real signature unknown; restored from __doc__
        """ QX11EmbedContainer.discardClient() """
        pass

    # real signature unknown; restored from __doc__
    def embedClient(self, p_int):
        """ QX11EmbedContainer.embedClient(int) """
        pass

    def Error(self, *args, **kwargs):  # real signature unknown
        pass

    def error(self):  # real signature unknown; restored from __doc__
        """
        QX11EmbedContainer.error() -> QX11EmbedContainer.Error
        QX11EmbedContainer.error[QX11EmbedContainer.Error] [signal]
        """
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QX11EmbedContainer.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QX11EmbedContainer.eventFilter(QObject, QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def hideEvent(self, QHideEvent):
        """ QX11EmbedContainer.hideEvent(QHideEvent) """
        pass

    def minimumSizeHint(self):  # real signature unknown; restored from __doc__
        """ QX11EmbedContainer.minimumSizeHint() -> QSize """
        pass

    # real signature unknown; restored from __doc__
    def paintEvent(self, QPaintEvent):
        """ QX11EmbedContainer.paintEvent(QPaintEvent) """
        pass

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QX11EmbedContainer.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def showEvent(self, QShowEvent):
        """ QX11EmbedContainer.showEvent(QShowEvent) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    Internal = 1
    InvalidWindowID = 2
    Unknown = 0


class QX11EmbedWidget(QWidget):

    """ QX11EmbedWidget(QWidget parent=None) """

    def containerClosed(self, *args, **kwargs):  # real signature unknown
        """ QX11EmbedWidget.containerClosed[] [signal] """
        pass

    def containerWinId(self):  # real signature unknown; restored from __doc__
        """ QX11EmbedWidget.containerWinId() -> int """
        return 0

    def embedded(self, *args, **kwargs):  # real signature unknown
        """ QX11EmbedWidget.embedded[] [signal] """
        pass

    # real signature unknown; restored from __doc__
    def embedInto(self, p_int):
        """ QX11EmbedWidget.embedInto(int) """
        pass

    def error(self):  # real signature unknown; restored from __doc__
        """
        QX11EmbedWidget.error() -> QX11EmbedWidget.Error
        QX11EmbedWidget.error[QX11EmbedWidget.Error] [signal]
        """
        pass

    def Error(self, *args, **kwargs):  # real signature unknown
        pass

    def event(self, QEvent):  # real signature unknown; restored from __doc__
        """ QX11EmbedWidget.event(QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def eventFilter(self, QObject, QEvent):
        """ QX11EmbedWidget.eventFilter(QObject, QEvent) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def resizeEvent(self, QResizeEvent):
        """ QX11EmbedWidget.resizeEvent(QResizeEvent) """
        pass

    # real signature unknown; restored from __doc__
    def __init__(self, QWidget_parent=None):
        pass

    Internal = 1
    InvalidWindowID = 2
    Unknown = 0


class QX11Info():  # skipped bases: <type 'sip.simplewrapper'>

    """
    QX11Info()
    QX11Info(QX11Info)
    """
    # real signature unknown; restored from __doc__

    def appCells(self, int_screen=-1):
        """ QX11Info.appCells(int screen=-1) -> int """
        return 0

    def appClass(self):  # real signature unknown; restored from __doc__
        """ QX11Info.appClass() -> str """
        return ""

    # real signature unknown; restored from __doc__
    def appColormap(self, int_screen=-1):
        """ QX11Info.appColormap(int screen=-1) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def appDefaultColormap(self, int_screen=-1):
        """ QX11Info.appDefaultColormap(int screen=-1) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def appDefaultVisual(self, int_screen=-1):
        """ QX11Info.appDefaultVisual(int screen=-1) -> bool """
        return False

    # real signature unknown; restored from __doc__
    def appDepth(self, int_screen=-1):
        """ QX11Info.appDepth(int screen=-1) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def appDpiX(self, int_screen=-1):
        """ QX11Info.appDpiX(int screen=-1) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def appDpiY(self, int_screen=-1):
        """ QX11Info.appDpiY(int screen=-1) -> int """
        return 0

    # real signature unknown; restored from __doc__
    def appRootWindow(self, int_screen=-1):
        """ QX11Info.appRootWindow(int screen=-1) -> int """
        return 0

    def appScreen(self):  # real signature unknown; restored from __doc__
        """ QX11Info.appScreen() -> int """
        return 0

    def appTime(self):  # real signature unknown; restored from __doc__
        """ QX11Info.appTime() -> int """
        return 0

    def appUserTime(self):  # real signature unknown; restored from __doc__
        """ QX11Info.appUserTime() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def appVisual(self, int_screen=-1):
        """ QX11Info.appVisual(int screen=-1) -> sip.voidptr """
        pass

    def cells(self):  # real signature unknown; restored from __doc__
        """ QX11Info.cells() -> int """
        return 0

    def colormap(self):  # real signature unknown; restored from __doc__
        """ QX11Info.colormap() -> int """
        return 0

    def defaultColormap(self):  # real signature unknown; restored from __doc__
        """ QX11Info.defaultColormap() -> bool """
        return False

    def defaultVisual(self):  # real signature unknown; restored from __doc__
        """ QX11Info.defaultVisual() -> bool """
        return False

    def depth(self):  # real signature unknown; restored from __doc__
        """ QX11Info.depth() -> int """
        return 0

    def display(self):  # real signature unknown; restored from __doc__
        """ QX11Info.display() -> Display """
        return Display

    # real signature unknown; restored from __doc__
    def isCompositingManagerRunning(self):
        """ QX11Info.isCompositingManagerRunning() -> bool """
        return False

    def screen(self):  # real signature unknown; restored from __doc__
        """ QX11Info.screen() -> int """
        return 0

    # real signature unknown; restored from __doc__
    def setAppDpiX(self, p_int, p_int_1):
        """ QX11Info.setAppDpiX(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setAppDpiY(self, p_int, p_int_1):
        """ QX11Info.setAppDpiY(int, int) """
        pass

    # real signature unknown; restored from __doc__
    def setAppTime(self, p_int):
        """ QX11Info.setAppTime(int) """
        pass

    # real signature unknown; restored from __doc__
    def setAppUserTime(self, p_int):
        """ QX11Info.setAppUserTime(int) """
        pass

    def visual(self):  # real signature unknown; restored from __doc__
        """ QX11Info.visual() -> sip.voidptr """
        pass

    # real signature unknown; restored from __doc__ with multiple overloads
    def __init__(self, QX11Info=None):
        pass

    __weakref__ = property(lambda self: object())  # default


# variables with complex values

qApp = None  # (!) real value is ''
